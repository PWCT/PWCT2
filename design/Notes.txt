/*
**	Project : Programming Without Coding Technology (PWCT) Version 2.0
**	File Purpose :  Notes Document
**	Date : 2016.11.25
**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>
*/

(1) When we write code inside classes that use direct or indirect
inheritance from QWidget we can't use the find() function
because we have the find() method

Solution : std_find() , std_find2() and std_find3()

(2) To find icons
	http://findicons.com/search/transparent-delete-icon

(3) Error in Cut Steps contains children then paste from the start point
To produce the error
1 - create step "one" - copy paste
one
  one 
    one 
      one
Then
one
  one 
    one 
      one
one
  one 
    one 
      one

After that click cut cut cut and so on until the start point
then click paste

the error happens in this code
	func SubStepsList aList,oParentStep
		aList + oParentStep
		for x=1 to oParentStep.childcount() {
			oItem = oParentStep.child(x-1)	# here
			SubStepsList(aList,oItem)
		}

where a return is done and the event code execution is terminated
without any error messages !

when we comment the next code, we don't have this problem
	setCurrentItemChangedEvent($objname+".StepChangedAction()") 		

I think the problem is running an event during the execution of another event !
	This lead to a situation where the second event cancel the first event !

We avoided setCurrentItemChangedEvent() to avoid many problems and complexity.

(4) When we write code inside classes that use direct or indirect
inheritance from QWidget we can't use the raise() function
because we have the raise() method

Solution : std_raise()

(5) Working with QSlider or QDial works fine with
	setValueChangedEvent()
	But setActionTrigerredEvent() lead to more events that doesn't present
	the expected behaviour of limited events (moving in the limited range only)

(6) using {} after init() method requires that the init() method must
contains
		return self

(7) using substr()
		cSQL = substr(cSQL,"#{V1}", ""+record[C_TREEMODEL_NODEID]   )
	requires "" + to avoid data type error

(8) using substr() in
			cSQL = "INSERT INTO STEPSTREE (STEPID,PARENTID,NAME,ACTIVE,CODE,INTERACTIONID,VISIBLE)
         				VALUES (#{V1},#{V2},'#{V3}',#{V4},'#{V5}', #{V6},#{V7}); " 
			cSQL = substr(cSQL,"#{V1}", ""+record[C_TREEMODEL_NODEID]   )
			cSQL = substr(cSQL,"#{V2}", ""+record[C_TREEMODEL_PARENTID]  )
			cSQL = substr(cSQL,"#{V3}", record[C_TREEMODEL_CONTENT][:name]  )
			cSQL = substr(cSQL,"#{V4}", ""+record[C_TREEMODEL_CONTENT][:active]  )
			cSQL = substr(cSQL,"#{V5}", record[C_TREEMODEL_CONTENT][:code]  )
			cSQL = substr(cSQL,"#{V6}", ""+record[C_TREEMODEL_CONTENT][:interactionid]  )
			cSQL = substr(cSQL,"#{V7}", ""+record[C_TREEMODEL_CONTENT][:visible]  )
	Is slow !
	But after tests, it's not very slow the real problem was in (13)

(9) Using SQLite execute with many insert operations is very slow ! 
	This is solved using (begin) and (end) commands before execution 

(10) I was having a problem in loading the steps from the database
Then I discovered that each field value I get is a string ! 
And I need to convert from strings to numbers
		for x = 2 to len(aStepsTree) {
			nStepID      = 0+aStepsTree[x][1]
			nParentID   = 0+aStepsTree[x][2]
			cStepName  = aStepsTree[x][3][:name]
			oView.oStepsTree.AddStep(nParentID,nStepID,cStepName)					
		}
	Then i did this change in visualsource.ring

(11) I changed the objects library to use RingQt_nID instead of nID
	Because using nID in any method in any class that inherit from the objects classes
	Will lead to problem


(12) Generate Steps example

	func GenerateAction 
		oParent = GetParentStep()
		NewParentStep(:Test)
			NewStep(:one)
				SetStepCode("The one step code")
			NewStep(:two)
				SetStepCode("The two step code")
				oParent2 = GetActiveStep()
		SetActiveStep(oParent)
		NewParentStep(:Test2)
			NewStep(:one2)
				SetStepCode("The one step code")
			NewStep(:two2)
				SetStepCode("The two step code")
		SetActiveStep(oParent2)
		SetStepCode("Yes I'm the new code")
		SetActiveStep(oParent)
		NewParentStep("Print Text : " + Variable(:text))

(13)

A problem in this code
		oView.oStepsTree.font = oFont

solved by this code

			oView.oStepsTree.setFontObject(oFont)

The problem is that oStepsTree class contains the font attribute
		using oView.oStepsTree.font = oFont
		will call the SetFont() Method
While oStepsTree contains this methods by inheritance from QWidget class !

(14)

	in the class region
	when we uses braces
	Self point to the class object
	But we don't have a way to get the self object of the brace
	This may be necessary when we create objects in arrays then use braces

	Solution is to move the code to a method
	So we can pass self to setbtnimage()

	func CreateToolbar win
		aBtns = [
				new qpushbutton(win) { 
					setbtnimage(self,"images/new.png") 
					setclickevent(Method(:NewAction))
					settooltip("New File")
				} ,

(15) Using Anonymous functions in functions that called as action for events is bad
	this will let eval() don't delete the byte code after the function call
	because the anonymous function increase the functions count

(16) here	func CloseAction		
		PWCT_APP.Quit()
	we quit directly because closing the window first will delete the object
 and when this method is called from close event we get error !

(17) HERE I forget return !

	func GetParentComponentName
		GetParentComponentDetails()[1]

solved by

	func GetParentComponentName
		return GetParentComponentDetails()[1]

(18)
A good Rule in the Components Browser
Component = Leaf Nodes only 
Doamin Tree = Any Node contains Children 

(19)
I increased the performance of loading the components browser Tree
By creating new methods 
	init2()
	AddSerial2()
	Where we don't create new qLabel object for each item
	Also using setStylesheet() we can have 
		Font Size, Color & Icon for all items 
	Performance increased from 1.3 second to 0.3 second 
	while we have around 100 components 

(20)
	About QTreeWidgetItem performance 
	In this code 
	Using setitemwidget is what consumes most of the time 
	And using it without resize() on qLabel kill the performance !
	Using resize() decrease the time from over 2 seconds to just 0.18 second!

	v = new qTreeWidgetItem()
		l = new qLabel(win) { resize(10,10) } 
		l.settext("Item <b>" + t + '</b> <font color="blue">This is some text!</font>')
		root.addchild(v)
		tree.setitemwidget(v,0,l)
		 

(21)

Testing the performance with different Qt versions
Steps Count 		Qt 5.5		Qt 5.12
100			0.8		0.45 seconds	
500			4.2		2.36 seconds
1000			7.72		4.41 seconds
