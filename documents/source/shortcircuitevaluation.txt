.. index:: 
	single: Short Circuit Evaluation; Short Circuit Evaluation

========================
Short Circuit Evaluation
========================

In this chapter we are going to learn about the Short Circuit Evaluation

.. index:: 
	pair: Short Circuit Evaluation; Introduction

Introduction
============

We can create this program quickly using the Quick Start component

.. image:: images/shortcircuitevaluation/ib_quickstart_shortcircuitevaluation.png
        :alt: ib_quickstart_shortcircuitevaluation.png

.. index:: 
	pair: Short Circuit Evaluation; Program Steps

Program Steps
=============

After selecting the (Short Circuit Evaluation) template, we will get the next steps in the Goal Designer

.. image:: images/shortcircuitevaluation/gd_quickstart_shortcircuitevaluation.png
        :alt: gd_quickstart_shortcircuitevaluation.png

The Steps Tree:

.. code-block:: none

	x = 0
	y = 10
	Print Test 1 (New Line) 
	If (x = 0 AND nice()) AND (y = 10 AND nice())
		Print Great (New Line) 
	End of IF Statement
	Print Test 2 (New Line) 
	If (x = 1 AND nice()) AND (y = 10 AND nice())
		Print Great (New Line) 
	End of IF Statement
	Print Test 3 (New Line) 
	If (x = 0 AND nice()) OR (y = 10 AND nice())
		Print Great (New Line) 
	End of IF Statement
	function nice 
		Print Nice (New Line) 
		Return 1
	End of Function


.. index:: 
	pair: Short Circuit Evaluation; Creating the Program

Creating the Program
====================

To create this program we will use the next components

* Assignment
* Print Text
* If Statement
* Define Function
* Return

In the begining the Steps Tree is empty

.. image:: images/shortcircuitevaluation/1.png
		:alt: 1.png

Set x = 0 using the Assignment component

.. image:: images/shortcircuitevaluation/2.png
		:alt: 2.png

.. image:: images/shortcircuitevaluation/3.png
		:alt: 3.png

.. image:: images/shortcircuitevaluation/4.png
		:alt: 4.png

Set y = 10 using the Assignment component

.. image:: images/shortcircuitevaluation/5.png
		:alt: 5.png

.. image:: images/shortcircuitevaluation/6.png
		:alt: 6.png

.. image:: images/shortcircuitevaluation/7.png
		:alt: 7.png

Print (Test 1)

.. image:: images/shortcircuitevaluation/8.png
		:alt: 8.png

.. image:: images/shortcircuitevaluation/9.png
		:alt: 9.png

.. image:: images/shortcircuitevaluation/10.png
		:alt: 10.png

Test the condition: (x = 0 AND nice()) AND (y = 10 AND nice())

.. image:: images/shortcircuitevaluation/11.png
		:alt: 11.png

.. image:: images/shortcircuitevaluation/12.png
		:alt: 12.png

.. image:: images/shortcircuitevaluation/13.png
		:alt: 13.png

Print (Great)

.. image:: images/shortcircuitevaluation/14.png
		:alt: 14.png

.. image:: images/shortcircuitevaluation/15.png
		:alt: 15.png

.. image:: images/shortcircuitevaluation/16.png
		:alt: 16.png

Print (Test 2)

.. image:: images/shortcircuitevaluation/17.png
		:alt: 17.png

.. image:: images/shortcircuitevaluation/18.png
		:alt: 18.png

.. image:: images/shortcircuitevaluation/19.png
		:alt: 19.png

Check the condition: (x = 1 AND nice()) AND (y = 10 AND nice())

.. image:: images/shortcircuitevaluation/20.png
		:alt: 20.png

.. image:: images/shortcircuitevaluation/21.png
		:alt: 21.png

.. image:: images/shortcircuitevaluation/22.png
		:alt: 22.png

Print (Great)

.. image:: images/shortcircuitevaluation/23.png
		:alt: 23.png

.. image:: images/shortcircuitevaluation/24.png
		:alt: 24.png

.. image:: images/shortcircuitevaluation/25.png
		:alt: 25.png

Print (Test 3)

.. image:: images/shortcircuitevaluation/26.png
		:alt: 26.png

.. image:: images/shortcircuitevaluation/27.png
		:alt: 27.png

.. image:: images/shortcircuitevaluation/28.png
		:alt: 28.png

Check the condition: (x = 0 AND nice()) OR (y = 10 AND nice())

.. image:: images/shortcircuitevaluation/29.png
		:alt: 29.png

.. image:: images/shortcircuitevaluation/30.png
		:alt: 30.png

.. image:: images/shortcircuitevaluation/31.png
		:alt: 31.png

Print (Great)

.. image:: images/shortcircuitevaluation/32.png
		:alt: 32.png

.. image:: images/shortcircuitevaluation/33.png
		:alt: 33.png

.. image:: images/shortcircuitevaluation/34.png
		:alt: 34.png

Define the (Nice) function

.. image:: images/shortcircuitevaluation/35.png
		:alt: 35.png

.. image:: images/shortcircuitevaluation/36.png
		:alt: 36.png

.. image:: images/shortcircuitevaluation/37.png
		:alt: 37.png

Print (Nice)

.. image:: images/shortcircuitevaluation/38.png
		:alt: 38.png

.. image:: images/shortcircuitevaluation/39.png
		:alt: 39.png

.. image:: images/shortcircuitevaluation/40.png
		:alt: 40.png

Return (True) from the (Nice) function

.. image:: images/shortcircuitevaluation/41.png
		:alt: 41.png

.. image:: images/shortcircuitevaluation/42.png
		:alt: 42.png

Now we have the final Steps Tree in our program

.. image:: images/shortcircuitevaluation/43.png
		:alt: 43.png

