# Visual Source File 

cVisualSourceFileVersion = '1.0.0'
cVisualLanguageName      = 'RingPWCT'
cNaturalLanguageName     = 'english'
nStepsID                 = 17		
nInteractionsID          = 17

aStepsTable = [
	[
		1,
		0,
		[
			[
				"name",
				"Start Point"
			],
			[
				"active",
				1
			],
			[
				"code",
				""
			],
			[
				"interactionid",
				1
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			]
		]
	],
	[
		2,
		1,
		[
			[
				"name",
				"/*"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#/*
"
			],
			[
				"interactionid",
				2
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"/*"
			]
		]
	],
	[
		3,
		1,
		[
			[
				"name",
				"**	Project : Programming Without Coding Technology (PWCT) Version 2.0"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	Project : Programming Without Coding Technology (PWCT) Version 2.0
"
			],
			[
				"interactionid",
				3
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	Project : Programming Without Coding Technology (PWCT) Version 2.0"
			]
		]
	],
	[
		4,
		1,
		[
			[
				"name",
				"**	File Purpose :  qlistwidgetclass Component"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	File Purpose :  qlistwidgetclass Component
"
			],
			[
				"interactionid",
				4
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	File Purpose :  qlistwidgetclass Component"
			]
		]
	],
	[
		5,
		1,
		[
			[
				"name",
				"**	Date : 2018.03.14"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	Date : 2018.03.14
"
			],
			[
				"interactionid",
				5
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	Date : 2018.03.14"
			]
		]
	],
	[
		6,
		1,
		[
			[
				"name",
				"**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>
"
			],
			[
				"interactionid",
				6
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	Author :  Mahmoud Fayed "
			]
		]
	],
	[
		7,
		1,
		[
			[
				"name",
				"*/"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#*/
"
			],
			[
				"interactionid",
				7
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"*/"
			]
		]
	],
	[
		8,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_TITLE</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;ListWidget&nbsp;Class&nbsp;Component&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_TITLE = "+char(34)+"ListWidget Class Component"+char(34)+""
			],
			[
				"interactionid",
				8
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_TITLE = "+char(34)+"ListWidget Class Component"+char(34)+""
			]
		]
	],
	[
		9,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Object&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE = "+char(34)+"Object"+char(34)+""
			],
			[
				"interactionid",
				9
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE = "+char(34)+"Object"+char(34)+""
			]
		]
	],
	[
		10,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE_STARTVALUE</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;ListWidget1&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE_STARTVALUE = "+char(34)+"ListWidget1"+char(34)+""
			],
			[
				"interactionid",
				10
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE_STARTVALUE = "+char(34)+"ListWidget1"+char(34)+""
			]
		]
	],
	[
		11,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE2</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Method&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2 = "+char(34)+"Method"+char(34)+""
			],
			[
				"interactionid",
				11
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2 = "+char(34)+"Method"+char(34)+""
			]
		]
	],
	[
		12,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">[&quot;acceptdrops&quot;,&quot;accessibledescription&quot;,&quot;accessiblename&quot;,&quot;activatewindow&quot;,&quot;addaction&quot;,&quot;additem&quot;,&quot;addscrollbarwidget&quot;,&quot;adjustsize&quot;,&quot;alternatingrowcolors&quot;,&quot;autofillbackground&quot;,&quot;autoscrollmargin&quot;,&quot;backgroundrole&quot;,&quot;basesize&quot;,&quot;batchsize&quot;,&quot;blocksignals&quot;,&quot;childat&quot;,&quot;children&quot;,&quot;childrenrect&quot;,&quot;childrenregion&quot;,&quot;clear&quot;,&quot;clearfocus&quot;,&quot;clearmask&quot;,&quot;clearpropertyflags&quot;,&quot;clearselection&quot;,&quot;close&quot;,&quot;closepersistenteditor&quot;,&quot;contentsmargins&quot;,&quot;contentsrect&quot;,&quot;contextmenupolicy&quot;,&quot;cornerwidget&quot;,&quot;count&quot;,&quot;createwindowcontainer&quot;,&quot;currentindex&quot;,&quot;currentrow&quot;,&quot;cursor&quot;,&quot;defaultdropaction&quot;,&quot;delete&quot;,&quot;deletelater&quot;,&quot;dragdropmode&quot;,&quot;dragdropoverwritemode&quot;,&quot;dragenabled&quot;,&quot;dumpobjectinfo&quot;,&quot;dumpobjecttree&quot;,&quot;edit&quot;,&quot;edititem&quot;,&quot;edittriggers&quot;,&quot;effectivewinid&quot;,&quot;ensurepolished&quot;,&quot;find&quot;,&quot;flow&quot;,&quot;focuspolicy&quot;,&quot;focusproxy&quot;,&quot;focuswidget&quot;,&quot;font&quot;,&quot;fontinfo&quot;,&quot;foregroundrole&quot;,&quot;framegeometry&quot;,&quot;framerect&quot;,&quot;frameshadow&quot;,&quot;frameshape&quot;,&quot;framesize&quot;,&quot;framestyle&quot;,&quot;framewidth&quot;,&quot;geometry&quot;,&quot;getcontentsmargins&quot;,&quot;getcurrentitemchangedevent&quot;,&quot;getcurrentrowchangedevent&quot;,&quot;getcurrenttextchangedevent&quot;,&quot;getitemactivatedevent&quot;,&quot;getitemchangedevent&quot;,&quot;getitemclickedevent&quot;,&quot;getitemdoubleclickedevent&quot;,&quot;getitementeredevent&quot;,&quot;getitempressedevent&quot;,&quot;getitemselectionchangedevent&quot;,&quot;grab&quot;,&quot;grabgesture&quot;,&quot;grabkeyboard&quot;,&quot;grabmouse&quot;,&quot;grabshortcut&quot;,&quot;graphicseffect&quot;,&quot;graphicsproxywidget&quot;,&quot;gridsize&quot;,&quot;hasautoscroll&quot;,&quot;hasfocus&quot;,&quot;hasmousetracking&quot;,&quot;height&quot;,&quot;heightforwidth&quot;,&quot;hide&quot;,&quot;horizontalscrollbar&quot;,&quot;horizontalscrollbarpolicy&quot;,&quot;horizontalscrollmode&quot;,&quot;iconsize&quot;,&quot;indexat&quot;,&quot;indexwidget&quot;,&quot;inherits&quot;,&quot;init&quot;,&quot;inputmethodhints&quot;,&quot;inputmethodquery&quot;,&quot;insertaction&quot;,&quot;insertitem&quot;,&quot;installeventfilter&quot;,&quot;isactivewindow&quot;,&quot;isancestorof&quot;,&quot;isenabled&quot;,&quot;isenabledto&quot;,&quot;isfullscreen&quot;,&quot;ishidden&quot;,&quot;ismaximized&quot;,&quot;isminimized&quot;,&quot;ismodal&quot;,&quot;isrowhidden&quot;,&quot;isselectionrectvisible&quot;,&quot;issortingenabled&quot;,&quot;isvisible&quot;,&quot;isvisibleto&quot;,&quot;iswidgettype&quot;,&quot;iswindow&quot;,&quot;iswindowmodified&quot;,&quot;iswrapping&quot;,&quot;item&quot;,&quot;itemat&quot;,&quot;itemdelegate&quot;,&quot;itemdelegateforcolumn&quot;,&quot;itemdelegateforrow&quot;,&quot;itemwidget&quot;,&quot;keyboardgrabber&quot;,&quot;keyboardsearch&quot;,&quot;killtimer&quot;,&quot;layout&quot;,&quot;layoutdirection&quot;,&quot;layoutmode&quot;,&quot;linewidth&quot;,&quot;locale&quot;,&quot;lower&quot;,&quot;mapfrom&quot;,&quot;mapfromglobal&quot;,&quot;mapfromparent&quot;,&quot;mapto&quot;,&quot;maptoglobal&quot;,&quot;maptoparent&quot;,&quot;mask&quot;,&quot;maximumheight&quot;,&quot;maximumsize&quot;,&quot;maximumviewportsize&quot;,&quot;maximumwidth&quot;,&quot;midlinewidth&quot;,&quot;minimumheight&quot;,&quot;minimumsize&quot;,&quot;minimumwidth&quot;,&quot;model&quot;,&quot;modelcolumn&quot;,&quot;mousegrabber&quot;,&quot;move&quot;,&quot;movement&quot;,&quot;movetothread&quot;,&quot;nativeparentwidget&quot;,&quot;nextinfocuschain&quot;,&quot;normalgeometry&quot;,&quot;objectname&quot;,&quot;objectpointer&quot;,&quot;openpersistenteditor&quot;,&quot;overridewindowflags&quot;,&quot;palette&quot;,&quot;parent&quot;,&quot;parentwidget&quot;,&quot;pos&quot;,&quot;previousinfocuschain&quot;,&quot;property&quot;,&quot;raise&quot;,&quot;rect&quot;,&quot;releasekeyboard&quot;,&quot;releasemouse&quot;,&quot;releaseshortcut&quot;,&quot;removeaction&quot;,&quot;removeeventfilter&quot;,&quot;removeitemwidget&quot;,&quot;render&quot;,&quot;repaint&quot;,&quot;resize&quot;,&quot;resizemode&quot;,&quot;restoregeometry&quot;,&quot;rootindex&quot;,&quot;row&quot;,&quot;savegeometry&quot;,&quot;scroll&quot;,&quot;scrollbarwidgets&quot;,&quot;scrollto&quot;,&quot;scrolltobottom&quot;,&quot;scrolltoitem&quot;,&quot;scrolltotop&quot;,&quot;selectionbehavior&quot;,&quot;selectionmode&quot;,&quot;selectionmodel&quot;,&quot;setacceptdrops&quot;,&quot;setaccessibledescription&quot;,&quot;setaccessiblename&quot;,&quot;setalternatingrowcolors&quot;,&quot;setattribute&quot;,&quot;setautofillbackground&quot;,&quot;setautoscroll&quot;,&quot;setautoscrollmargin&quot;,&quot;setbackgroundrole&quot;,&quot;setbasesize&quot;,&quot;setbatchsize&quot;,&quot;setcontentsmargins&quot;,&quot;setcontextmenupolicy&quot;,&quot;setcornerwidget&quot;,&quot;setcurrentindex&quot;,&quot;setcurrentitem&quot;,&quot;setcurrentitemchangedevent&quot;,&quot;setcurrentrow&quot;,&quot;setcurrentrowchangedevent&quot;,&quot;setcurrenttextchangedevent&quot;,&quot;setcursor&quot;,&quot;setdefaultdropaction&quot;,&quot;setdisabled&quot;,&quot;setdragdropmode&quot;,&quot;setdragdropoverwritemode&quot;,&quot;setdragenabled&quot;,&quot;setdropindicatorshown&quot;,&quot;setedittriggers&quot;,&quot;setenabled&quot;,&quot;setfixedheight&quot;,&quot;setfixedsize&quot;,&quot;setfixedwidth&quot;,&quot;setflow&quot;,&quot;setfocus&quot;,&quot;setfocuspolicy&quot;,&quot;setfocusproxy&quot;,&quot;setfont&quot;,&quot;setforegroundrole&quot;,&quot;setframerect&quot;,&quot;setframeshadow&quot;,&quot;setframeshape&quot;,&quot;setframestyle&quot;,&quot;setgeometry&quot;,&quot;setgraphicseffect&quot;,&quot;setgridsize&quot;,&quot;sethidden&quot;,&quot;sethorizontalscrollbar&quot;,&quot;sethorizontalscrollbarpolicy&quot;,&quot;sethorizontalscrollmode&quot;,&quot;seticonsize&quot;,&quot;setindexwidget&quot;,&quot;setinputmethodhints&quot;,&quot;setitemactivatedevent&quot;,&quot;setitemchangedevent&quot;,&quot;setitemclickedevent&quot;,&quot;setitemdelegate&quot;,&quot;setitemdelegateforcolumn&quot;,&quot;setitemdelegateforrow&quot;,&quot;setitemdoubleclickedevent&quot;,&quot;setitementeredevent&quot;,&quot;setitempressedevent&quot;,&quot;setitemselectionchangedevent&quot;,&quot;setitemwidget&quot;,&quot;setlayout&quot;,&quot;setlayoutdirection&quot;,&quot;setlayoutmode&quot;,&quot;setlinewidth&quot;,&quot;setlocale&quot;,&quot;setmask&quot;,&quot;setmaximumheight&quot;,&quot;setmaximumsize&quot;,&quot;setmaximumwidth&quot;,&quot;setmidlinewidth&quot;,&quot;setminimumheight&quot;,&quot;setminimumsize&quot;,&quot;setminimumwidth&quot;,&quot;setmodel&quot;,&quot;setmodelcolumn&quot;,&quot;setmousetracking&quot;,&quot;setmovement&quot;,&quot;setobjectname&quot;,&quot;setpalette&quot;,&quot;setparent&quot;,&quot;setproperty&quot;,&quot;setproperty_2&quot;,&quot;setproperty_3&quot;,&quot;setproperty_4&quot;,&quot;setproperty_5&quot;,&quot;setproperty_double&quot;,&quot;setproperty_float&quot;,&quot;setproperty_int&quot;,&quot;setproperty_string&quot;,&quot;setresizemode&quot;,&quot;setrowhidden&quot;,&quot;setselectionbehavior&quot;,&quot;setselectionmode&quot;,&quot;setselectionmodel&quot;,&quot;setselectionrectvisible&quot;,&quot;setshortcutautorepeat&quot;,&quot;setshortcutenabled&quot;,&quot;setsizeincrement&quot;,&quot;setsizepolicy&quot;,&quot;setsortingenabled&quot;,&quot;setspacing&quot;,&quot;setstatustip&quot;,&quot;setstyle&quot;,&quot;setstylesheet&quot;,&quot;settabkeynavigation&quot;,&quot;settaborder&quot;,&quot;settextelidemode&quot;,&quot;settooltip&quot;,&quot;setuniformitemsizes&quot;,&quot;setupdatesenabled&quot;,&quot;setverticalscrollbar&quot;,&quot;setverticalscrollbarpolicy&quot;,&quot;setverticalscrollmode&quot;,&quot;setviewmode&quot;,&quot;setviewport&quot;,&quot;setwhatsthis&quot;,&quot;setwindowfilepath&quot;,&quot;setwindowflags&quot;,&quot;setwindowicon&quot;,&quot;setwindowicontext&quot;,&quot;setwindowmodality&quot;,&quot;setwindowmodified&quot;,&quot;setwindowopacity&quot;,&quot;setwindowrole&quot;,&quot;setwindowstate&quot;,&quot;setwindowtitle&quot;,&quot;setwordwrap&quot;,&quot;setwrapping&quot;,&quot;show&quot;,&quot;showdropindicator&quot;,&quot;showfullscreen&quot;,&quot;showmaximized&quot;,&quot;showminimized&quot;,&quot;shownormal&quot;,&quot;signalsblocked&quot;,&quot;size&quot;,&quot;sizehint&quot;,&quot;sizehintforcolumn&quot;,&quot;sizehintforindex&quot;,&quot;sizehintforrow&quot;,&quot;sizeincrement&quot;,&quot;sizepolicy&quot;,&quot;sortitems&quot;,&quot;spacing&quot;,&quot;stackunder&quot;,&quot;starttimer&quot;,&quot;statustip&quot;,&quot;style&quot;,&quot;stylesheet&quot;,&quot;tabkeynavigation&quot;,&quot;takeitem&quot;,&quot;testattribute&quot;,&quot;textelidemode&quot;,&quot;thread&quot;,&quot;tooltip&quot;,&quot;undermouse&quot;,&quot;ungrabgesture&quot;,&quot;uniformitemsizes&quot;,&quot;unsetcursor&quot;,&quot;unsetlayoutdirection&quot;,&quot;unsetlocale&quot;,&quot;update&quot;,&quot;updategeometry&quot;,&quot;updatesenabled&quot;,&quot;verticalscrollbar&quot;,&quot;verticalscrollbarpolicy&quot;,&quot;verticalscrollmode&quot;,&quot;viewmode&quot;,&quot;viewport&quot;,&quot;visibleregion&quot;,&quot;visualitemrect&quot;,&quot;visualrect&quot;,&quot;whatsthis&quot;,&quot;width&quot;,&quot;window&quot;,&quot;windowfilepath&quot;,&quot;windowflags&quot;,&quot;windowhandle&quot;,&quot;windowicon&quot;,&quot;windowicontext&quot;,&quot;windowmodality&quot;,&quot;windowopacity&quot;,&quot;windowrole&quot;,&quot;windowstate&quot;,&quot;windowtitle&quot;,&quot;windowtype&quot;,&quot;winid&quot;,&quot;wordwrap&quot;,&quot;x&quot;,&quot;y&quot;]</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC = ["+char(34)+"acceptdrops"+char(34)+","+char(34)+"accessibledescription"+char(34)+","+char(34)+"accessiblename"+char(34)+","+char(34)+"activatewindow"+char(34)+","+char(34)+"addaction"+char(34)+","+char(34)+"additem"+char(34)+","+char(34)+"addscrollbarwidget"+char(34)+","+char(34)+"adjustsize"+char(34)+","+char(34)+"alternatingrowcolors"+char(34)+","+char(34)+"autofillbackground"+char(34)+","+char(34)+"autoscrollmargin"+char(34)+","+char(34)+"backgroundrole"+char(34)+","+char(34)+"basesize"+char(34)+","+char(34)+"batchsize"+char(34)+","+char(34)+"blocksignals"+char(34)+","+char(34)+"childat"+char(34)+","+char(34)+"children"+char(34)+","+char(34)+"childrenrect"+char(34)+","+char(34)+"childrenregion"+char(34)+","+char(34)+"clear"+char(34)+","+char(34)+"clearfocus"+char(34)+","+char(34)+"clearmask"+char(34)+","+char(34)+"clearpropertyflags"+char(34)+","+char(34)+"clearselection"+char(34)+","+char(34)+"close"+char(34)+","+char(34)+"closepersistenteditor"+char(34)+","+char(34)+"contentsmargins"+char(34)+","+char(34)+"contentsrect"+char(34)+","+char(34)+"contextmenupolicy"+char(34)+","+char(34)+"cornerwidget"+char(34)+","+char(34)+"count"+char(34)+","+char(34)+"createwindowcontainer"+char(34)+","+char(34)+"currentindex"+char(34)+","+char(34)+"currentrow"+char(34)+","+char(34)+"cursor"+char(34)+","+char(34)+"defaultdropaction"+char(34)+","+char(34)+"delete"+char(34)+","+char(34)+"deletelater"+char(34)+","+char(34)+"dragdropmode"+char(34)+","+char(34)+"dragdropoverwritemode"+char(34)+","+char(34)+"dragenabled"+char(34)+","+char(34)+"dumpobjectinfo"+char(34)+","+char(34)+"dumpobjecttree"+char(34)+","+char(34)+"edit"+char(34)+","+char(34)+"edititem"+char(34)+","+char(34)+"edittriggers"+char(34)+","+char(34)+"effectivewinid"+char(34)+","+char(34)+"ensurepolished"+char(34)+","+char(34)+"find"+char(34)+","+char(34)+"flow"+char(34)+","+char(34)+"focuspolicy"+char(34)+","+char(34)+"focusproxy"+char(34)+","+char(34)+"focuswidget"+char(34)+","+char(34)+"font"+char(34)+","+char(34)+"fontinfo"+char(34)+","+char(34)+"foregroundrole"+char(34)+","+char(34)+"framegeometry"+char(34)+","+char(34)+"framerect"+char(34)+","+char(34)+"frameshadow"+char(34)+","+char(34)+"frameshape"+char(34)+","+char(34)+"framesize"+char(34)+","+char(34)+"framestyle"+char(34)+","+char(34)+"framewidth"+char(34)+","+char(34)+"geometry"+char(34)+","+char(34)+"getcontentsmargins"+char(34)+","+char(34)+"getcurrentitemchangedevent"+char(34)+","+char(34)+"getcurrentrowchangedevent"+char(34)+","+char(34)+"getcurrenttextchangedevent"+char(34)+","+char(34)+"getitemactivatedevent"+char(34)+","+char(34)+"getitemchangedevent"+char(34)+","+char(34)+"getitemclickedevent"+char(34)+","+char(34)+"getitemdoubleclickedevent"+char(34)+","+char(34)+"getitementeredevent"+char(34)+","+char(34)+"getitempressedevent"+char(34)+","+char(34)+"getitemselectionchangedevent"+char(34)+","+char(34)+"grab"+char(34)+","+char(34)+"grabgesture"+char(34)+","+char(34)+"grabkeyboard"+char(34)+","+char(34)+"grabmouse"+char(34)+","+char(34)+"grabshortcut"+char(34)+","+char(34)+"graphicseffect"+char(34)+","+char(34)+"graphicsproxywidget"+char(34)+","+char(34)+"gridsize"+char(34)+","+char(34)+"hasautoscroll"+char(34)+","+char(34)+"hasfocus"+char(34)+","+char(34)+"hasmousetracking"+char(34)+","+char(34)+"height"+char(34)+","+char(34)+"heightforwidth"+char(34)+","+char(34)+"hide"+char(34)+","+char(34)+"horizontalscrollbar"+char(34)+","+char(34)+"horizontalscrollbarpolicy"+char(34)+","+char(34)+"horizontalscrollmode"+char(34)+","+char(34)+"iconsize"+char(34)+","+char(34)+"indexat"+char(34)+","+char(34)+"indexwidget"+char(34)+","+char(34)+"inherits"+char(34)+","+char(34)+"init"+char(34)+","+char(34)+"inputmethodhints"+char(34)+","+char(34)+"inputmethodquery"+char(34)+","+char(34)+"insertaction"+char(34)+","+char(34)+"insertitem"+char(34)+","+char(34)+"installeventfilter"+char(34)+","+char(34)+"isactivewindow"+char(34)+","+char(34)+"isancestorof"+char(34)+","+char(34)+"isenabled"+char(34)+","+char(34)+"isenabledto"+char(34)+","+char(34)+"isfullscreen"+char(34)+","+char(34)+"ishidden"+char(34)+","+char(34)+"ismaximized"+char(34)+","+char(34)+"isminimized"+char(34)+","+char(34)+"ismodal"+char(34)+","+char(34)+"isrowhidden"+char(34)+","+char(34)+"isselectionrectvisible"+char(34)+","+char(34)+"issortingenabled"+char(34)+","+char(34)+"isvisible"+char(34)+","+char(34)+"isvisibleto"+char(34)+","+char(34)+"iswidgettype"+char(34)+","+char(34)+"iswindow"+char(34)+","+char(34)+"iswindowmodified"+char(34)+","+char(34)+"iswrapping"+char(34)+","+char(34)+"item"+char(34)+","+char(34)+"itemat"+char(34)+","+char(34)+"itemdelegate"+char(34)+","+char(34)+"itemdelegateforcolumn"+char(34)+","+char(34)+"itemdelegateforrow"+char(34)+","+char(34)+"itemwidget"+char(34)+","+char(34)+"keyboardgrabber"+char(34)+","+char(34)+"keyboardsearch"+char(34)+","+char(34)+"killtimer"+char(34)+","+char(34)+"layout"+char(34)+","+char(34)+"layoutdirection"+char(34)+","+char(34)+"layoutmode"+char(34)+","+char(34)+"linewidth"+char(34)+","+char(34)+"locale"+char(34)+","+char(34)+"lower"+char(34)+","+char(34)+"mapfrom"+char(34)+","+char(34)+"mapfromglobal"+char(34)+","+char(34)+"mapfromparent"+char(34)+","+char(34)+"mapto"+char(34)+","+char(34)+"maptoglobal"+char(34)+","+char(34)+"maptoparent"+char(34)+","+char(34)+"mask"+char(34)+","+char(34)+"maximumheight"+char(34)+","+char(34)+"maximumsize"+char(34)+","+char(34)+"maximumviewportsize"+char(34)+","+char(34)+"maximumwidth"+char(34)+","+char(34)+"midlinewidth"+char(34)+","+char(34)+"minimumheight"+char(34)+","+char(34)+"minimumsize"+char(34)+","+char(34)+"minimumwidth"+char(34)+","+char(34)+"model"+char(34)+","+char(34)+"modelcolumn"+char(34)+","+char(34)+"mousegrabber"+char(34)+","+char(34)+"move"+char(34)+","+char(34)+"movement"+char(34)+","+char(34)+"movetothread"+char(34)+","+char(34)+"nativeparentwidget"+char(34)+","+char(34)+"nextinfocuschain"+char(34)+","+char(34)+"normalgeometry"+char(34)+","+char(34)+"objectname"+char(34)+","+char(34)+"objectpointer"+char(34)+","+char(34)+"openpersistenteditor"+char(34)+","+char(34)+"overridewindowflags"+char(34)+","+char(34)+"palette"+char(34)+","+char(34)+"parent"+char(34)+","+char(34)+"parentwidget"+char(34)+","+char(34)+"pos"+char(34)+","+char(34)+"previousinfocuschain"+char(34)+","+char(34)+"property"+char(34)+","+char(34)+"raise"+char(34)+","+char(34)+"rect"+char(34)+","+char(34)+"releasekeyboard"+char(34)+","+char(34)+"releasemouse"+char(34)+","+char(34)+"releaseshortcut"+char(34)+","+char(34)+"removeaction"+char(34)+","+char(34)+"removeeventfilter"+char(34)+","+char(34)+"removeitemwidget"+char(34)+","+char(34)+"render"+char(34)+","+char(34)+"repaint"+char(34)+","+char(34)+"resize"+char(34)+","+char(34)+"resizemode"+char(34)+","+char(34)+"restoregeometry"+char(34)+","+char(34)+"rootindex"+char(34)+","+char(34)+"row"+char(34)+","+char(34)+"savegeometry"+char(34)+","+char(34)+"scroll"+char(34)+","+char(34)+"scrollbarwidgets"+char(34)+","+char(34)+"scrollto"+char(34)+","+char(34)+"scrolltobottom"+char(34)+","+char(34)+"scrolltoitem"+char(34)+","+char(34)+"scrolltotop"+char(34)+","+char(34)+"selectionbehavior"+char(34)+","+char(34)+"selectionmode"+char(34)+","+char(34)+"selectionmodel"+char(34)+","+char(34)+"setacceptdrops"+char(34)+","+char(34)+"setaccessibledescription"+char(34)+","+char(34)+"setaccessiblename"+char(34)+","+char(34)+"setalternatingrowcolors"+char(34)+","+char(34)+"setattribute"+char(34)+","+char(34)+"setautofillbackground"+char(34)+","+char(34)+"setautoscroll"+char(34)+","+char(34)+"setautoscrollmargin"+char(34)+","+char(34)+"setbackgroundrole"+char(34)+","+char(34)+"setbasesize"+char(34)+","+char(34)+"setbatchsize"+char(34)+","+char(34)+"setcontentsmargins"+char(34)+","+char(34)+"setcontextmenupolicy"+char(34)+","+char(34)+"setcornerwidget"+char(34)+","+char(34)+"setcurrentindex"+char(34)+","+char(34)+"setcurrentitem"+char(34)+","+char(34)+"setcurrentitemchangedevent"+char(34)+","+char(34)+"setcurrentrow"+char(34)+","+char(34)+"setcurrentrowchangedevent"+char(34)+","+char(34)+"setcurrenttextchangedevent"+char(34)+","+char(34)+"setcursor"+char(34)+","+char(34)+"setdefaultdropaction"+char(34)+","+char(34)+"setdisabled"+char(34)+","+char(34)+"setdragdropmode"+char(34)+","+char(34)+"setdragdropoverwritemode"+char(34)+","+char(34)+"setdragenabled"+char(34)+","+char(34)+"setdropindicatorshown"+char(34)+","+char(34)+"setedittriggers"+char(34)+","+char(34)+"setenabled"+char(34)+","+char(34)+"setfixedheight"+char(34)+","+char(34)+"setfixedsize"+char(34)+","+char(34)+"setfixedwidth"+char(34)+","+char(34)+"setflow"+char(34)+","+char(34)+"setfocus"+char(34)+","+char(34)+"setfocuspolicy"+char(34)+","+char(34)+"setfocusproxy"+char(34)+","+char(34)+"setfont"+char(34)+","+char(34)+"setforegroundrole"+char(34)+","+char(34)+"setframerect"+char(34)+","+char(34)+"setframeshadow"+char(34)+","+char(34)+"setframeshape"+char(34)+","+char(34)+"setframestyle"+char(34)+","+char(34)+"setgeometry"+char(34)+","+char(34)+"setgraphicseffect"+char(34)+","+char(34)+"setgridsize"+char(34)+","+char(34)+"sethidden"+char(34)+","+char(34)+"sethorizontalscrollbar"+char(34)+","+char(34)+"sethorizontalscrollbarpolicy"+char(34)+","+char(34)+"sethorizontalscrollmode"+char(34)+","+char(34)+"seticonsize"+char(34)+","+char(34)+"setindexwidget"+char(34)+","+char(34)+"setinputmethodhints"+char(34)+","+char(34)+"setitemactivatedevent"+char(34)+","+char(34)+"setitemchangedevent"+char(34)+","+char(34)+"setitemclickedevent"+char(34)+","+char(34)+"setitemdelegate"+char(34)+","+char(34)+"setitemdelegateforcolumn"+char(34)+","+char(34)+"setitemdelegateforrow"+char(34)+","+char(34)+"setitemdoubleclickedevent"+char(34)+","+char(34)+"setitementeredevent"+char(34)+","+char(34)+"setitempressedevent"+char(34)+","+char(34)+"setitemselectionchangedevent"+char(34)+","+char(34)+"setitemwidget"+char(34)+","+char(34)+"setlayout"+char(34)+","+char(34)+"setlayoutdirection"+char(34)+","+char(34)+"setlayoutmode"+char(34)+","+char(34)+"setlinewidth"+char(34)+","+char(34)+"setlocale"+char(34)+","+char(34)+"setmask"+char(34)+","+char(34)+"setmaximumheight"+char(34)+","+char(34)+"setmaximumsize"+char(34)+","+char(34)+"setmaximumwidth"+char(34)+","+char(34)+"setmidlinewidth"+char(34)+","+char(34)+"setminimumheight"+char(34)+","+char(34)+"setminimumsize"+char(34)+","+char(34)+"setminimumwidth"+char(34)+","+char(34)+"setmodel"+char(34)+","+char(34)+"setmodelcolumn"+char(34)+","+char(34)+"setmousetracking"+char(34)+","+char(34)+"setmovement"+char(34)+","+char(34)+"setobjectname"+char(34)+","+char(34)+"setpalette"+char(34)+","+char(34)+"setparent"+char(34)+","+char(34)+"setproperty"+char(34)+","+char(34)+"setproperty_2"+char(34)+","+char(34)+"setproperty_3"+char(34)+","+char(34)+"setproperty_4"+char(34)+","+char(34)+"setproperty_5"+char(34)+","+char(34)+"setproperty_double"+char(34)+","+char(34)+"setproperty_float"+char(34)+","+char(34)+"setproperty_int"+char(34)+","+char(34)+"setproperty_string"+char(34)+","+char(34)+"setresizemode"+char(34)+","+char(34)+"setrowhidden"+char(34)+","+char(34)+"setselectionbehavior"+char(34)+","+char(34)+"setselectionmode"+char(34)+","+char(34)+"setselectionmodel"+char(34)+","+char(34)+"setselectionrectvisible"+char(34)+","+char(34)+"setshortcutautorepeat"+char(34)+","+char(34)+"setshortcutenabled"+char(34)+","+char(34)+"setsizeincrement"+char(34)+","+char(34)+"setsizepolicy"+char(34)+","+char(34)+"setsortingenabled"+char(34)+","+char(34)+"setspacing"+char(34)+","+char(34)+"setstatustip"+char(34)+","+char(34)+"setstyle"+char(34)+","+char(34)+"setstylesheet"+char(34)+","+char(34)+"settabkeynavigation"+char(34)+","+char(34)+"settaborder"+char(34)+","+char(34)+"settextelidemode"+char(34)+","+char(34)+"settooltip"+char(34)+","+char(34)+"setuniformitemsizes"+char(34)+","+char(34)+"setupdatesenabled"+char(34)+","+char(34)+"setverticalscrollbar"+char(34)+","+char(34)+"setverticalscrollbarpolicy"+char(34)+","+char(34)+"setverticalscrollmode"+char(34)+","+char(34)+"setviewmode"+char(34)+","+char(34)+"setviewport"+char(34)+","+char(34)+"setwhatsthis"+char(34)+","+char(34)+"setwindowfilepath"+char(34)+","+char(34)+"setwindowflags"+char(34)+","+char(34)+"setwindowicon"+char(34)+","+char(34)+"setwindowicontext"+char(34)+","+char(34)+"setwindowmodality"+char(34)+","+char(34)+"setwindowmodified"+char(34)+","+char(34)+"setwindowopacity"+char(34)+","+char(34)+"setwindowrole"+char(34)+","+char(34)+"setwindowstate"+char(34)+","+char(34)+"setwindowtitle"+char(34)+","+char(34)+"setwordwrap"+char(34)+","+char(34)+"setwrapping"+char(34)+","+char(34)+"show"+char(34)+","+char(34)+"showdropindicator"+char(34)+","+char(34)+"showfullscreen"+char(34)+","+char(34)+"showmaximized"+char(34)+","+char(34)+"showminimized"+char(34)+","+char(34)+"shownormal"+char(34)+","+char(34)+"signalsblocked"+char(34)+","+char(34)+"size"+char(34)+","+char(34)+"sizehint"+char(34)+","+char(34)+"sizehintforcolumn"+char(34)+","+char(34)+"sizehintforindex"+char(34)+","+char(34)+"sizehintforrow"+char(34)+","+char(34)+"sizeincrement"+char(34)+","+char(34)+"sizepolicy"+char(34)+","+char(34)+"sortitems"+char(34)+","+char(34)+"spacing"+char(34)+","+char(34)+"stackunder"+char(34)+","+char(34)+"starttimer"+char(34)+","+char(34)+"statustip"+char(34)+","+char(34)+"style"+char(34)+","+char(34)+"stylesheet"+char(34)+","+char(34)+"tabkeynavigation"+char(34)+","+char(34)+"takeitem"+char(34)+","+char(34)+"testattribute"+char(34)+","+char(34)+"textelidemode"+char(34)+","+char(34)+"thread"+char(34)+","+char(34)+"tooltip"+char(34)+","+char(34)+"undermouse"+char(34)+","+char(34)+"ungrabgesture"+char(34)+","+char(34)+"uniformitemsizes"+char(34)+","+char(34)+"unsetcursor"+char(34)+","+char(34)+"unsetlayoutdirection"+char(34)+","+char(34)+"unsetlocale"+char(34)+","+char(34)+"update"+char(34)+","+char(34)+"updategeometry"+char(34)+","+char(34)+"updatesenabled"+char(34)+","+char(34)+"verticalscrollbar"+char(34)+","+char(34)+"verticalscrollbarpolicy"+char(34)+","+char(34)+"verticalscrollmode"+char(34)+","+char(34)+"viewmode"+char(34)+","+char(34)+"viewport"+char(34)+","+char(34)+"visibleregion"+char(34)+","+char(34)+"visualitemrect"+char(34)+","+char(34)+"visualrect"+char(34)+","+char(34)+"whatsthis"+char(34)+","+char(34)+"width"+char(34)+","+char(34)+"window"+char(34)+","+char(34)+"windowfilepath"+char(34)+","+char(34)+"windowflags"+char(34)+","+char(34)+"windowhandle"+char(34)+","+char(34)+"windowicon"+char(34)+","+char(34)+"windowicontext"+char(34)+","+char(34)+"windowmodality"+char(34)+","+char(34)+"windowopacity"+char(34)+","+char(34)+"windowrole"+char(34)+","+char(34)+"windowstate"+char(34)+","+char(34)+"windowtitle"+char(34)+","+char(34)+"windowtype"+char(34)+","+char(34)+"winid"+char(34)+","+char(34)+"wordwrap"+char(34)+","+char(34)+"x"+char(34)+","+char(34)+"y"+char(34)+"]"
			],
			[
				"interactionid",
				12
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC = ["+char(34)+"acceptdrops"+char(34)+","+char(34)+"accessibledescription"+char(34)+","+char(34)+"accessiblename"+char(34)+","+char(34)+"activatewindow"+char(34)+","+char(34)+"addaction"+char(34)+","+char(34)+"additem"+char(34)+","+char(34)+"addscrollbarwidget"+char(34)+","+char(34)+"adjustsize"+char(34)+","+char(34)+"alternatingrowcolors"+char(34)+","+char(34)+"autofillbackground"+char(34)+","+char(34)+"autoscrollmargin"+char(34)+","+char(34)+"backgroundrole"+char(34)+","+char(34)+"basesize"+char(34)+","+char(34)+"batchsize"+char(34)+","+char(34)+"blocksignals"+char(34)+","+char(34)+"childat"+char(34)+","+char(34)+"children"+char(34)+","+char(34)+"childrenrect"+char(34)+","+char(34)+"childrenregion"+char(34)+","+char(34)+"clear"+char(34)+","+char(34)+"clearfocus"+char(34)+","+char(34)+"clearmask"+char(34)+","+char(34)+"clearpropertyflags"+char(34)+","+char(34)+"clearselection"+char(34)+","+char(34)+"close"+char(34)+","+char(34)+"closepersistenteditor"+char(34)+","+char(34)+"contentsmargins"+char(34)+","+char(34)+"contentsrect"+char(34)+","+char(34)+"contextmenupolicy"+char(34)+","+char(34)+"cornerwidget"+char(34)+","+char(34)+"count"+char(34)+","+char(34)+"createwindowcontainer"+char(34)+","+char(34)+"currentindex"+char(34)+","+char(34)+"currentrow"+char(34)+","+char(34)+"cursor"+char(34)+","+char(34)+"defaultdropaction"+char(34)+","+char(34)+"delete"+char(34)+","+char(34)+"deletelater"+char(34)+","+char(34)+"dragdropmode"+char(34)+","+char(34)+"dragdropoverwritemode"+char(34)+","+char(34)+"dragenabled"+char(34)+","+char(34)+"dumpobjectinfo"+char(34)+","+char(34)+"dumpobjecttree"+char(34)+","+char(34)+"edit"+char(34)+","+char(34)+"edititem"+char(34)+","+char(34)+"edittriggers"+char(34)+","+char(34)+"effectivewinid"+char(34)+","+char(34)+"ensurepolished"+char(34)+","+char(34)+"find"+char(34)+","+char(34)+"flow"+char(34)+","+char(34)+"focuspolicy"+char(34)+","+char(34)+"focusproxy"+char(34)+","+char(34)+"focuswidget"+char(34)+","+char(34)+"font"+char(34)+","+char(34)+"fontinfo"+char(34)+","+char(34)+"foregroundrole"+char(34)+","+char(34)+"framegeometry"+char(34)+","+char(34)+"framerect"+char(34)+","+char(34)+"frameshadow"+char(34)+","+char(34)+"frameshape"+char(34)+","+char(34)+"framesize"+char(34)+","+char(34)+"framestyle"+char(34)+","+char(34)+"framewidth"+char(34)+","+char(34)+"geometry"+char(34)+","+char(34)+"getcontentsmargins"+char(34)+","+char(34)+"getcurrentitemchangedevent"+char(34)+","+char(34)+"getcurrentrowchangedevent"+char(34)+","+char(34)+"getcurrenttextchangedevent"+char(34)+","+char(34)+"getitemactivatedevent"+char(34)+","+char(34)+"getitemchangedevent"+char(34)+","+char(34)+"getitemclickedevent"+char(34)+","+char(34)+"getitemdoubleclickedevent"+char(34)+","+char(34)+"getitementeredevent"+char(34)+","+char(34)+"getitempressedevent"+char(34)+","+char(34)+"getitemselectionchangedevent"+char(34)+","+char(34)+"grab"+char(34)+","+char(34)+"grabgesture"+char(34)+","+char(34)+"grabkeyboard"+char(34)+","+char(34)+"grabmouse"+char(34)+","+char(34)+"grabshortcut"+char(34)+","+char(34)+"graphicseffect"+char(34)+","+char(34)+"graphicsproxywidget"+char(34)+","+char(34)+"gridsize"+char(34)+","+char(34)+"hasautoscroll"+char(34)+","+char(34)+"hasfocus"+char(34)+","+char(34)+"hasmousetracking"+char(34)+","+char(34)+"height"+char(34)+","+char(34)+"heightforwidth"+char(34)+","+char(34)+"hide"+char(34)+","+char(34)+"horizontalscrollbar"+char(34)+","+char(34)+"horizontalscrollbarpolicy"+char(34)+","+char(34)+"horizontalscrollmode"+char(34)+","+char(34)+"iconsize"+char(34)+","+char(34)+"indexat"+char(34)+","+char(34)+"indexwidget"+char(34)+","+char(34)+"inherits"+char(34)+","+char(34)+"init"+char(34)+","+char(34)+"inputmethodhints"+char(34)+","+char(34)+"inputmethodquery"+char(34)+","+char(34)+"insertaction"+char(34)+","+char(34)+"insertitem"+char(34)+","+char(34)+"installeventfilter"+char(34)+","+char(34)+"isactivewindow"+char(34)+","+char(34)+"isancestorof"+char(34)+","+char(34)+"isenabled"+char(34)+","+char(34)+"isenabledto"+char(34)+","+char(34)+"isfullscreen"+char(34)+","+char(34)+"ishidden"+char(34)+","+char(34)+"ismaximized"+char(34)+","+char(34)+"isminimized"+char(34)+","+char(34)+"ismodal"+char(34)+","+char(34)+"isrowhidden"+char(34)+","+char(34)+"isselectionrectvisible"+char(34)+","+char(34)+"issortingenabled"+char(34)+","+char(34)+"isvisible"+char(34)+","+char(34)+"isvisibleto"+char(34)+","+char(34)+"iswidgettype"+char(34)+","+char(34)+"iswindow"+char(34)+","+char(34)+"iswindowmodified"+char(34)+","+char(34)+"iswrapping"+char(34)+","+char(34)+"item"+char(34)+","+char(34)+"itemat"+char(34)+","+char(34)+"itemdelegate"+char(34)+","+char(34)+"itemdelegateforcolumn"+char(34)+","+char(34)+"itemdelegateforrow"+char(34)+","+char(34)+"itemwidget"+char(34)+","+char(34)+"keyboardgrabber"+char(34)+","+char(34)+"keyboardsearch"+char(34)+","+char(34)+"killtimer"+char(34)+","+char(34)+"layout"+char(34)+","+char(34)+"layoutdirection"+char(34)+","+char(34)+"layoutmode"+char(34)+","+char(34)+"linewidth"+char(34)+","+char(34)+"locale"+char(34)+","+char(34)+"lower"+char(34)+","+char(34)+"mapfrom"+char(34)+","+char(34)+"mapfromglobal"+char(34)+","+char(34)+"mapfromparent"+char(34)+","+char(34)+"mapto"+char(34)+","+char(34)+"maptoglobal"+char(34)+","+char(34)+"maptoparent"+char(34)+","+char(34)+"mask"+char(34)+","+char(34)+"maximumheight"+char(34)+","+char(34)+"maximumsize"+char(34)+","+char(34)+"maximumviewportsize"+char(34)+","+char(34)+"maximumwidth"+char(34)+","+char(34)+"midlinewidth"+char(34)+","+char(34)+"minimumheight"+char(34)+","+char(34)+"minimumsize"+char(34)+","+char(34)+"minimumwidth"+char(34)+","+char(34)+"model"+char(34)+","+char(34)+"modelcolumn"+char(34)+","+char(34)+"mousegrabber"+char(34)+","+char(34)+"move"+char(34)+","+char(34)+"movement"+char(34)+","+char(34)+"movetothread"+char(34)+","+char(34)+"nativeparentwidget"+char(34)+","+char(34)+"nextinfocuschain"+char(34)+","+char(34)+"normalgeometry"+char(34)+","+char(34)+"objectname"+char(34)+","+char(34)+"objectpointer"+char(34)+","+char(34)+"openpersistenteditor"+char(34)+","+char(34)+"overridewindowflags"+char(34)+","+char(34)+"palette"+char(34)+","+char(34)+"parent"+char(34)+","+char(34)+"parentwidget"+char(34)+","+char(34)+"pos"+char(34)+","+char(34)+"previousinfocuschain"+char(34)+","+char(34)+"property"+char(34)+","+char(34)+"raise"+char(34)+","+char(34)+"rect"+char(34)+","+char(34)+"releasekeyboard"+char(34)+","+char(34)+"releasemouse"+char(34)+","+char(34)+"releaseshortcut"+char(34)+","+char(34)+"removeaction"+char(34)+","+char(34)+"removeeventfilter"+char(34)+","+char(34)+"removeitemwidget"+char(34)+","+char(34)+"render"+char(34)+","+char(34)+"repaint"+char(34)+","+char(34)+"resize"+char(34)+","+char(34)+"resizemode"+char(34)+","+char(34)+"restoregeometry"+char(34)+","+char(34)+"rootindex"+char(34)+","+char(34)+"row"+char(34)+","+char(34)+"savegeometry"+char(34)+","+char(34)+"scroll"+char(34)+","+char(34)+"scrollbarwidgets"+char(34)+","+char(34)+"scrollto"+char(34)+","+char(34)+"scrolltobottom"+char(34)+","+char(34)+"scrolltoitem"+char(34)+","+char(34)+"scrolltotop"+char(34)+","+char(34)+"selectionbehavior"+char(34)+","+char(34)+"selectionmode"+char(34)+","+char(34)+"selectionmodel"+char(34)+","+char(34)+"setacceptdrops"+char(34)+","+char(34)+"setaccessibledescription"+char(34)+","+char(34)+"setaccessiblename"+char(34)+","+char(34)+"setalternatingrowcolors"+char(34)+","+char(34)+"setattribute"+char(34)+","+char(34)+"setautofillbackground"+char(34)+","+char(34)+"setautoscroll"+char(34)+","+char(34)+"setautoscrollmargin"+char(34)+","+char(34)+"setbackgroundrole"+char(34)+","+char(34)+"setbasesize"+char(34)+","+char(34)+"setbatchsize"+char(34)+","+char(34)+"setcontentsmargins"+char(34)+","+char(34)+"setcontextmenupolicy"+char(34)+","+char(34)+"setcornerwidget"+char(34)+","+char(34)+"setcurrentindex"+char(34)+","+char(34)+"setcurrentitem"+char(34)+","+char(34)+"setcurrentitemchangedevent"+char(34)+","+char(34)+"setcurrentrow"+char(34)+","+char(34)+"setcurrentrowchangedevent"+char(34)+","+char(34)+"setcurrenttextchangedevent"+char(34)+","+char(34)+"setcursor"+char(34)+","+char(34)+"setdefaultdropaction"+char(34)+","+char(34)+"setdisabled"+char(34)+","+char(34)+"setdragdropmode"+char(34)+","+char(34)+"setdragdropoverwritemode"+char(34)+","+char(34)+"setdragenabled"+char(34)+","+char(34)+"setdropindicatorshown"+char(34)+","+char(34)+"setedittriggers"+char(34)+","+char(34)+"setenabled"+char(34)+","+char(34)+"setfixedheight"+char(34)+","+char(34)+"setfixedsize"+char(34)+","+char(34)+"setfixedwidth"+char(34)+","+char(34)+"setflow"+char(34)+","+char(34)+"setfocus"+char(34)+","+char(34)+"setfocuspolicy"+char(34)+","+char(34)+"setfocusproxy"+char(34)+","+char(34)+"setfont"+char(34)+","+char(34)+"setforegroundrole"+char(34)+","+char(34)+"setframerect"+char(34)+","+char(34)+"setframeshadow"+char(34)+","+char(34)+"setframeshape"+char(34)+","+char(34)+"setframestyle"+char(34)+","+char(34)+"setgeometry"+char(34)+","+char(34)+"setgraphicseffect"+char(34)+","+char(34)+"setgridsize"+char(34)+","+char(34)+"sethidden"+char(34)+","+char(34)+"sethorizontalscrollbar"+char(34)+","+char(34)+"sethorizontalscrollbarpolicy"+char(34)+","+char(34)+"sethorizontalscrollmode"+char(34)+","+char(34)+"seticonsize"+char(34)+","+char(34)+"setindexwidget"+char(34)+","+char(34)+"setinputmethodhints"+char(34)+","+char(34)+"setitemactivatedevent"+char(34)+","+char(34)+"setitemchangedevent"+char(34)+","+char(34)+"setitemclickedevent"+char(34)+","+char(34)+"setitemdelegate"+char(34)+","+char(34)+"setitemdelegateforcolumn"+char(34)+","+char(34)+"setitemdelegateforrow"+char(34)+","+char(34)+"setitemdoubleclickedevent"+char(34)+","+char(34)+"setitementeredevent"+char(34)+","+char(34)+"setitempressedevent"+char(34)+","+char(34)+"setitemselectionchangedevent"+char(34)+","+char(34)+"setitemwidget"+char(34)+","+char(34)+"setlayout"+char(34)+","+char(34)+"setlayoutdirection"+char(34)+","+char(34)+"setlayoutmode"+char(34)+","+char(34)+"setlinewidth"+char(34)+","+char(34)+"setlocale"+char(34)+","+char(34)+"setmask"+char(34)+","+char(34)+"setmaximumheight"+char(34)+","+char(34)+"setmaximumsize"+char(34)+","+char(34)+"setmaximumwidth"+char(34)+","+char(34)+"setmidlinewidth"+char(34)+","+char(34)+"setminimumheight"+char(34)+","+char(34)+"setminimumsize"+char(34)+","+char(34)+"setminimumwidth"+char(34)+","+char(34)+"setmodel"+char(34)+","+char(34)+"setmodelcolumn"+char(34)+","+char(34)+"setmousetracking"+char(34)+","+char(34)+"setmovement"+char(34)+","+char(34)+"setobjectname"+char(34)+","+char(34)+"setpalette"+char(34)+","+char(34)+"setparent"+char(34)+","+char(34)+"setproperty"+char(34)+","+char(34)+"setproperty_2"+char(34)+","+char(34)+"setproperty_3"+char(34)+","+char(34)+"setproperty_4"+char(34)+","+char(34)+"setproperty_5"+char(34)+","+char(34)+"setproperty_double"+char(34)+","+char(34)+"setproperty_float"+char(34)+","+char(34)+"setproperty_int"+char(34)+","+char(34)+"setproperty_string"+char(34)+","+char(34)+"setresizemode"+char(34)+","+char(34)+"setrowhidden"+char(34)+","+char(34)+"setselectionbehavior"+char(34)+","+char(34)+"setselectionmode"+char(34)+","+char(34)+"setselectionmodel"+char(34)+","+char(34)+"setselectionrectvisible"+char(34)+","+char(34)+"setshortcutautorepeat"+char(34)+","+char(34)+"setshortcutenabled"+char(34)+","+char(34)+"setsizeincrement"+char(34)+","+char(34)+"setsizepolicy"+char(34)+","+char(34)+"setsortingenabled"+char(34)+","+char(34)+"setspacing"+char(34)+","+char(34)+"setstatustip"+char(34)+","+char(34)+"setstyle"+char(34)+","+char(34)+"setstylesheet"+char(34)+","+char(34)+"settabkeynavigation"+char(34)+","+char(34)+"settaborder"+char(34)+","+char(34)+"settextelidemode"+char(34)+","+char(34)+"settooltip"+char(34)+","+char(34)+"setuniformitemsizes"+char(34)+","+char(34)+"setupdatesenabled"+char(34)+","+char(34)+"setverticalscrollbar"+char(34)+","+char(34)+"setverticalscrollbarpolicy"+char(34)+","+char(34)+"setverticalscrollmode"+char(34)+","+char(34)+"setviewmode"+char(34)+","+char(34)+"setviewport"+char(34)+","+char(34)+"setwhatsthis"+char(34)+","+char(34)+"setwindowfilepath"+char(34)+","+char(34)+"setwindowflags"+char(34)+","+char(34)+"setwindowicon"+char(34)+","+char(34)+"setwindowicontext"+char(34)+","+char(34)+"setwindowmodality"+char(34)+","+char(34)+"setwindowmodified"+char(34)+","+char(34)+"setwindowopacity"+char(34)+","+char(34)+"setwindowrole"+char(34)+","+char(34)+"setwindowstate"+char(34)+","+char(34)+"setwindowtitle"+char(34)+","+char(34)+"setwordwrap"+char(34)+","+char(34)+"setwrapping"+char(34)+","+char(34)+"show"+char(34)+","+char(34)+"showdropindicator"+char(34)+","+char(34)+"showfullscreen"+char(34)+","+char(34)+"showmaximized"+char(34)+","+char(34)+"showminimized"+char(34)+","+char(34)+"shownormal"+char(34)+","+char(34)+"signalsblocked"+char(34)+","+char(34)+"size"+char(34)+","+char(34)+"sizehint"+char(34)+","+char(34)+"sizehintforcolumn"+char(34)+","+char(34)+"sizehintforindex"+char(34)+","+char(34)+"sizehintforrow"+char(34)+","+char(34)+"sizeincrement"+char(34)+","+char(34)+"sizepolicy"+char(34)+","+char(34)+"sortitems"+char(34)+","+char(34)+"spacing"+char(34)+","+char(34)+"stackunder"+char(34)+","+char(34)+"starttimer"+char(34)+","+char(34)+"statustip"+char(34)+","+char(34)+"style"+char(34)+","+char(34)+"stylesheet"+char(34)+","+char(34)+"tabkeynavigation"+char(34)+","+char(34)+"takeitem"+char(34)+","+char(34)+"testattribute"+char(34)+","+char(34)+"textelidemode"+char(34)+","+char(34)+"thread"+char(34)+","+char(34)+"tooltip"+char(34)+","+char(34)+"undermouse"+char(34)+","+char(34)+"ungrabgesture"+char(34)+","+char(34)+"uniformitemsizes"+char(34)+","+char(34)+"unsetcursor"+char(34)+","+char(34)+"unsetlayoutdirection"+char(34)+","+char(34)+"unsetlocale"+char(34)+","+char(34)+"update"+char(34)+","+char(34)+"updategeometry"+char(34)+","+char(34)+"updatesenabled"+char(34)+","+char(34)+"verticalscrollbar"+char(34)+","+char(34)+"verticalscrollbarpolicy"+char(34)+","+char(34)+"verticalscrollmode"+char(34)+","+char(34)+"viewmode"+char(34)+","+char(34)+"viewport"+char(34)+","+char(34)+"visibleregion"+char(34)+","+char(34)+"visualitemrect"+char(34)+","+char(34)+"visualrect"+char(34)+","+char(34)+"whatsthis"+char(34)+","+char(34)+"width"+char(34)+","+char(34)+"window"+char(34)+","+char(34)+"windowfilepath"+char(34)+","+char(34)+"windowflags"+char(34)+","+char(34)+"windowhandle"+char(34)+","+char(34)+"windowicon"+char(34)+","+char(34)+"windowicontext"+char(34)+","+char(34)+"windowmodality"+char(34)+","+char(34)+"windowopacity"+char(34)+","+char(34)+"windowrole"+char(34)+","+char(34)+"windowstate"+char(34)+","+char(34)+"windowtitle"+char(34)+","+char(34)+"windowtype"+char(34)+","+char(34)+"winid"+char(34)+","+char(34)+"wordwrap"+char(34)+","+char(34)+"x"+char(34)+","+char(34)+"y"+char(34)+"]"
			]
		]
	],
	[
		13,
		1,
		[
			[
				"name",
				"Copy the list to support changing the generated method name in the Steps Tree"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#Copy the list to support changing the generated method name in the Steps Tree
"
			],
			[
				"interactionid",
				13
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"Copy the list to support changing the generated method name in the Steps Tree"
			]
		]
	],
	[
		14,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE2STEPFUNC</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2STEPFUNC = T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC"
			],
			[
				"interactionid",
				14
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2STEPFUNC = T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC"
			]
		]
	],
	[
		15,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE2LIST</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">[&quot;acceptDrops(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;accessibleDescription(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;accessibleName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;activateWindow(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;addAction(QAction&nbsp;*action)&nbsp;--&gt;&nbsp;void&quot;,&quot;addItem(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;addScrollBarWidget(QWidget&nbsp;*widget,&nbsp;Qt::AlignmentFlag&nbsp;alignment)&nbsp;--&gt;&nbsp;void&quot;,&quot;adjustSize(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;alternatingRowColors(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;autoFillBackground(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;autoScrollMargin(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;backgroundRole(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;baseSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;batchSize(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;blockSignals(bool&nbsp;block)&nbsp;--&gt;&nbsp;bool&quot;,&quot;childAt(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;children(void)&nbsp;--&gt;&nbsp;QObjectList&quot;,&quot;childrenRect(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;childrenRegion(void)&nbsp;--&gt;&nbsp;QRegion&quot;,&quot;clear(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;clearFocus(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;clearMask(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;clearPropertyFlags(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;clearSelection(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;close(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;closePersistentEditor(QModelIndex)&nbsp;--&gt;&nbsp;void&quot;,&quot;contentsMargins(void)&nbsp;--&gt;&nbsp;QMargins&quot;,&quot;contentsRect(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;contextMenuPolicy(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;cornerWidget(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;count(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;createWindowContainer(QWindow&nbsp;*window,&nbsp;QWidget&nbsp;*parent,&nbsp;Qt::WindowFlags&nbsp;flags)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;currentIndex(void)&nbsp;--&gt;&nbsp;QModelIndex&quot;,&quot;currentRow(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;cursor(void)&nbsp;--&gt;&nbsp;QCursor&quot;,&quot;defaultDropAction(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;delete(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;deleteLater(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;dragDropMode(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;dragDropOverwriteMode(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;dragEnabled(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;dumpObjectInfo(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;dumpObjectTree(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;edit(QModelIndex)&nbsp;--&gt;&nbsp;void&quot;,&quot;editItem(QListWidgetItem&nbsp;*item)&nbsp;--&gt;&nbsp;void&quot;,&quot;editTriggers(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;effectiveWinId(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;ensurePolished(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;find(int&nbsp;id)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;flow(void)&nbsp;--&gt;&nbsp;QListView::Flow&quot;,&quot;focusPolicy(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;focusProxy(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;focusWidget(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;font(void)&nbsp;--&gt;&nbsp;QFont&quot;,&quot;fontInfo(void)&nbsp;--&gt;&nbsp;QFontInfo&quot;,&quot;foregroundRole(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;frameGeometry(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;frameRect(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;frameShadow(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;frameShape(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;frameSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;frameStyle(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;frameWidth(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;geometry(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;getContentsMargins(int&nbsp;*left,&nbsp;int&nbsp;*top,&nbsp;int&nbsp;*right,&nbsp;int&nbsp;*bottom)&nbsp;--&gt;&nbsp;void&quot;,&quot;getcurrentItemChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getcurrentRowChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getcurrentTextChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemActivatedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemClickedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemDoubleClickedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemEnteredEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemPressedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getitemSelectionChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;grab(QRect)&nbsp;--&gt;&nbsp;QPixmap&quot;,&quot;grabGesture(Qt::GestureType&nbsp;gesture,&nbsp;Qt::GestureFlag&nbsp;flags)&nbsp;--&gt;&nbsp;void&quot;,&quot;grabKeyboard(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;grabMouse(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;grabShortcut(QKeySequence&nbsp;,&nbsp;Qt::ShortcutContext&nbsp;context)&nbsp;--&gt;&nbsp;int&quot;,&quot;graphicsEffect(void)&nbsp;--&gt;&nbsp;QGraphicsEffect&quot;,&quot;graphicsProxyWidget(void)&nbsp;--&gt;&nbsp;QGraphicsProxyWidget&quot;,&quot;gridSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;hasAutoScroll(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;hasFocus(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;hasMouseTracking(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;height(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;heightForWidth(int&nbsp;w)&nbsp;--&gt;&nbsp;int&quot;,&quot;hide(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;horizontalScrollBar(void)&nbsp;--&gt;&nbsp;QScrollBar&quot;,&quot;horizontalScrollBarPolicy(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;horizontalScrollMode(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;iconSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;indexAt(QPoint)&nbsp;--&gt;&nbsp;QModelIndex&quot;,&quot;indexWidget(QModelIndex)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;inherits(char&nbsp;*className)&nbsp;--&gt;&nbsp;bool&quot;,&quot;init(parent)&nbsp;--&gt;&nbsp;object&quot;,&quot;inputMethodHints(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;inputMethodQuery(Qt::InputMethodQuery&nbsp;query)&nbsp;--&gt;&nbsp;QVariant&quot;,&quot;insertAction(QAction&nbsp;*before,&nbsp;QAction&nbsp;*action)&nbsp;--&gt;&nbsp;void&quot;,&quot;insertItem(int,&nbsp;QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;installEventFilter(QObject&nbsp;*filterObj)&nbsp;--&gt;&nbsp;void&quot;,&quot;isActiveWindow(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isAncestorOf(QWidget&nbsp;*child)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isEnabled(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isEnabledTo(QWidget&nbsp;*ancestor)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isFullScreen(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isHidden(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isMaximized(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isMinimized(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isModal(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isRowHidden(int&nbsp;row)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isSelectionRectVisible(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isSortingEnabled(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isVisible(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isVisibleTo(QWidget&nbsp;*ancestor)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isWidgetType(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isWindow(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isWindowModified(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isWrapping(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;item(int&nbsp;row)&nbsp;--&gt;&nbsp;QListWidgetItem&quot;,&quot;itemAt(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;--&gt;&nbsp;QListWidgetItem&quot;,&quot;itemDelegate(QModelIndex)&nbsp;--&gt;&nbsp;QAbstractItemDelegate&quot;,&quot;itemDelegateForColumn(int&nbsp;column)&nbsp;--&gt;&nbsp;QAbstractItemDelegate&quot;,&quot;itemDelegateForRow(int&nbsp;row)&nbsp;--&gt;&nbsp;QAbstractItemDelegate&quot;,&quot;itemWidget(QListWidgetItem&nbsp;*item)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;keyboardGrabber(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;keyboardSearch(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;killTimer(int&nbsp;id)&nbsp;--&gt;&nbsp;void&quot;,&quot;layout(void)&nbsp;--&gt;&nbsp;QLayout&quot;,&quot;layoutDirection(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;layoutMode(void)&nbsp;--&gt;&nbsp;QListView::LayoutMode&quot;,&quot;lineWidth(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;locale(void)&nbsp;--&gt;&nbsp;QLocale&quot;,&quot;lower(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;mapFrom(QWidget&nbsp;*parent,&nbsp;QPoint)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;mapFromGlobal(QPoint)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;mapFromParent(QPoint)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;mapTo(QWidget&nbsp;*parent,&nbsp;QPoint)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;mapToGlobal(QPoint&nbsp;pos)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;mapToParent(QPoint&nbsp;pos)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;mask(void)&nbsp;--&gt;&nbsp;QRegion&quot;,&quot;maximumHeight(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;maximumSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;maximumViewportSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;maximumWidth(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;midLineWidth(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;minimumHeight(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;minimumSize(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;minimumWidth(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;model(void)&nbsp;--&gt;&nbsp;QAbstractItemModel&quot;,&quot;modelColumn(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;mouseGrabber(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;move(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;--&gt;&nbsp;void&quot;,&quot;movement(void)&nbsp;--&gt;&nbsp;QListView::Movement&quot;,&quot;moveToThread(QThread&nbsp;*targetThread)&nbsp;--&gt;&nbsp;void&quot;,&quot;nativeParentWidget(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;nextInFocusChain(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;normalGeometry(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;objectName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;objectpointer(void)&nbsp;--&gt;&nbsp;pointer&quot;,&quot;openPersistentEditor(QListWidgetItem&nbsp;*item)&nbsp;--&gt;&nbsp;void&quot;,&quot;overrideWindowFlags(Qt::WindowType&nbsp;flags)&nbsp;--&gt;&nbsp;void&quot;,&quot;palette(void)&nbsp;--&gt;&nbsp;QPalette&quot;,&quot;parent(void)&nbsp;--&gt;&nbsp;QObject&quot;,&quot;parentWidget(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;pos(void)&nbsp;--&gt;&nbsp;QPoint&quot;,&quot;previousInFocusChain(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;property(char&nbsp;*name)&nbsp;--&gt;&nbsp;QVariant&quot;,&quot;raise(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;rect(void)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;releaseKeyboard(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;releaseMouse(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;releaseShortcut(int&nbsp;id)&nbsp;--&gt;&nbsp;void&quot;,&quot;removeAction(QAction&nbsp;*action)&nbsp;--&gt;&nbsp;void&quot;,&quot;removeEventFilter(QObject&nbsp;*obj)&nbsp;--&gt;&nbsp;void&quot;,&quot;removeItemWidget(QListWidgetItem&nbsp;*item)&nbsp;--&gt;&nbsp;void&quot;,&quot;render(QPaintDevice&nbsp;*target,&nbsp;QPoint,QRegion,&nbsp;QWidget::RenderFlag)&nbsp;--&gt;&nbsp;void&quot;,&quot;repaint(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;resize(int&nbsp;w,&nbsp;int&nbsp;h)&nbsp;--&gt;&nbsp;void&quot;,&quot;resizeMode(void)&nbsp;--&gt;&nbsp;QListView::ResizeMode&quot;,&quot;restoreGeometry(QByteArray)&nbsp;--&gt;&nbsp;bool&quot;,&quot;rootIndex(void)&nbsp;--&gt;&nbsp;QModelIndex&quot;,&quot;row(QListWidgetItem&nbsp;*item)&nbsp;--&gt;&nbsp;int&quot;,&quot;saveGeometry(void)&nbsp;--&gt;&nbsp;QByteArray&quot;,&quot;scroll(int&nbsp;dx,&nbsp;int&nbsp;dy)&nbsp;--&gt;&nbsp;void&quot;,&quot;scrollBarWidgets(Qt::AlignmentFlag)&nbsp;--&gt;&nbsp;QWidgetList&quot;,&quot;scrollTo(QModelIndex,QAbstractItemView::ScrollHint)&nbsp;--&gt;&nbsp;void&quot;,&quot;scrollToBottom(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;scrollToItem(QListWidgetItem&nbsp;*item,QAbstractItemView::ScrollHint&nbsp;hint)&nbsp;--&gt;&nbsp;void&quot;,&quot;scrollToTop(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;selectionBehavior(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;selectionMode(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;selectionModel(void)&nbsp;--&gt;&nbsp;QItemSelectionModel&quot;,&quot;setAcceptDrops(bool&nbsp;on)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAccessibleDescription(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAccessibleName(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAlternatingRowColors(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAttribute(Qt::WidgetAttribute&nbsp;attribute,&nbsp;bool&nbsp;on)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAutoFillBackground(bool&nbsp;enabled)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAutoScroll(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAutoScrollMargin(int&nbsp;margin)&nbsp;--&gt;&nbsp;void&quot;,&quot;setBackgroundRole(QPalette::ColorRole&nbsp;role)&nbsp;--&gt;&nbsp;void&quot;,&quot;setBaseSize(int&nbsp;basew,&nbsp;int&nbsp;baseh)&nbsp;--&gt;&nbsp;void&quot;,&quot;setBatchSize(int&nbsp;batchSize)&nbsp;--&gt;&nbsp;void&quot;,&quot;setContentsMargins(int&nbsp;left,&nbsp;int&nbsp;top,&nbsp;int&nbsp;right,&nbsp;int&nbsp;bottom)&nbsp;--&gt;&nbsp;void&quot;,&quot;setContextMenuPolicy(Qt::ContextMenuPolicy&nbsp;policy)&nbsp;--&gt;&nbsp;void&quot;,&quot;setCornerWidget(QWidget&nbsp;*widget)&nbsp;--&gt;&nbsp;void&quot;,&quot;setCurrentIndex(QModelIndex)&nbsp;--&gt;&nbsp;void&quot;,&quot;setCurrentItem(QListWidgetItem&nbsp;*item,&nbsp;QItemSelectionModel::SelectionFlag&nbsp;command)&nbsp;--&gt;&nbsp;void&quot;,&quot;setcurrentItemChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setCurrentRow(int&nbsp;row,&nbsp;QItemSelectionModel::SelectionFlag&nbsp;command)&nbsp;--&gt;&nbsp;void&quot;,&quot;setcurrentRowChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setcurrentTextChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setCursor(QCursor)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDefaultDropAction(Qt::DropAction&nbsp;dropAction)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDisabled(bool&nbsp;disable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDragDropMode(QAbstractItemView::DragDropMode&nbsp;behavior)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDragDropOverwriteMode(bool&nbsp;overwrite)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDragEnabled(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDropIndicatorShown(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setEditTriggers(QAbstractItemView::EditTrigger&nbsp;triggers)&nbsp;--&gt;&nbsp;void&quot;,&quot;setEnabled(bool)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFixedHeight(int&nbsp;h)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFixedSize(int&nbsp;w,&nbsp;int&nbsp;h)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFixedWidth(int&nbsp;w)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFlow(QListView::Flow&nbsp;flow)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFocus(Qt::FocusReason&nbsp;reason)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFocusPolicy(Qt::FocusPolicy&nbsp;policy)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFocusProxy(QWidget&nbsp;*w)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFont(QFont)&nbsp;--&gt;&nbsp;void&quot;,&quot;setForegroundRole(QPalette::ColorRole&nbsp;role)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFrameRect(QRect)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFrameShadow(QFrame::Shadow)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFrameShape(QFrame::Shape)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFrameStyle(int&nbsp;style)&nbsp;--&gt;&nbsp;void&quot;,&quot;setGeometry(int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)&nbsp;--&gt;&nbsp;void&quot;,&quot;setGraphicsEffect(QGraphicsEffect&nbsp;*effect)&nbsp;--&gt;&nbsp;void&quot;,&quot;setGridSize(&nbsp;QSize&nbsp;&nbsp;size)&nbsp;--&gt;&nbsp;void&quot;,&quot;setHidden(bool&nbsp;hidden)&nbsp;--&gt;&nbsp;void&quot;,&quot;setHorizontalScrollBar(QScrollBar&nbsp;*scrollBar)&nbsp;--&gt;&nbsp;void&quot;,&quot;setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy)&nbsp;--&gt;&nbsp;void&quot;,&quot;setHorizontalScrollMode(QAbstractItemView::ScrollMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setIconSize(QSize)&nbsp;--&gt;&nbsp;void&quot;,&quot;setIndexWidget(QModelIndex,&nbsp;QWidget&nbsp;*widget)&nbsp;--&gt;&nbsp;void&quot;,&quot;setInputMethodHints(Qt::InputMethodHint&nbsp;hints)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemActivatedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemClickedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setItemDelegate(QAbstractItemDelegate&nbsp;*delegate)&nbsp;--&gt;&nbsp;void&quot;,&quot;setItemDelegateForColumn(int&nbsp;column,&nbsp;QAbstractItemDelegate&nbsp;*delegate)&nbsp;--&gt;&nbsp;void&quot;,&quot;setItemDelegateForRow(int&nbsp;row,&nbsp;QAbstractItemDelegate&nbsp;*delegate)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemDoubleClickedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemEnteredEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemPressedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setitemSelectionChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setItemWidget(QListWidgetItem&nbsp;*item,&nbsp;QWidget&nbsp;*widget)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLayout(QLayout&nbsp;*layout)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLayoutDirection(Qt::LayoutDirection&nbsp;direction)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLayoutMode(QListView::LayoutMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLineWidth(int)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLocale(QLocale)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMask(QBitmap)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMaximumHeight(int&nbsp;maxh)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMaximumSize(int&nbsp;maxw,&nbsp;int&nbsp;maxh)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMaximumWidth(int&nbsp;maxw)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMidLineWidth(int)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMinimumHeight(int&nbsp;minh)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMinimumSize(int&nbsp;minw,&nbsp;int&nbsp;minh)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMinimumWidth(int&nbsp;minw)&nbsp;--&gt;&nbsp;void&quot;,&quot;setModel(QAbstractItemModel&nbsp;*model)&nbsp;--&gt;&nbsp;void&quot;,&quot;setModelColumn(int&nbsp;column)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMouseTracking(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setMovement(QListView::Movement&nbsp;movement)&nbsp;--&gt;&nbsp;void&quot;,&quot;setObjectName(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setPalette(QPalette)&nbsp;--&gt;&nbsp;void&quot;,&quot;setParent(QWidget&nbsp;*parent)&nbsp;--&gt;&nbsp;void&quot;,&quot;setProperty(char&nbsp;*name,&nbsp;QVariant)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_2(char&nbsp;*name,&nbsp;int)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_3(char&nbsp;*name,&nbsp;float)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_4(char&nbsp;*name,&nbsp;double)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_5(char&nbsp;*name,&nbsp;QString)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_double(char&nbsp;*name,&nbsp;double)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_float(char&nbsp;*name,&nbsp;float)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_int(char&nbsp;*name,&nbsp;int)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_string(char&nbsp;*name,&nbsp;QString)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setResizeMode(QListView::ResizeMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setRowHidden(int&nbsp;row,&nbsp;bool&nbsp;hide)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSelectionBehavior(QAbstractItemView::SelectionBehavior&nbsp;behavior)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSelectionMode(QAbstractItemView::SelectionMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSelectionModel(QItemSelectionModel&nbsp;*selectionModel)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSelectionRectVisible(bool&nbsp;show)&nbsp;--&gt;&nbsp;void&quot;,&quot;setShortcutAutoRepeat(int&nbsp;id,&nbsp;bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setShortcutEnabled(int&nbsp;id,&nbsp;bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSizeIncrement(int&nbsp;w,&nbsp;int&nbsp;h)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSizePolicy(QSizePolicy::Policy&nbsp;horizontal,&nbsp;QSizePolicy::Policy&nbsp;vertical)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSortingEnabled(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setSpacing(int&nbsp;space)&nbsp;--&gt;&nbsp;void&quot;,&quot;setStatusTip(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setStyle(QStyle&nbsp;*style)&nbsp;--&gt;&nbsp;void&quot;,&quot;setStyleSheet(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setTabKeyNavigation(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setTabOrder(QWidget&nbsp;*first,&nbsp;QWidget&nbsp;*second)&nbsp;--&gt;&nbsp;void&quot;,&quot;setTextElideMode(Qt::TextElideMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setToolTip(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setUniformItemSizes(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setUpdatesEnabled(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;setVerticalScrollBar(QScrollBar&nbsp;*scrollBar)&nbsp;--&gt;&nbsp;void&quot;,&quot;setVerticalScrollBarPolicy(Qt::ScrollBarPolicy)&nbsp;--&gt;&nbsp;void&quot;,&quot;setVerticalScrollMode(QAbstractItemView::ScrollMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setViewMode(QListView::ViewMode&nbsp;mode)&nbsp;--&gt;&nbsp;void&quot;,&quot;setViewport(QWidget&nbsp;*widget)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWhatsThis(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowFilePath(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowFlags(Qt::WindowType&nbsp;type)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowIcon(QIcon)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowIconText(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowModality(Qt::WindowModality&nbsp;windowModality)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowModified(bool)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowOpacity(double&nbsp;level)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowRole(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowState(Qt::WindowState&nbsp;windowState)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWindowTitle(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWordWrap(bool&nbsp;on)&nbsp;--&gt;&nbsp;void&quot;,&quot;setWrapping(bool&nbsp;enable)&nbsp;--&gt;&nbsp;void&quot;,&quot;show(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;showDropIndicator(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;showFullScreen(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;showMaximized(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;showMinimized(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;showNormal(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;signalsBlocked(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;size(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;sizeHint(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;sizeHintForColumn(int&nbsp;column)&nbsp;--&gt;&nbsp;int&quot;,&quot;sizeHintForIndex(QModelIndex)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;sizeHintForRow(int&nbsp;row)&nbsp;--&gt;&nbsp;int&quot;,&quot;sizeIncrement(void)&nbsp;--&gt;&nbsp;QSize&quot;,&quot;sizePolicy(void)&nbsp;--&gt;&nbsp;QSizePolicy&quot;,&quot;sortItems(Qt::SortOrder&nbsp;order)&nbsp;--&gt;&nbsp;void&quot;,&quot;spacing(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;stackUnder(QWidget&nbsp;*w)&nbsp;--&gt;&nbsp;void&quot;,&quot;startTimer(int&nbsp;interval)&nbsp;--&gt;&nbsp;int&quot;,&quot;statusTip(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;style(void)&nbsp;--&gt;&nbsp;QStyle&quot;,&quot;styleSheet(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;tabKeyNavigation(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;takeItem(int&nbsp;row)&nbsp;--&gt;&nbsp;QListWidgetItem&quot;,&quot;testAttribute(Qt::WidgetAttribute&nbsp;attribute)&nbsp;--&gt;&nbsp;bool&quot;,&quot;textElideMode(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;thread(void)&nbsp;--&gt;&nbsp;QThread&quot;,&quot;toolTip(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;underMouse(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;ungrabGesture(Qt::GestureType&nbsp;gesture)&nbsp;--&gt;&nbsp;void&quot;,&quot;uniformItemSizes(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;unsetCursor(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;unsetLayoutDirection(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;unsetLocale(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;update(QModelIndex)&nbsp;--&gt;&nbsp;void&quot;,&quot;updateGeometry(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;updatesEnabled(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;verticalScrollBar(void)&nbsp;--&gt;&nbsp;QScrollBar&quot;,&quot;verticalScrollBarPolicy(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;verticalScrollMode(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;viewMode(void)&nbsp;--&gt;&nbsp;QListView::ViewMode&quot;,&quot;viewport(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;visibleRegion(void)&nbsp;--&gt;&nbsp;QRegion&quot;,&quot;visualItemRect(QListWidgetItem&nbsp;*item)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;visualRect(QModelIndex)&nbsp;--&gt;&nbsp;QRect&quot;,&quot;whatsThis(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;width(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;window(void)&nbsp;--&gt;&nbsp;QWidget&quot;,&quot;windowFilePath(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;windowFlags(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;windowHandle(void)&nbsp;--&gt;&nbsp;QWindow&quot;,&quot;windowIcon(void)&nbsp;--&gt;&nbsp;QIcon&quot;,&quot;windowIconText(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;windowModality(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;windowOpacity(void)&nbsp;--&gt;&nbsp;double&quot;,&quot;windowRole(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;windowState(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;windowTitle(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;windowType(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;winId(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;wordWrap(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;x(void)&nbsp;--&gt;&nbsp;int&quot;,&quot;y(void)&nbsp;--&gt;&nbsp;int&quot;]</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2LIST = ["+char(34)+"acceptDrops(void) --> bool"+char(34)+","+char(34)+"accessibleDescription(void) --> QString"+char(34)+","+char(34)+"accessibleName(void) --> QString"+char(34)+","+char(34)+"activateWindow(void) --> void"+char(34)+","+char(34)+"addAction(QAction *action) --> void"+char(34)+","+char(34)+"addItem(QString) --> void"+char(34)+","+char(34)+"addScrollBarWidget(QWidget *widget, Qt::AlignmentFlag alignment) --> void"+char(34)+","+char(34)+"adjustSize(void) --> void"+char(34)+","+char(34)+"alternatingRowColors(void) --> bool"+char(34)+","+char(34)+"autoFillBackground(void) --> bool"+char(34)+","+char(34)+"autoScrollMargin(void) --> int"+char(34)+","+char(34)+"backgroundRole(void) --> int"+char(34)+","+char(34)+"baseSize(void) --> QSize"+char(34)+","+char(34)+"batchSize(void) --> int"+char(34)+","+char(34)+"blockSignals(bool block) --> bool"+char(34)+","+char(34)+"childAt(int x, int y) --> QWidget"+char(34)+","+char(34)+"children(void) --> QObjectList"+char(34)+","+char(34)+"childrenRect(void) --> QRect"+char(34)+","+char(34)+"childrenRegion(void) --> QRegion"+char(34)+","+char(34)+"clear(void) --> void"+char(34)+","+char(34)+"clearFocus(void) --> void"+char(34)+","+char(34)+"clearMask(void) --> void"+char(34)+","+char(34)+"clearPropertyFlags(void) --> void"+char(34)+","+char(34)+"clearSelection(void) --> void"+char(34)+","+char(34)+"close(void) --> bool"+char(34)+","+char(34)+"closePersistentEditor(QModelIndex) --> void"+char(34)+","+char(34)+"contentsMargins(void) --> QMargins"+char(34)+","+char(34)+"contentsRect(void) --> QRect"+char(34)+","+char(34)+"contextMenuPolicy(void) --> int"+char(34)+","+char(34)+"cornerWidget(void) --> QWidget"+char(34)+","+char(34)+"count(void) --> int"+char(34)+","+char(34)+"createWindowContainer(QWindow *window, QWidget *parent, Qt::WindowFlags flags) --> QWidget"+char(34)+","+char(34)+"currentIndex(void) --> QModelIndex"+char(34)+","+char(34)+"currentRow(void) --> int"+char(34)+","+char(34)+"cursor(void) --> QCursor"+char(34)+","+char(34)+"defaultDropAction(void) --> int"+char(34)+","+char(34)+"delete(void) --> void"+char(34)+","+char(34)+"deleteLater(void) --> void"+char(34)+","+char(34)+"dragDropMode(void) --> int"+char(34)+","+char(34)+"dragDropOverwriteMode(void) --> bool"+char(34)+","+char(34)+"dragEnabled(void) --> bool"+char(34)+","+char(34)+"dumpObjectInfo(void) --> void"+char(34)+","+char(34)+"dumpObjectTree(void) --> void"+char(34)+","+char(34)+"edit(QModelIndex) --> void"+char(34)+","+char(34)+"editItem(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"editTriggers(void) --> int"+char(34)+","+char(34)+"effectiveWinId(void) --> int"+char(34)+","+char(34)+"ensurePolished(void) --> void"+char(34)+","+char(34)+"find(int id) --> QWidget"+char(34)+","+char(34)+"flow(void) --> QListView::Flow"+char(34)+","+char(34)+"focusPolicy(void) --> int"+char(34)+","+char(34)+"focusProxy(void) --> QWidget"+char(34)+","+char(34)+"focusWidget(void) --> QWidget"+char(34)+","+char(34)+"font(void) --> QFont"+char(34)+","+char(34)+"fontInfo(void) --> QFontInfo"+char(34)+","+char(34)+"foregroundRole(void) --> int"+char(34)+","+char(34)+"frameGeometry(void) --> QRect"+char(34)+","+char(34)+"frameRect(void) --> QRect"+char(34)+","+char(34)+"frameShadow(void) --> int"+char(34)+","+char(34)+"frameShape(void) --> int"+char(34)+","+char(34)+"frameSize(void) --> QSize"+char(34)+","+char(34)+"frameStyle(void) --> int"+char(34)+","+char(34)+"frameWidth(void) --> int"+char(34)+","+char(34)+"geometry(void) --> QRect"+char(34)+","+char(34)+"getContentsMargins(int *left, int *top, int *right, int *bottom) --> void"+char(34)+","+char(34)+"getcurrentItemChangedEvent(void) --> char"+char(34)+","+char(34)+"getcurrentRowChangedEvent(void) --> char"+char(34)+","+char(34)+"getcurrentTextChangedEvent(void) --> char"+char(34)+","+char(34)+"getitemActivatedEvent(void) --> char"+char(34)+","+char(34)+"getitemChangedEvent(void) --> char"+char(34)+","+char(34)+"getitemClickedEvent(void) --> char"+char(34)+","+char(34)+"getitemDoubleClickedEvent(void) --> char"+char(34)+","+char(34)+"getitemEnteredEvent(void) --> char"+char(34)+","+char(34)+"getitemPressedEvent(void) --> char"+char(34)+","+char(34)+"getitemSelectionChangedEvent(void) --> char"+char(34)+","+char(34)+"grab(QRect) --> QPixmap"+char(34)+","+char(34)+"grabGesture(Qt::GestureType gesture, Qt::GestureFlag flags) --> void"+char(34)+","+char(34)+"grabKeyboard(void) --> void"+char(34)+","+char(34)+"grabMouse(void) --> void"+char(34)+","+char(34)+"grabShortcut(QKeySequence , Qt::ShortcutContext context) --> int"+char(34)+","+char(34)+"graphicsEffect(void) --> QGraphicsEffect"+char(34)+","+char(34)+"graphicsProxyWidget(void) --> QGraphicsProxyWidget"+char(34)+","+char(34)+"gridSize(void) --> QSize"+char(34)+","+char(34)+"hasAutoScroll(void) --> bool"+char(34)+","+char(34)+"hasFocus(void) --> bool"+char(34)+","+char(34)+"hasMouseTracking(void) --> bool"+char(34)+","+char(34)+"height(void) --> int"+char(34)+","+char(34)+"heightForWidth(int w) --> int"+char(34)+","+char(34)+"hide(void) --> void"+char(34)+","+char(34)+"horizontalScrollBar(void) --> QScrollBar"+char(34)+","+char(34)+"horizontalScrollBarPolicy(void) --> int"+char(34)+","+char(34)+"horizontalScrollMode(void) --> int"+char(34)+","+char(34)+"iconSize(void) --> QSize"+char(34)+","+char(34)+"indexAt(QPoint) --> QModelIndex"+char(34)+","+char(34)+"indexWidget(QModelIndex) --> QWidget"+char(34)+","+char(34)+"inherits(char *className) --> bool"+char(34)+","+char(34)+"init(parent) --> object"+char(34)+","+char(34)+"inputMethodHints(void) --> int"+char(34)+","+char(34)+"inputMethodQuery(Qt::InputMethodQuery query) --> QVariant"+char(34)+","+char(34)+"insertAction(QAction *before, QAction *action) --> void"+char(34)+","+char(34)+"insertItem(int, QString) --> void"+char(34)+","+char(34)+"installEventFilter(QObject *filterObj) --> void"+char(34)+","+char(34)+"isActiveWindow(void) --> bool"+char(34)+","+char(34)+"isAncestorOf(QWidget *child) --> bool"+char(34)+","+char(34)+"isEnabled(void) --> bool"+char(34)+","+char(34)+"isEnabledTo(QWidget *ancestor) --> bool"+char(34)+","+char(34)+"isFullScreen(void) --> bool"+char(34)+","+char(34)+"isHidden(void) --> bool"+char(34)+","+char(34)+"isMaximized(void) --> bool"+char(34)+","+char(34)+"isMinimized(void) --> bool"+char(34)+","+char(34)+"isModal(void) --> bool"+char(34)+","+char(34)+"isRowHidden(int row) --> bool"+char(34)+","+char(34)+"isSelectionRectVisible(void) --> bool"+char(34)+","+char(34)+"isSortingEnabled(void) --> bool"+char(34)+","+char(34)+"isVisible(void) --> bool"+char(34)+","+char(34)+"isVisibleTo(QWidget *ancestor) --> bool"+char(34)+","+char(34)+"isWidgetType(void) --> bool"+char(34)+","+char(34)+"isWindow(void) --> bool"+char(34)+","+char(34)+"isWindowModified(void) --> bool"+char(34)+","+char(34)+"isWrapping(void) --> bool"+char(34)+","+char(34)+"item(int row) --> QListWidgetItem"+char(34)+","+char(34)+"itemAt(int x, int y) --> QListWidgetItem"+char(34)+","+char(34)+"itemDelegate(QModelIndex) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemDelegateForColumn(int column) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemDelegateForRow(int row) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemWidget(QListWidgetItem *item) --> QWidget"+char(34)+","+char(34)+"keyboardGrabber(void) --> QWidget"+char(34)+","+char(34)+"keyboardSearch(QString) --> void"+char(34)+","+char(34)+"killTimer(int id) --> void"+char(34)+","+char(34)+"layout(void) --> QLayout"+char(34)+","+char(34)+"layoutDirection(void) --> int"+char(34)+","+char(34)+"layoutMode(void) --> QListView::LayoutMode"+char(34)+","+char(34)+"lineWidth(void) --> int"+char(34)+","+char(34)+"locale(void) --> QLocale"+char(34)+","+char(34)+"lower(void) --> void"+char(34)+","+char(34)+"mapFrom(QWidget *parent, QPoint) --> QPoint"+char(34)+","+char(34)+"mapFromGlobal(QPoint) --> QPoint"+char(34)+","+char(34)+"mapFromParent(QPoint) --> QPoint"+char(34)+","+char(34)+"mapTo(QWidget *parent, QPoint) --> QPoint"+char(34)+","+char(34)+"mapToGlobal(QPoint pos) --> QPoint"+char(34)+","+char(34)+"mapToParent(QPoint pos) --> QPoint"+char(34)+","+char(34)+"mask(void) --> QRegion"+char(34)+","+char(34)+"maximumHeight(void) --> int"+char(34)+","+char(34)+"maximumSize(void) --> QSize"+char(34)+","+char(34)+"maximumViewportSize(void) --> QSize"+char(34)+","+char(34)+"maximumWidth(void) --> int"+char(34)+","+char(34)+"midLineWidth(void) --> int"+char(34)+","+char(34)+"minimumHeight(void) --> int"+char(34)+","+char(34)+"minimumSize(void) --> QSize"+char(34)+","+char(34)+"minimumWidth(void) --> int"+char(34)+","+char(34)+"model(void) --> QAbstractItemModel"+char(34)+","+char(34)+"modelColumn(void) --> int"+char(34)+","+char(34)+"mouseGrabber(void) --> QWidget"+char(34)+","+char(34)+"move(int x, int y) --> void"+char(34)+","+char(34)+"movement(void) --> QListView::Movement"+char(34)+","+char(34)+"moveToThread(QThread *targetThread) --> void"+char(34)+","+char(34)+"nativeParentWidget(void) --> QWidget"+char(34)+","+char(34)+"nextInFocusChain(void) --> QWidget"+char(34)+","+char(34)+"normalGeometry(void) --> QRect"+char(34)+","+char(34)+"objectName(void) --> QString"+char(34)+","+char(34)+"objectpointer(void) --> pointer"+char(34)+","+char(34)+"openPersistentEditor(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"overrideWindowFlags(Qt::WindowType flags) --> void"+char(34)+","+char(34)+"palette(void) --> QPalette"+char(34)+","+char(34)+"parent(void) --> QObject"+char(34)+","+char(34)+"parentWidget(void) --> QWidget"+char(34)+","+char(34)+"pos(void) --> QPoint"+char(34)+","+char(34)+"previousInFocusChain(void) --> QWidget"+char(34)+","+char(34)+"property(char *name) --> QVariant"+char(34)+","+char(34)+"raise(void) --> void"+char(34)+","+char(34)+"rect(void) --> QRect"+char(34)+","+char(34)+"releaseKeyboard(void) --> void"+char(34)+","+char(34)+"releaseMouse(void) --> void"+char(34)+","+char(34)+"releaseShortcut(int id) --> void"+char(34)+","+char(34)+"removeAction(QAction *action) --> void"+char(34)+","+char(34)+"removeEventFilter(QObject *obj) --> void"+char(34)+","+char(34)+"removeItemWidget(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"render(QPaintDevice *target, QPoint,QRegion, QWidget::RenderFlag) --> void"+char(34)+","+char(34)+"repaint(void) --> void"+char(34)+","+char(34)+"resize(int w, int h) --> void"+char(34)+","+char(34)+"resizeMode(void) --> QListView::ResizeMode"+char(34)+","+char(34)+"restoreGeometry(QByteArray) --> bool"+char(34)+","+char(34)+"rootIndex(void) --> QModelIndex"+char(34)+","+char(34)+"row(QListWidgetItem *item) --> int"+char(34)+","+char(34)+"saveGeometry(void) --> QByteArray"+char(34)+","+char(34)+"scroll(int dx, int dy) --> void"+char(34)+","+char(34)+"scrollBarWidgets(Qt::AlignmentFlag) --> QWidgetList"+char(34)+","+char(34)+"scrollTo(QModelIndex,QAbstractItemView::ScrollHint) --> void"+char(34)+","+char(34)+"scrollToBottom(void) --> void"+char(34)+","+char(34)+"scrollToItem(QListWidgetItem *item,QAbstractItemView::ScrollHint hint) --> void"+char(34)+","+char(34)+"scrollToTop(void) --> void"+char(34)+","+char(34)+"selectionBehavior(void) --> int"+char(34)+","+char(34)+"selectionMode(void) --> int"+char(34)+","+char(34)+"selectionModel(void) --> QItemSelectionModel"+char(34)+","+char(34)+"setAcceptDrops(bool on) --> void"+char(34)+","+char(34)+"setAccessibleDescription(QString) --> void"+char(34)+","+char(34)+"setAccessibleName(QString) --> void"+char(34)+","+char(34)+"setAlternatingRowColors(bool enable) --> void"+char(34)+","+char(34)+"setAttribute(Qt::WidgetAttribute attribute, bool on) --> void"+char(34)+","+char(34)+"setAutoFillBackground(bool enabled) --> void"+char(34)+","+char(34)+"setAutoScroll(bool enable) --> void"+char(34)+","+char(34)+"setAutoScrollMargin(int margin) --> void"+char(34)+","+char(34)+"setBackgroundRole(QPalette::ColorRole role) --> void"+char(34)+","+char(34)+"setBaseSize(int basew, int baseh) --> void"+char(34)+","+char(34)+"setBatchSize(int batchSize) --> void"+char(34)+","+char(34)+"setContentsMargins(int left, int top, int right, int bottom) --> void"+char(34)+","+char(34)+"setContextMenuPolicy(Qt::ContextMenuPolicy policy) --> void"+char(34)+","+char(34)+"setCornerWidget(QWidget *widget) --> void"+char(34)+","+char(34)+"setCurrentIndex(QModelIndex) --> void"+char(34)+","+char(34)+"setCurrentItem(QListWidgetItem *item, QItemSelectionModel::SelectionFlag command) --> void"+char(34)+","+char(34)+"setcurrentItemChangedEvent(char *) --> void"+char(34)+","+char(34)+"setCurrentRow(int row, QItemSelectionModel::SelectionFlag command) --> void"+char(34)+","+char(34)+"setcurrentRowChangedEvent(char *) --> void"+char(34)+","+char(34)+"setcurrentTextChangedEvent(char *) --> void"+char(34)+","+char(34)+"setCursor(QCursor) --> void"+char(34)+","+char(34)+"setDefaultDropAction(Qt::DropAction dropAction) --> void"+char(34)+","+char(34)+"setDisabled(bool disable) --> void"+char(34)+","+char(34)+"setDragDropMode(QAbstractItemView::DragDropMode behavior) --> void"+char(34)+","+char(34)+"setDragDropOverwriteMode(bool overwrite) --> void"+char(34)+","+char(34)+"setDragEnabled(bool enable) --> void"+char(34)+","+char(34)+"setDropIndicatorShown(bool enable) --> void"+char(34)+","+char(34)+"setEditTriggers(QAbstractItemView::EditTrigger triggers) --> void"+char(34)+","+char(34)+"setEnabled(bool) --> void"+char(34)+","+char(34)+"setFixedHeight(int h) --> void"+char(34)+","+char(34)+"setFixedSize(int w, int h) --> void"+char(34)+","+char(34)+"setFixedWidth(int w) --> void"+char(34)+","+char(34)+"setFlow(QListView::Flow flow) --> void"+char(34)+","+char(34)+"setFocus(Qt::FocusReason reason) --> void"+char(34)+","+char(34)+"setFocusPolicy(Qt::FocusPolicy policy) --> void"+char(34)+","+char(34)+"setFocusProxy(QWidget *w) --> void"+char(34)+","+char(34)+"setFont(QFont) --> void"+char(34)+","+char(34)+"setForegroundRole(QPalette::ColorRole role) --> void"+char(34)+","+char(34)+"setFrameRect(QRect) --> void"+char(34)+","+char(34)+"setFrameShadow(QFrame::Shadow) --> void"+char(34)+","+char(34)+"setFrameShape(QFrame::Shape) --> void"+char(34)+","+char(34)+"setFrameStyle(int style) --> void"+char(34)+","+char(34)+"setGeometry(int x, int y, int w, int h) --> void"+char(34)+","+char(34)+"setGraphicsEffect(QGraphicsEffect *effect) --> void"+char(34)+","+char(34)+"setGridSize( QSize  size) --> void"+char(34)+","+char(34)+"setHidden(bool hidden) --> void"+char(34)+","+char(34)+"setHorizontalScrollBar(QScrollBar *scrollBar) --> void"+char(34)+","+char(34)+"setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy) --> void"+char(34)+","+char(34)+"setHorizontalScrollMode(QAbstractItemView::ScrollMode mode) --> void"+char(34)+","+char(34)+"setIconSize(QSize) --> void"+char(34)+","+char(34)+"setIndexWidget(QModelIndex, QWidget *widget) --> void"+char(34)+","+char(34)+"setInputMethodHints(Qt::InputMethodHint hints) --> void"+char(34)+","+char(34)+"setitemActivatedEvent(char *) --> void"+char(34)+","+char(34)+"setitemChangedEvent(char *) --> void"+char(34)+","+char(34)+"setitemClickedEvent(char *) --> void"+char(34)+","+char(34)+"setItemDelegate(QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setItemDelegateForColumn(int column, QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setItemDelegateForRow(int row, QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setitemDoubleClickedEvent(char *) --> void"+char(34)+","+char(34)+"setitemEnteredEvent(char *) --> void"+char(34)+","+char(34)+"setitemPressedEvent(char *) --> void"+char(34)+","+char(34)+"setitemSelectionChangedEvent(char *) --> void"+char(34)+","+char(34)+"setItemWidget(QListWidgetItem *item, QWidget *widget) --> void"+char(34)+","+char(34)+"setLayout(QLayout *layout) --> void"+char(34)+","+char(34)+"setLayoutDirection(Qt::LayoutDirection direction) --> void"+char(34)+","+char(34)+"setLayoutMode(QListView::LayoutMode mode) --> void"+char(34)+","+char(34)+"setLineWidth(int) --> void"+char(34)+","+char(34)+"setLocale(QLocale) --> void"+char(34)+","+char(34)+"setMask(QBitmap) --> void"+char(34)+","+char(34)+"setMaximumHeight(int maxh) --> void"+char(34)+","+char(34)+"setMaximumSize(int maxw, int maxh) --> void"+char(34)+","+char(34)+"setMaximumWidth(int maxw) --> void"+char(34)+","+char(34)+"setMidLineWidth(int) --> void"+char(34)+","+char(34)+"setMinimumHeight(int minh) --> void"+char(34)+","+char(34)+"setMinimumSize(int minw, int minh) --> void"+char(34)+","+char(34)+"setMinimumWidth(int minw) --> void"+char(34)+","+char(34)+"setModel(QAbstractItemModel *model) --> void"+char(34)+","+char(34)+"setModelColumn(int column) --> void"+char(34)+","+char(34)+"setMouseTracking(bool enable) --> void"+char(34)+","+char(34)+"setMovement(QListView::Movement movement) --> void"+char(34)+","+char(34)+"setObjectName(QString) --> void"+char(34)+","+char(34)+"setPalette(QPalette) --> void"+char(34)+","+char(34)+"setParent(QWidget *parent) --> void"+char(34)+","+char(34)+"setProperty(char *name, QVariant) --> bool"+char(34)+","+char(34)+"setProperty_2(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_3(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_4(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_5(char *name, QString) --> bool"+char(34)+","+char(34)+"setProperty_double(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_float(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_int(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_string(char *name, QString) --> bool"+char(34)+","+char(34)+"setResizeMode(QListView::ResizeMode mode) --> void"+char(34)+","+char(34)+"setRowHidden(int row, bool hide) --> void"+char(34)+","+char(34)+"setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior) --> void"+char(34)+","+char(34)+"setSelectionMode(QAbstractItemView::SelectionMode mode) --> void"+char(34)+","+char(34)+"setSelectionModel(QItemSelectionModel *selectionModel) --> void"+char(34)+","+char(34)+"setSelectionRectVisible(bool show) --> void"+char(34)+","+char(34)+"setShortcutAutoRepeat(int id, bool enable) --> void"+char(34)+","+char(34)+"setShortcutEnabled(int id, bool enable) --> void"+char(34)+","+char(34)+"setSizeIncrement(int w, int h) --> void"+char(34)+","+char(34)+"setSizePolicy(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical) --> void"+char(34)+","+char(34)+"setSortingEnabled(bool enable) --> void"+char(34)+","+char(34)+"setSpacing(int space) --> void"+char(34)+","+char(34)+"setStatusTip(QString) --> void"+char(34)+","+char(34)+"setStyle(QStyle *style) --> void"+char(34)+","+char(34)+"setStyleSheet(QString) --> void"+char(34)+","+char(34)+"setTabKeyNavigation(bool enable) --> void"+char(34)+","+char(34)+"setTabOrder(QWidget *first, QWidget *second) --> void"+char(34)+","+char(34)+"setTextElideMode(Qt::TextElideMode mode) --> void"+char(34)+","+char(34)+"setToolTip(QString) --> void"+char(34)+","+char(34)+"setUniformItemSizes(bool enable) --> void"+char(34)+","+char(34)+"setUpdatesEnabled(bool enable) --> void"+char(34)+","+char(34)+"setVerticalScrollBar(QScrollBar *scrollBar) --> void"+char(34)+","+char(34)+"setVerticalScrollBarPolicy(Qt::ScrollBarPolicy) --> void"+char(34)+","+char(34)+"setVerticalScrollMode(QAbstractItemView::ScrollMode mode) --> void"+char(34)+","+char(34)+"setViewMode(QListView::ViewMode mode) --> void"+char(34)+","+char(34)+"setViewport(QWidget *widget) --> void"+char(34)+","+char(34)+"setWhatsThis(QString) --> void"+char(34)+","+char(34)+"setWindowFilePath(QString) --> void"+char(34)+","+char(34)+"setWindowFlags(Qt::WindowType type) --> void"+char(34)+","+char(34)+"setWindowIcon(QIcon) --> void"+char(34)+","+char(34)+"setWindowIconText(QString) --> void"+char(34)+","+char(34)+"setWindowModality(Qt::WindowModality windowModality) --> void"+char(34)+","+char(34)+"setWindowModified(bool) --> void"+char(34)+","+char(34)+"setWindowOpacity(double level) --> void"+char(34)+","+char(34)+"setWindowRole(QString) --> void"+char(34)+","+char(34)+"setWindowState(Qt::WindowState windowState) --> void"+char(34)+","+char(34)+"setWindowTitle(QString) --> void"+char(34)+","+char(34)+"setWordWrap(bool on) --> void"+char(34)+","+char(34)+"setWrapping(bool enable) --> void"+char(34)+","+char(34)+"show(void) --> void"+char(34)+","+char(34)+"showDropIndicator(void) --> bool"+char(34)+","+char(34)+"showFullScreen(void) --> void"+char(34)+","+char(34)+"showMaximized(void) --> void"+char(34)+","+char(34)+"showMinimized(void) --> void"+char(34)+","+char(34)+"showNormal(void) --> void"+char(34)+","+char(34)+"signalsBlocked(void) --> bool"+char(34)+","+char(34)+"size(void) --> QSize"+char(34)+","+char(34)+"sizeHint(void) --> QSize"+char(34)+","+char(34)+"sizeHintForColumn(int column) --> int"+char(34)+","+char(34)+"sizeHintForIndex(QModelIndex) --> QSize"+char(34)+","+char(34)+"sizeHintForRow(int row) --> int"+char(34)+","+char(34)+"sizeIncrement(void) --> QSize"+char(34)+","+char(34)+"sizePolicy(void) --> QSizePolicy"+char(34)+","+char(34)+"sortItems(Qt::SortOrder order) --> void"+char(34)+","+char(34)+"spacing(void) --> int"+char(34)+","+char(34)+"stackUnder(QWidget *w) --> void"+char(34)+","+char(34)+"startTimer(int interval) --> int"+char(34)+","+char(34)+"statusTip(void) --> QString"+char(34)+","+char(34)+"style(void) --> QStyle"+char(34)+","+char(34)+"styleSheet(void) --> QString"+char(34)+","+char(34)+"tabKeyNavigation(void) --> bool"+char(34)+","+char(34)+"takeItem(int row) --> QListWidgetItem"+char(34)+","+char(34)+"testAttribute(Qt::WidgetAttribute attribute) --> bool"+char(34)+","+char(34)+"textElideMode(void) --> int"+char(34)+","+char(34)+"thread(void) --> QThread"+char(34)+","+char(34)+"toolTip(void) --> QString"+char(34)+","+char(34)+"underMouse(void) --> bool"+char(34)+","+char(34)+"ungrabGesture(Qt::GestureType gesture) --> void"+char(34)+","+char(34)+"uniformItemSizes(void) --> bool"+char(34)+","+char(34)+"unsetCursor(void) --> void"+char(34)+","+char(34)+"unsetLayoutDirection(void) --> void"+char(34)+","+char(34)+"unsetLocale(void) --> void"+char(34)+","+char(34)+"update(QModelIndex) --> void"+char(34)+","+char(34)+"updateGeometry(void) --> void"+char(34)+","+char(34)+"updatesEnabled(void) --> bool"+char(34)+","+char(34)+"verticalScrollBar(void) --> QScrollBar"+char(34)+","+char(34)+"verticalScrollBarPolicy(void) --> int"+char(34)+","+char(34)+"verticalScrollMode(void) --> int"+char(34)+","+char(34)+"viewMode(void) --> QListView::ViewMode"+char(34)+","+char(34)+"viewport(void) --> QWidget"+char(34)+","+char(34)+"visibleRegion(void) --> QRegion"+char(34)+","+char(34)+"visualItemRect(QListWidgetItem *item) --> QRect"+char(34)+","+char(34)+"visualRect(QModelIndex) --> QRect"+char(34)+","+char(34)+"whatsThis(void) --> QString"+char(34)+","+char(34)+"width(void) --> int"+char(34)+","+char(34)+"window(void) --> QWidget"+char(34)+","+char(34)+"windowFilePath(void) --> QString"+char(34)+","+char(34)+"windowFlags(void) --> int"+char(34)+","+char(34)+"windowHandle(void) --> QWindow"+char(34)+","+char(34)+"windowIcon(void) --> QIcon"+char(34)+","+char(34)+"windowIconText(void) --> QString"+char(34)+","+char(34)+"windowModality(void) --> int"+char(34)+","+char(34)+"windowOpacity(void) --> double"+char(34)+","+char(34)+"windowRole(void) --> QString"+char(34)+","+char(34)+"windowState(void) --> int"+char(34)+","+char(34)+"windowTitle(void) --> QString"+char(34)+","+char(34)+"windowType(void) --> int"+char(34)+","+char(34)+"winId(void) --> int"+char(34)+","+char(34)+"wordWrap(void) --> bool"+char(34)+","+char(34)+"x(void) --> int"+char(34)+","+char(34)+"y(void) --> int"+char(34)+"]"
			],
			[
				"interactionid",
				15
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE2LIST = ["+char(34)+"acceptDrops(void) --> bool"+char(34)+","+char(34)+"accessibleDescription(void) --> QString"+char(34)+","+char(34)+"accessibleName(void) --> QString"+char(34)+","+char(34)+"activateWindow(void) --> void"+char(34)+","+char(34)+"addAction(QAction *action) --> void"+char(34)+","+char(34)+"addItem(QString) --> void"+char(34)+","+char(34)+"addScrollBarWidget(QWidget *widget, Qt::AlignmentFlag alignment) --> void"+char(34)+","+char(34)+"adjustSize(void) --> void"+char(34)+","+char(34)+"alternatingRowColors(void) --> bool"+char(34)+","+char(34)+"autoFillBackground(void) --> bool"+char(34)+","+char(34)+"autoScrollMargin(void) --> int"+char(34)+","+char(34)+"backgroundRole(void) --> int"+char(34)+","+char(34)+"baseSize(void) --> QSize"+char(34)+","+char(34)+"batchSize(void) --> int"+char(34)+","+char(34)+"blockSignals(bool block) --> bool"+char(34)+","+char(34)+"childAt(int x, int y) --> QWidget"+char(34)+","+char(34)+"children(void) --> QObjectList"+char(34)+","+char(34)+"childrenRect(void) --> QRect"+char(34)+","+char(34)+"childrenRegion(void) --> QRegion"+char(34)+","+char(34)+"clear(void) --> void"+char(34)+","+char(34)+"clearFocus(void) --> void"+char(34)+","+char(34)+"clearMask(void) --> void"+char(34)+","+char(34)+"clearPropertyFlags(void) --> void"+char(34)+","+char(34)+"clearSelection(void) --> void"+char(34)+","+char(34)+"close(void) --> bool"+char(34)+","+char(34)+"closePersistentEditor(QModelIndex) --> void"+char(34)+","+char(34)+"contentsMargins(void) --> QMargins"+char(34)+","+char(34)+"contentsRect(void) --> QRect"+char(34)+","+char(34)+"contextMenuPolicy(void) --> int"+char(34)+","+char(34)+"cornerWidget(void) --> QWidget"+char(34)+","+char(34)+"count(void) --> int"+char(34)+","+char(34)+"createWindowContainer(QWindow *window, QWidget *parent, Qt::WindowFlags flags) --> QWidget"+char(34)+","+char(34)+"currentIndex(void) --> QModelIndex"+char(34)+","+char(34)+"currentRow(void) --> int"+char(34)+","+char(34)+"cursor(void) --> QCursor"+char(34)+","+char(34)+"defaultDropAction(void) --> int"+char(34)+","+char(34)+"delete(void) --> void"+char(34)+","+char(34)+"deleteLater(void) --> void"+char(34)+","+char(34)+"dragDropMode(void) --> int"+char(34)+","+char(34)+"dragDropOverwriteMode(void) --> bool"+char(34)+","+char(34)+"dragEnabled(void) --> bool"+char(34)+","+char(34)+"dumpObjectInfo(void) --> void"+char(34)+","+char(34)+"dumpObjectTree(void) --> void"+char(34)+","+char(34)+"edit(QModelIndex) --> void"+char(34)+","+char(34)+"editItem(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"editTriggers(void) --> int"+char(34)+","+char(34)+"effectiveWinId(void) --> int"+char(34)+","+char(34)+"ensurePolished(void) --> void"+char(34)+","+char(34)+"find(int id) --> QWidget"+char(34)+","+char(34)+"flow(void) --> QListView::Flow"+char(34)+","+char(34)+"focusPolicy(void) --> int"+char(34)+","+char(34)+"focusProxy(void) --> QWidget"+char(34)+","+char(34)+"focusWidget(void) --> QWidget"+char(34)+","+char(34)+"font(void) --> QFont"+char(34)+","+char(34)+"fontInfo(void) --> QFontInfo"+char(34)+","+char(34)+"foregroundRole(void) --> int"+char(34)+","+char(34)+"frameGeometry(void) --> QRect"+char(34)+","+char(34)+"frameRect(void) --> QRect"+char(34)+","+char(34)+"frameShadow(void) --> int"+char(34)+","+char(34)+"frameShape(void) --> int"+char(34)+","+char(34)+"frameSize(void) --> QSize"+char(34)+","+char(34)+"frameStyle(void) --> int"+char(34)+","+char(34)+"frameWidth(void) --> int"+char(34)+","+char(34)+"geometry(void) --> QRect"+char(34)+","+char(34)+"getContentsMargins(int *left, int *top, int *right, int *bottom) --> void"+char(34)+","+char(34)+"getcurrentItemChangedEvent(void) --> char"+char(34)+","+char(34)+"getcurrentRowChangedEvent(void) --> char"+char(34)+","+char(34)+"getcurrentTextChangedEvent(void) --> char"+char(34)+","+char(34)+"getitemActivatedEvent(void) --> char"+char(34)+","+char(34)+"getitemChangedEvent(void) --> char"+char(34)+","+char(34)+"getitemClickedEvent(void) --> char"+char(34)+","+char(34)+"getitemDoubleClickedEvent(void) --> char"+char(34)+","+char(34)+"getitemEnteredEvent(void) --> char"+char(34)+","+char(34)+"getitemPressedEvent(void) --> char"+char(34)+","+char(34)+"getitemSelectionChangedEvent(void) --> char"+char(34)+","+char(34)+"grab(QRect) --> QPixmap"+char(34)+","+char(34)+"grabGesture(Qt::GestureType gesture, Qt::GestureFlag flags) --> void"+char(34)+","+char(34)+"grabKeyboard(void) --> void"+char(34)+","+char(34)+"grabMouse(void) --> void"+char(34)+","+char(34)+"grabShortcut(QKeySequence , Qt::ShortcutContext context) --> int"+char(34)+","+char(34)+"graphicsEffect(void) --> QGraphicsEffect"+char(34)+","+char(34)+"graphicsProxyWidget(void) --> QGraphicsProxyWidget"+char(34)+","+char(34)+"gridSize(void) --> QSize"+char(34)+","+char(34)+"hasAutoScroll(void) --> bool"+char(34)+","+char(34)+"hasFocus(void) --> bool"+char(34)+","+char(34)+"hasMouseTracking(void) --> bool"+char(34)+","+char(34)+"height(void) --> int"+char(34)+","+char(34)+"heightForWidth(int w) --> int"+char(34)+","+char(34)+"hide(void) --> void"+char(34)+","+char(34)+"horizontalScrollBar(void) --> QScrollBar"+char(34)+","+char(34)+"horizontalScrollBarPolicy(void) --> int"+char(34)+","+char(34)+"horizontalScrollMode(void) --> int"+char(34)+","+char(34)+"iconSize(void) --> QSize"+char(34)+","+char(34)+"indexAt(QPoint) --> QModelIndex"+char(34)+","+char(34)+"indexWidget(QModelIndex) --> QWidget"+char(34)+","+char(34)+"inherits(char *className) --> bool"+char(34)+","+char(34)+"init(parent) --> object"+char(34)+","+char(34)+"inputMethodHints(void) --> int"+char(34)+","+char(34)+"inputMethodQuery(Qt::InputMethodQuery query) --> QVariant"+char(34)+","+char(34)+"insertAction(QAction *before, QAction *action) --> void"+char(34)+","+char(34)+"insertItem(int, QString) --> void"+char(34)+","+char(34)+"installEventFilter(QObject *filterObj) --> void"+char(34)+","+char(34)+"isActiveWindow(void) --> bool"+char(34)+","+char(34)+"isAncestorOf(QWidget *child) --> bool"+char(34)+","+char(34)+"isEnabled(void) --> bool"+char(34)+","+char(34)+"isEnabledTo(QWidget *ancestor) --> bool"+char(34)+","+char(34)+"isFullScreen(void) --> bool"+char(34)+","+char(34)+"isHidden(void) --> bool"+char(34)+","+char(34)+"isMaximized(void) --> bool"+char(34)+","+char(34)+"isMinimized(void) --> bool"+char(34)+","+char(34)+"isModal(void) --> bool"+char(34)+","+char(34)+"isRowHidden(int row) --> bool"+char(34)+","+char(34)+"isSelectionRectVisible(void) --> bool"+char(34)+","+char(34)+"isSortingEnabled(void) --> bool"+char(34)+","+char(34)+"isVisible(void) --> bool"+char(34)+","+char(34)+"isVisibleTo(QWidget *ancestor) --> bool"+char(34)+","+char(34)+"isWidgetType(void) --> bool"+char(34)+","+char(34)+"isWindow(void) --> bool"+char(34)+","+char(34)+"isWindowModified(void) --> bool"+char(34)+","+char(34)+"isWrapping(void) --> bool"+char(34)+","+char(34)+"item(int row) --> QListWidgetItem"+char(34)+","+char(34)+"itemAt(int x, int y) --> QListWidgetItem"+char(34)+","+char(34)+"itemDelegate(QModelIndex) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemDelegateForColumn(int column) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemDelegateForRow(int row) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemWidget(QListWidgetItem *item) --> QWidget"+char(34)+","+char(34)+"keyboardGrabber(void) --> QWidget"+char(34)+","+char(34)+"keyboardSearch(QString) --> void"+char(34)+","+char(34)+"killTimer(int id) --> void"+char(34)+","+char(34)+"layout(void) --> QLayout"+char(34)+","+char(34)+"layoutDirection(void) --> int"+char(34)+","+char(34)+"layoutMode(void) --> QListView::LayoutMode"+char(34)+","+char(34)+"lineWidth(void) --> int"+char(34)+","+char(34)+"locale(void) --> QLocale"+char(34)+","+char(34)+"lower(void) --> void"+char(34)+","+char(34)+"mapFrom(QWidget *parent, QPoint) --> QPoint"+char(34)+","+char(34)+"mapFromGlobal(QPoint) --> QPoint"+char(34)+","+char(34)+"mapFromParent(QPoint) --> QPoint"+char(34)+","+char(34)+"mapTo(QWidget *parent, QPoint) --> QPoint"+char(34)+","+char(34)+"mapToGlobal(QPoint pos) --> QPoint"+char(34)+","+char(34)+"mapToParent(QPoint pos) --> QPoint"+char(34)+","+char(34)+"mask(void) --> QRegion"+char(34)+","+char(34)+"maximumHeight(void) --> int"+char(34)+","+char(34)+"maximumSize(void) --> QSize"+char(34)+","+char(34)+"maximumViewportSize(void) --> QSize"+char(34)+","+char(34)+"maximumWidth(void) --> int"+char(34)+","+char(34)+"midLineWidth(void) --> int"+char(34)+","+char(34)+"minimumHeight(void) --> int"+char(34)+","+char(34)+"minimumSize(void) --> QSize"+char(34)+","+char(34)+"minimumWidth(void) --> int"+char(34)+","+char(34)+"model(void) --> QAbstractItemModel"+char(34)+","+char(34)+"modelColumn(void) --> int"+char(34)+","+char(34)+"mouseGrabber(void) --> QWidget"+char(34)+","+char(34)+"move(int x, int y) --> void"+char(34)+","+char(34)+"movement(void) --> QListView::Movement"+char(34)+","+char(34)+"moveToThread(QThread *targetThread) --> void"+char(34)+","+char(34)+"nativeParentWidget(void) --> QWidget"+char(34)+","+char(34)+"nextInFocusChain(void) --> QWidget"+char(34)+","+char(34)+"normalGeometry(void) --> QRect"+char(34)+","+char(34)+"objectName(void) --> QString"+char(34)+","+char(34)+"objectpointer(void) --> pointer"+char(34)+","+char(34)+"openPersistentEditor(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"overrideWindowFlags(Qt::WindowType flags) --> void"+char(34)+","+char(34)+"palette(void) --> QPalette"+char(34)+","+char(34)+"parent(void) --> QObject"+char(34)+","+char(34)+"parentWidget(void) --> QWidget"+char(34)+","+char(34)+"pos(void) --> QPoint"+char(34)+","+char(34)+"previousInFocusChain(void) --> QWidget"+char(34)+","+char(34)+"property(char *name) --> QVariant"+char(34)+","+char(34)+"raise(void) --> void"+char(34)+","+char(34)+"rect(void) --> QRect"+char(34)+","+char(34)+"releaseKeyboard(void) --> void"+char(34)+","+char(34)+"releaseMouse(void) --> void"+char(34)+","+char(34)+"releaseShortcut(int id) --> void"+char(34)+","+char(34)+"removeAction(QAction *action) --> void"+char(34)+","+char(34)+"removeEventFilter(QObject *obj) --> void"+char(34)+","+char(34)+"removeItemWidget(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"render(QPaintDevice *target, QPoint,QRegion, QWidget::RenderFlag) --> void"+char(34)+","+char(34)+"repaint(void) --> void"+char(34)+","+char(34)+"resize(int w, int h) --> void"+char(34)+","+char(34)+"resizeMode(void) --> QListView::ResizeMode"+char(34)+","+char(34)+"restoreGeometry(QByteArray) --> bool"+char(34)+","+char(34)+"rootIndex(void) --> QModelIndex"+char(34)+","+char(34)+"row(QListWidgetItem *item) --> int"+char(34)+","+char(34)+"saveGeometry(void) --> QByteArray"+char(34)+","+char(34)+"scroll(int dx, int dy) --> void"+char(34)+","+char(34)+"scrollBarWidgets(Qt::AlignmentFlag) --> QWidgetList"+char(34)+","+char(34)+"scrollTo(QModelIndex,QAbstractItemView::ScrollHint) --> void"+char(34)+","+char(34)+"scrollToBottom(void) --> void"+char(34)+","+char(34)+"scrollToItem(QListWidgetItem *item,QAbstractItemView::ScrollHint hint) --> void"+char(34)+","+char(34)+"scrollToTop(void) --> void"+char(34)+","+char(34)+"selectionBehavior(void) --> int"+char(34)+","+char(34)+"selectionMode(void) --> int"+char(34)+","+char(34)+"selectionModel(void) --> QItemSelectionModel"+char(34)+","+char(34)+"setAcceptDrops(bool on) --> void"+char(34)+","+char(34)+"setAccessibleDescription(QString) --> void"+char(34)+","+char(34)+"setAccessibleName(QString) --> void"+char(34)+","+char(34)+"setAlternatingRowColors(bool enable) --> void"+char(34)+","+char(34)+"setAttribute(Qt::WidgetAttribute attribute, bool on) --> void"+char(34)+","+char(34)+"setAutoFillBackground(bool enabled) --> void"+char(34)+","+char(34)+"setAutoScroll(bool enable) --> void"+char(34)+","+char(34)+"setAutoScrollMargin(int margin) --> void"+char(34)+","+char(34)+"setBackgroundRole(QPalette::ColorRole role) --> void"+char(34)+","+char(34)+"setBaseSize(int basew, int baseh) --> void"+char(34)+","+char(34)+"setBatchSize(int batchSize) --> void"+char(34)+","+char(34)+"setContentsMargins(int left, int top, int right, int bottom) --> void"+char(34)+","+char(34)+"setContextMenuPolicy(Qt::ContextMenuPolicy policy) --> void"+char(34)+","+char(34)+"setCornerWidget(QWidget *widget) --> void"+char(34)+","+char(34)+"setCurrentIndex(QModelIndex) --> void"+char(34)+","+char(34)+"setCurrentItem(QListWidgetItem *item, QItemSelectionModel::SelectionFlag command) --> void"+char(34)+","+char(34)+"setcurrentItemChangedEvent(char *) --> void"+char(34)+","+char(34)+"setCurrentRow(int row, QItemSelectionModel::SelectionFlag command) --> void"+char(34)+","+char(34)+"setcurrentRowChangedEvent(char *) --> void"+char(34)+","+char(34)+"setcurrentTextChangedEvent(char *) --> void"+char(34)+","+char(34)+"setCursor(QCursor) --> void"+char(34)+","+char(34)+"setDefaultDropAction(Qt::DropAction dropAction) --> void"+char(34)+","+char(34)+"setDisabled(bool disable) --> void"+char(34)+","+char(34)+"setDragDropMode(QAbstractItemView::DragDropMode behavior) --> void"+char(34)+","+char(34)+"setDragDropOverwriteMode(bool overwrite) --> void"+char(34)+","+char(34)+"setDragEnabled(bool enable) --> void"+char(34)+","+char(34)+"setDropIndicatorShown(bool enable) --> void"+char(34)+","+char(34)+"setEditTriggers(QAbstractItemView::EditTrigger triggers) --> void"+char(34)+","+char(34)+"setEnabled(bool) --> void"+char(34)+","+char(34)+"setFixedHeight(int h) --> void"+char(34)+","+char(34)+"setFixedSize(int w, int h) --> void"+char(34)+","+char(34)+"setFixedWidth(int w) --> void"+char(34)+","+char(34)+"setFlow(QListView::Flow flow) --> void"+char(34)+","+char(34)+"setFocus(Qt::FocusReason reason) --> void"+char(34)+","+char(34)+"setFocusPolicy(Qt::FocusPolicy policy) --> void"+char(34)+","+char(34)+"setFocusProxy(QWidget *w) --> void"+char(34)+","+char(34)+"setFont(QFont) --> void"+char(34)+","+char(34)+"setForegroundRole(QPalette::ColorRole role) --> void"+char(34)+","+char(34)+"setFrameRect(QRect) --> void"+char(34)+","+char(34)+"setFrameShadow(QFrame::Shadow) --> void"+char(34)+","+char(34)+"setFrameShape(QFrame::Shape) --> void"+char(34)+","+char(34)+"setFrameStyle(int style) --> void"+char(34)+","+char(34)+"setGeometry(int x, int y, int w, int h) --> void"+char(34)+","+char(34)+"setGraphicsEffect(QGraphicsEffect *effect) --> void"+char(34)+","+char(34)+"setGridSize( QSize  size) --> void"+char(34)+","+char(34)+"setHidden(bool hidden) --> void"+char(34)+","+char(34)+"setHorizontalScrollBar(QScrollBar *scrollBar) --> void"+char(34)+","+char(34)+"setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy) --> void"+char(34)+","+char(34)+"setHorizontalScrollMode(QAbstractItemView::ScrollMode mode) --> void"+char(34)+","+char(34)+"setIconSize(QSize) --> void"+char(34)+","+char(34)+"setIndexWidget(QModelIndex, QWidget *widget) --> void"+char(34)+","+char(34)+"setInputMethodHints(Qt::InputMethodHint hints) --> void"+char(34)+","+char(34)+"setitemActivatedEvent(char *) --> void"+char(34)+","+char(34)+"setitemChangedEvent(char *) --> void"+char(34)+","+char(34)+"setitemClickedEvent(char *) --> void"+char(34)+","+char(34)+"setItemDelegate(QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setItemDelegateForColumn(int column, QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setItemDelegateForRow(int row, QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setitemDoubleClickedEvent(char *) --> void"+char(34)+","+char(34)+"setitemEnteredEvent(char *) --> void"+char(34)+","+char(34)+"setitemPressedEvent(char *) --> void"+char(34)+","+char(34)+"setitemSelectionChangedEvent(char *) --> void"+char(34)+","+char(34)+"setItemWidget(QListWidgetItem *item, QWidget *widget) --> void"+char(34)+","+char(34)+"setLayout(QLayout *layout) --> void"+char(34)+","+char(34)+"setLayoutDirection(Qt::LayoutDirection direction) --> void"+char(34)+","+char(34)+"setLayoutMode(QListView::LayoutMode mode) --> void"+char(34)+","+char(34)+"setLineWidth(int) --> void"+char(34)+","+char(34)+"setLocale(QLocale) --> void"+char(34)+","+char(34)+"setMask(QBitmap) --> void"+char(34)+","+char(34)+"setMaximumHeight(int maxh) --> void"+char(34)+","+char(34)+"setMaximumSize(int maxw, int maxh) --> void"+char(34)+","+char(34)+"setMaximumWidth(int maxw) --> void"+char(34)+","+char(34)+"setMidLineWidth(int) --> void"+char(34)+","+char(34)+"setMinimumHeight(int minh) --> void"+char(34)+","+char(34)+"setMinimumSize(int minw, int minh) --> void"+char(34)+","+char(34)+"setMinimumWidth(int minw) --> void"+char(34)+","+char(34)+"setModel(QAbstractItemModel *model) --> void"+char(34)+","+char(34)+"setModelColumn(int column) --> void"+char(34)+","+char(34)+"setMouseTracking(bool enable) --> void"+char(34)+","+char(34)+"setMovement(QListView::Movement movement) --> void"+char(34)+","+char(34)+"setObjectName(QString) --> void"+char(34)+","+char(34)+"setPalette(QPalette) --> void"+char(34)+","+char(34)+"setParent(QWidget *parent) --> void"+char(34)+","+char(34)+"setProperty(char *name, QVariant) --> bool"+char(34)+","+char(34)+"setProperty_2(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_3(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_4(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_5(char *name, QString) --> bool"+char(34)+","+char(34)+"setProperty_double(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_float(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_int(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_string(char *name, QString) --> bool"+char(34)+","+char(34)+"setResizeMode(QListView::ResizeMode mode) --> void"+char(34)+","+char(34)+"setRowHidden(int row, bool hide) --> void"+char(34)+","+char(34)+"setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior) --> void"+char(34)+","+char(34)+"setSelectionMode(QAbstractItemView::SelectionMode mode) --> void"+char(34)+","+char(34)+"setSelectionModel(QItemSelectionModel *selectionModel) --> void"+char(34)+","+char(34)+"setSelectionRectVisible(bool show) --> void"+char(34)+","+char(34)+"setShortcutAutoRepeat(int id, bool enable) --> void"+char(34)+","+char(34)+"setShortcutEnabled(int id, bool enable) --> void"+char(34)+","+char(34)+"setSizeIncrement(int w, int h) --> void"+char(34)+","+char(34)+"setSizePolicy(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical) --> void"+char(34)+","+char(34)+"setSortingEnabled(bool enable) --> void"+char(34)+","+char(34)+"setSpacing(int space) --> void"+char(34)+","+char(34)+"setStatusTip(QString) --> void"+char(34)+","+char(34)+"setStyle(QStyle *style) --> void"+char(34)+","+char(34)+"setStyleSheet(QString) --> void"+char(34)+","+char(34)+"setTabKeyNavigation(bool enable) --> void"+char(34)+","+char(34)+"setTabOrder(QWidget *first, QWidget *second) --> void"+char(34)+","+char(34)+"setTextElideMode(Qt::TextElideMode mode) --> void"+char(34)+","+char(34)+"setToolTip(QString) --> void"+char(34)+","+char(34)+"setUniformItemSizes(bool enable) --> void"+char(34)+","+char(34)+"setUpdatesEnabled(bool enable) --> void"+char(34)+","+char(34)+"setVerticalScrollBar(QScrollBar *scrollBar) --> void"+char(34)+","+char(34)+"setVerticalScrollBarPolicy(Qt::ScrollBarPolicy) --> void"+char(34)+","+char(34)+"setVerticalScrollMode(QAbstractItemView::ScrollMode mode) --> void"+char(34)+","+char(34)+"setViewMode(QListView::ViewMode mode) --> void"+char(34)+","+char(34)+"setViewport(QWidget *widget) --> void"+char(34)+","+char(34)+"setWhatsThis(QString) --> void"+char(34)+","+char(34)+"setWindowFilePath(QString) --> void"+char(34)+","+char(34)+"setWindowFlags(Qt::WindowType type) --> void"+char(34)+","+char(34)+"setWindowIcon(QIcon) --> void"+char(34)+","+char(34)+"setWindowIconText(QString) --> void"+char(34)+","+char(34)+"setWindowModality(Qt::WindowModality windowModality) --> void"+char(34)+","+char(34)+"setWindowModified(bool) --> void"+char(34)+","+char(34)+"setWindowOpacity(double level) --> void"+char(34)+","+char(34)+"setWindowRole(QString) --> void"+char(34)+","+char(34)+"setWindowState(Qt::WindowState windowState) --> void"+char(34)+","+char(34)+"setWindowTitle(QString) --> void"+char(34)+","+char(34)+"setWordWrap(bool on) --> void"+char(34)+","+char(34)+"setWrapping(bool enable) --> void"+char(34)+","+char(34)+"show(void) --> void"+char(34)+","+char(34)+"showDropIndicator(void) --> bool"+char(34)+","+char(34)+"showFullScreen(void) --> void"+char(34)+","+char(34)+"showMaximized(void) --> void"+char(34)+","+char(34)+"showMinimized(void) --> void"+char(34)+","+char(34)+"showNormal(void) --> void"+char(34)+","+char(34)+"signalsBlocked(void) --> bool"+char(34)+","+char(34)+"size(void) --> QSize"+char(34)+","+char(34)+"sizeHint(void) --> QSize"+char(34)+","+char(34)+"sizeHintForColumn(int column) --> int"+char(34)+","+char(34)+"sizeHintForIndex(QModelIndex) --> QSize"+char(34)+","+char(34)+"sizeHintForRow(int row) --> int"+char(34)+","+char(34)+"sizeIncrement(void) --> QSize"+char(34)+","+char(34)+"sizePolicy(void) --> QSizePolicy"+char(34)+","+char(34)+"sortItems(Qt::SortOrder order) --> void"+char(34)+","+char(34)+"spacing(void) --> int"+char(34)+","+char(34)+"stackUnder(QWidget *w) --> void"+char(34)+","+char(34)+"startTimer(int interval) --> int"+char(34)+","+char(34)+"statusTip(void) --> QString"+char(34)+","+char(34)+"style(void) --> QStyle"+char(34)+","+char(34)+"styleSheet(void) --> QString"+char(34)+","+char(34)+"tabKeyNavigation(void) --> bool"+char(34)+","+char(34)+"takeItem(int row) --> QListWidgetItem"+char(34)+","+char(34)+"testAttribute(Qt::WidgetAttribute attribute) --> bool"+char(34)+","+char(34)+"textElideMode(void) --> int"+char(34)+","+char(34)+"thread(void) --> QThread"+char(34)+","+char(34)+"toolTip(void) --> QString"+char(34)+","+char(34)+"underMouse(void) --> bool"+char(34)+","+char(34)+"ungrabGesture(Qt::GestureType gesture) --> void"+char(34)+","+char(34)+"uniformItemSizes(void) --> bool"+char(34)+","+char(34)+"unsetCursor(void) --> void"+char(34)+","+char(34)+"unsetLayoutDirection(void) --> void"+char(34)+","+char(34)+"unsetLocale(void) --> void"+char(34)+","+char(34)+"update(QModelIndex) --> void"+char(34)+","+char(34)+"updateGeometry(void) --> void"+char(34)+","+char(34)+"updatesEnabled(void) --> bool"+char(34)+","+char(34)+"verticalScrollBar(void) --> QScrollBar"+char(34)+","+char(34)+"verticalScrollBarPolicy(void) --> int"+char(34)+","+char(34)+"verticalScrollMode(void) --> int"+char(34)+","+char(34)+"viewMode(void) --> QListView::ViewMode"+char(34)+","+char(34)+"viewport(void) --> QWidget"+char(34)+","+char(34)+"visibleRegion(void) --> QRegion"+char(34)+","+char(34)+"visualItemRect(QListWidgetItem *item) --> QRect"+char(34)+","+char(34)+"visualRect(QModelIndex) --> QRect"+char(34)+","+char(34)+"whatsThis(void) --> QString"+char(34)+","+char(34)+"width(void) --> int"+char(34)+","+char(34)+"window(void) --> QWidget"+char(34)+","+char(34)+"windowFilePath(void) --> QString"+char(34)+","+char(34)+"windowFlags(void) --> int"+char(34)+","+char(34)+"windowHandle(void) --> QWindow"+char(34)+","+char(34)+"windowIcon(void) --> QIcon"+char(34)+","+char(34)+"windowIconText(void) --> QString"+char(34)+","+char(34)+"windowModality(void) --> int"+char(34)+","+char(34)+"windowOpacity(void) --> double"+char(34)+","+char(34)+"windowRole(void) --> QString"+char(34)+","+char(34)+"windowState(void) --> int"+char(34)+","+char(34)+"windowTitle(void) --> QString"+char(34)+","+char(34)+"windowType(void) --> int"+char(34)+","+char(34)+"winId(void) --> int"+char(34)+","+char(34)+"wordWrap(void) --> bool"+char(34)+","+char(34)+"x(void) --> int"+char(34)+","+char(34)+"y(void) --> int"+char(34)+"]"
			]
		]
	],
	[
		16,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE3</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Parameters&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE3 = "+char(34)+"Parameters"+char(34)+""
			],
			[
				"interactionid",
				16
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE3 = "+char(34)+"Parameters"+char(34)+""
			]
		]
	],
	[
		17,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QLISTWIDGETCLASS_IP_VALUE4</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Output&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE4 = "+char(34)+"Output"+char(34)+""
			],
			[
				"interactionid",
				17
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QLISTWIDGETCLASS_IP_VALUE4 = "+char(34)+"Output"+char(34)+""
			]
		]
	]
]

aInteractionsTable = [
	[
		1,
		1,
		"",
		"01/06/2025",
		"18:49:27",
		""
	],
	[
		2,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;/*;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		3,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;**	Project : Programming Without Coding Technology (PWCT) Version 2.0;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		4,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;**	File Purpose :  qlistwidgetclass Component;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		5,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;**	Date : 2018.03.14;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		6,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		7,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;*/;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		8,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_TITLE;;_RV_;;rightside;;_RV_;;"+char(34)+"ListWidget Class Component"+char(34)+";;_RV_;;"
	],
	[
		9,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE;;_RV_;;rightside;;_RV_;;"+char(34)+"Object"+char(34)+";;_RV_;;"
	],
	[
		10,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE_STARTVALUE;;_RV_;;rightside;;_RV_;;"+char(34)+"ListWidget1"+char(34)+";;_RV_;;"
	],
	[
		11,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE2;;_RV_;;rightside;;_RV_;;"+char(34)+"Method"+char(34)+";;_RV_;;"
	],
	[
		12,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC;;_RV_;;rightside;;_RV_;;["+char(34)+"acceptdrops"+char(34)+","+char(34)+"accessibledescription"+char(34)+","+char(34)+"accessiblename"+char(34)+","+char(34)+"activatewindow"+char(34)+","+char(34)+"addaction"+char(34)+","+char(34)+"additem"+char(34)+","+char(34)+"addscrollbarwidget"+char(34)+","+char(34)+"adjustsize"+char(34)+","+char(34)+"alternatingrowcolors"+char(34)+","+char(34)+"autofillbackground"+char(34)+","+char(34)+"autoscrollmargin"+char(34)+","+char(34)+"backgroundrole"+char(34)+","+char(34)+"basesize"+char(34)+","+char(34)+"batchsize"+char(34)+","+char(34)+"blocksignals"+char(34)+","+char(34)+"childat"+char(34)+","+char(34)+"children"+char(34)+","+char(34)+"childrenrect"+char(34)+","+char(34)+"childrenregion"+char(34)+","+char(34)+"clear"+char(34)+","+char(34)+"clearfocus"+char(34)+","+char(34)+"clearmask"+char(34)+","+char(34)+"clearpropertyflags"+char(34)+","+char(34)+"clearselection"+char(34)+","+char(34)+"close"+char(34)+","+char(34)+"closepersistenteditor"+char(34)+","+char(34)+"contentsmargins"+char(34)+","+char(34)+"contentsrect"+char(34)+","+char(34)+"contextmenupolicy"+char(34)+","+char(34)+"cornerwidget"+char(34)+","+char(34)+"count"+char(34)+","+char(34)+"createwindowcontainer"+char(34)+","+char(34)+"currentindex"+char(34)+","+char(34)+"currentrow"+char(34)+","+char(34)+"cursor"+char(34)+","+char(34)+"defaultdropaction"+char(34)+","+char(34)+"delete"+char(34)+","+char(34)+"deletelater"+char(34)+","+char(34)+"dragdropmode"+char(34)+","+char(34)+"dragdropoverwritemode"+char(34)+","+char(34)+"dragenabled"+char(34)+","+char(34)+"dumpobjectinfo"+char(34)+","+char(34)+"dumpobjecttree"+char(34)+","+char(34)+"edit"+char(34)+","+char(34)+"edititem"+char(34)+","+char(34)+"edittriggers"+char(34)+","+char(34)+"effectivewinid"+char(34)+","+char(34)+"ensurepolished"+char(34)+","+char(34)+"find"+char(34)+","+char(34)+"flow"+char(34)+","+char(34)+"focuspolicy"+char(34)+","+char(34)+"focusproxy"+char(34)+","+char(34)+"focuswidget"+char(34)+","+char(34)+"font"+char(34)+","+char(34)+"fontinfo"+char(34)+","+char(34)+"foregroundrole"+char(34)+","+char(34)+"framegeometry"+char(34)+","+char(34)+"framerect"+char(34)+","+char(34)+"frameshadow"+char(34)+","+char(34)+"frameshape"+char(34)+","+char(34)+"framesize"+char(34)+","+char(34)+"framestyle"+char(34)+","+char(34)+"framewidth"+char(34)+","+char(34)+"geometry"+char(34)+","+char(34)+"getcontentsmargins"+char(34)+","+char(34)+"getcurrentitemchangedevent"+char(34)+","+char(34)+"getcurrentrowchangedevent"+char(34)+","+char(34)+"getcurrenttextchangedevent"+char(34)+","+char(34)+"getitemactivatedevent"+char(34)+","+char(34)+"getitemchangedevent"+char(34)+","+char(34)+"getitemclickedevent"+char(34)+","+char(34)+"getitemdoubleclickedevent"+char(34)+","+char(34)+"getitementeredevent"+char(34)+","+char(34)+"getitempressedevent"+char(34)+","+char(34)+"getitemselectionchangedevent"+char(34)+","+char(34)+"grab"+char(34)+","+char(34)+"grabgesture"+char(34)+","+char(34)+"grabkeyboard"+char(34)+","+char(34)+"grabmouse"+char(34)+","+char(34)+"grabshortcut"+char(34)+","+char(34)+"graphicseffect"+char(34)+","+char(34)+"graphicsproxywidget"+char(34)+","+char(34)+"gridsize"+char(34)+","+char(34)+"hasautoscroll"+char(34)+","+char(34)+"hasfocus"+char(34)+","+char(34)+"hasmousetracking"+char(34)+","+char(34)+"height"+char(34)+","+char(34)+"heightforwidth"+char(34)+","+char(34)+"hide"+char(34)+","+char(34)+"horizontalscrollbar"+char(34)+","+char(34)+"horizontalscrollbarpolicy"+char(34)+","+char(34)+"horizontalscrollmode"+char(34)+","+char(34)+"iconsize"+char(34)+","+char(34)+"indexat"+char(34)+","+char(34)+"indexwidget"+char(34)+","+char(34)+"inherits"+char(34)+","+char(34)+"init"+char(34)+","+char(34)+"inputmethodhints"+char(34)+","+char(34)+"inputmethodquery"+char(34)+","+char(34)+"insertaction"+char(34)+","+char(34)+"insertitem"+char(34)+","+char(34)+"installeventfilter"+char(34)+","+char(34)+"isactivewindow"+char(34)+","+char(34)+"isancestorof"+char(34)+","+char(34)+"isenabled"+char(34)+","+char(34)+"isenabledto"+char(34)+","+char(34)+"isfullscreen"+char(34)+","+char(34)+"ishidden"+char(34)+","+char(34)+"ismaximized"+char(34)+","+char(34)+"isminimized"+char(34)+","+char(34)+"ismodal"+char(34)+","+char(34)+"isrowhidden"+char(34)+","+char(34)+"isselectionrectvisible"+char(34)+","+char(34)+"issortingenabled"+char(34)+","+char(34)+"isvisible"+char(34)+","+char(34)+"isvisibleto"+char(34)+","+char(34)+"iswidgettype"+char(34)+","+char(34)+"iswindow"+char(34)+","+char(34)+"iswindowmodified"+char(34)+","+char(34)+"iswrapping"+char(34)+","+char(34)+"item"+char(34)+","+char(34)+"itemat"+char(34)+","+char(34)+"itemdelegate"+char(34)+","+char(34)+"itemdelegateforcolumn"+char(34)+","+char(34)+"itemdelegateforrow"+char(34)+","+char(34)+"itemwidget"+char(34)+","+char(34)+"keyboardgrabber"+char(34)+","+char(34)+"keyboardsearch"+char(34)+","+char(34)+"killtimer"+char(34)+","+char(34)+"layout"+char(34)+","+char(34)+"layoutdirection"+char(34)+","+char(34)+"layoutmode"+char(34)+","+char(34)+"linewidth"+char(34)+","+char(34)+"locale"+char(34)+","+char(34)+"lower"+char(34)+","+char(34)+"mapfrom"+char(34)+","+char(34)+"mapfromglobal"+char(34)+","+char(34)+"mapfromparent"+char(34)+","+char(34)+"mapto"+char(34)+","+char(34)+"maptoglobal"+char(34)+","+char(34)+"maptoparent"+char(34)+","+char(34)+"mask"+char(34)+","+char(34)+"maximumheight"+char(34)+","+char(34)+"maximumsize"+char(34)+","+char(34)+"maximumviewportsize"+char(34)+","+char(34)+"maximumwidth"+char(34)+","+char(34)+"midlinewidth"+char(34)+","+char(34)+"minimumheight"+char(34)+","+char(34)+"minimumsize"+char(34)+","+char(34)+"minimumwidth"+char(34)+","+char(34)+"model"+char(34)+","+char(34)+"modelcolumn"+char(34)+","+char(34)+"mousegrabber"+char(34)+","+char(34)+"move"+char(34)+","+char(34)+"movement"+char(34)+","+char(34)+"movetothread"+char(34)+","+char(34)+"nativeparentwidget"+char(34)+","+char(34)+"nextinfocuschain"+char(34)+","+char(34)+"normalgeometry"+char(34)+","+char(34)+"objectname"+char(34)+","+char(34)+"objectpointer"+char(34)+","+char(34)+"openpersistenteditor"+char(34)+","+char(34)+"overridewindowflags"+char(34)+","+char(34)+"palette"+char(34)+","+char(34)+"parent"+char(34)+","+char(34)+"parentwidget"+char(34)+","+char(34)+"pos"+char(34)+","+char(34)+"previousinfocuschain"+char(34)+","+char(34)+"property"+char(34)+","+char(34)+"raise"+char(34)+","+char(34)+"rect"+char(34)+","+char(34)+"releasekeyboard"+char(34)+","+char(34)+"releasemouse"+char(34)+","+char(34)+"releaseshortcut"+char(34)+","+char(34)+"removeaction"+char(34)+","+char(34)+"removeeventfilter"+char(34)+","+char(34)+"removeitemwidget"+char(34)+","+char(34)+"render"+char(34)+","+char(34)+"repaint"+char(34)+","+char(34)+"resize"+char(34)+","+char(34)+"resizemode"+char(34)+","+char(34)+"restoregeometry"+char(34)+","+char(34)+"rootindex"+char(34)+","+char(34)+"row"+char(34)+","+char(34)+"savegeometry"+char(34)+","+char(34)+"scroll"+char(34)+","+char(34)+"scrollbarwidgets"+char(34)+","+char(34)+"scrollto"+char(34)+","+char(34)+"scrolltobottom"+char(34)+","+char(34)+"scrolltoitem"+char(34)+","+char(34)+"scrolltotop"+char(34)+","+char(34)+"selectionbehavior"+char(34)+","+char(34)+"selectionmode"+char(34)+","+char(34)+"selectionmodel"+char(34)+","+char(34)+"setacceptdrops"+char(34)+","+char(34)+"setaccessibledescription"+char(34)+","+char(34)+"setaccessiblename"+char(34)+","+char(34)+"setalternatingrowcolors"+char(34)+","+char(34)+"setattribute"+char(34)+","+char(34)+"setautofillbackground"+char(34)+","+char(34)+"setautoscroll"+char(34)+","+char(34)+"setautoscrollmargin"+char(34)+","+char(34)+"setbackgroundrole"+char(34)+","+char(34)+"setbasesize"+char(34)+","+char(34)+"setbatchsize"+char(34)+","+char(34)+"setcontentsmargins"+char(34)+","+char(34)+"setcontextmenupolicy"+char(34)+","+char(34)+"setcornerwidget"+char(34)+","+char(34)+"setcurrentindex"+char(34)+","+char(34)+"setcurrentitem"+char(34)+","+char(34)+"setcurrentitemchangedevent"+char(34)+","+char(34)+"setcurrentrow"+char(34)+","+char(34)+"setcurrentrowchangedevent"+char(34)+","+char(34)+"setcurrenttextchangedevent"+char(34)+","+char(34)+"setcursor"+char(34)+","+char(34)+"setdefaultdropaction"+char(34)+","+char(34)+"setdisabled"+char(34)+","+char(34)+"setdragdropmode"+char(34)+","+char(34)+"setdragdropoverwritemode"+char(34)+","+char(34)+"setdragenabled"+char(34)+","+char(34)+"setdropindicatorshown"+char(34)+","+char(34)+"setedittriggers"+char(34)+","+char(34)+"setenabled"+char(34)+","+char(34)+"setfixedheight"+char(34)+","+char(34)+"setfixedsize"+char(34)+","+char(34)+"setfixedwidth"+char(34)+","+char(34)+"setflow"+char(34)+","+char(34)+"setfocus"+char(34)+","+char(34)+"setfocuspolicy"+char(34)+","+char(34)+"setfocusproxy"+char(34)+","+char(34)+"setfont"+char(34)+","+char(34)+"setforegroundrole"+char(34)+","+char(34)+"setframerect"+char(34)+","+char(34)+"setframeshadow"+char(34)+","+char(34)+"setframeshape"+char(34)+","+char(34)+"setframestyle"+char(34)+","+char(34)+"setgeometry"+char(34)+","+char(34)+"setgraphicseffect"+char(34)+","+char(34)+"setgridsize"+char(34)+","+char(34)+"sethidden"+char(34)+","+char(34)+"sethorizontalscrollbar"+char(34)+","+char(34)+"sethorizontalscrollbarpolicy"+char(34)+","+char(34)+"sethorizontalscrollmode"+char(34)+","+char(34)+"seticonsize"+char(34)+","+char(34)+"setindexwidget"+char(34)+","+char(34)+"setinputmethodhints"+char(34)+","+char(34)+"setitemactivatedevent"+char(34)+","+char(34)+"setitemchangedevent"+char(34)+","+char(34)+"setitemclickedevent"+char(34)+","+char(34)+"setitemdelegate"+char(34)+","+char(34)+"setitemdelegateforcolumn"+char(34)+","+char(34)+"setitemdelegateforrow"+char(34)+","+char(34)+"setitemdoubleclickedevent"+char(34)+","+char(34)+"setitementeredevent"+char(34)+","+char(34)+"setitempressedevent"+char(34)+","+char(34)+"setitemselectionchangedevent"+char(34)+","+char(34)+"setitemwidget"+char(34)+","+char(34)+"setlayout"+char(34)+","+char(34)+"setlayoutdirection"+char(34)+","+char(34)+"setlayoutmode"+char(34)+","+char(34)+"setlinewidth"+char(34)+","+char(34)+"setlocale"+char(34)+","+char(34)+"setmask"+char(34)+","+char(34)+"setmaximumheight"+char(34)+","+char(34)+"setmaximumsize"+char(34)+","+char(34)+"setmaximumwidth"+char(34)+","+char(34)+"setmidlinewidth"+char(34)+","+char(34)+"setminimumheight"+char(34)+","+char(34)+"setminimumsize"+char(34)+","+char(34)+"setminimumwidth"+char(34)+","+char(34)+"setmodel"+char(34)+","+char(34)+"setmodelcolumn"+char(34)+","+char(34)+"setmousetracking"+char(34)+","+char(34)+"setmovement"+char(34)+","+char(34)+"setobjectname"+char(34)+","+char(34)+"setpalette"+char(34)+","+char(34)+"setparent"+char(34)+","+char(34)+"setproperty"+char(34)+","+char(34)+"setproperty_2"+char(34)+","+char(34)+"setproperty_3"+char(34)+","+char(34)+"setproperty_4"+char(34)+","+char(34)+"setproperty_5"+char(34)+","+char(34)+"setproperty_double"+char(34)+","+char(34)+"setproperty_float"+char(34)+","+char(34)+"setproperty_int"+char(34)+","+char(34)+"setproperty_string"+char(34)+","+char(34)+"setresizemode"+char(34)+","+char(34)+"setrowhidden"+char(34)+","+char(34)+"setselectionbehavior"+char(34)+","+char(34)+"setselectionmode"+char(34)+","+char(34)+"setselectionmodel"+char(34)+","+char(34)+"setselectionrectvisible"+char(34)+","+char(34)+"setshortcutautorepeat"+char(34)+","+char(34)+"setshortcutenabled"+char(34)+","+char(34)+"setsizeincrement"+char(34)+","+char(34)+"setsizepolicy"+char(34)+","+char(34)+"setsortingenabled"+char(34)+","+char(34)+"setspacing"+char(34)+","+char(34)+"setstatustip"+char(34)+","+char(34)+"setstyle"+char(34)+","+char(34)+"setstylesheet"+char(34)+","+char(34)+"settabkeynavigation"+char(34)+","+char(34)+"settaborder"+char(34)+","+char(34)+"settextelidemode"+char(34)+","+char(34)+"settooltip"+char(34)+","+char(34)+"setuniformitemsizes"+char(34)+","+char(34)+"setupdatesenabled"+char(34)+","+char(34)+"setverticalscrollbar"+char(34)+","+char(34)+"setverticalscrollbarpolicy"+char(34)+","+char(34)+"setverticalscrollmode"+char(34)+","+char(34)+"setviewmode"+char(34)+","+char(34)+"setviewport"+char(34)+","+char(34)+"setwhatsthis"+char(34)+","+char(34)+"setwindowfilepath"+char(34)+","+char(34)+"setwindowflags"+char(34)+","+char(34)+"setwindowicon"+char(34)+","+char(34)+"setwindowicontext"+char(34)+","+char(34)+"setwindowmodality"+char(34)+","+char(34)+"setwindowmodified"+char(34)+","+char(34)+"setwindowopacity"+char(34)+","+char(34)+"setwindowrole"+char(34)+","+char(34)+"setwindowstate"+char(34)+","+char(34)+"setwindowtitle"+char(34)+","+char(34)+"setwordwrap"+char(34)+","+char(34)+"setwrapping"+char(34)+","+char(34)+"show"+char(34)+","+char(34)+"showdropindicator"+char(34)+","+char(34)+"showfullscreen"+char(34)+","+char(34)+"showmaximized"+char(34)+","+char(34)+"showminimized"+char(34)+","+char(34)+"shownormal"+char(34)+","+char(34)+"signalsblocked"+char(34)+","+char(34)+"size"+char(34)+","+char(34)+"sizehint"+char(34)+","+char(34)+"sizehintforcolumn"+char(34)+","+char(34)+"sizehintforindex"+char(34)+","+char(34)+"sizehintforrow"+char(34)+","+char(34)+"sizeincrement"+char(34)+","+char(34)+"sizepolicy"+char(34)+","+char(34)+"sortitems"+char(34)+","+char(34)+"spacing"+char(34)+","+char(34)+"stackunder"+char(34)+","+char(34)+"starttimer"+char(34)+","+char(34)+"statustip"+char(34)+","+char(34)+"style"+char(34)+","+char(34)+"stylesheet"+char(34)+","+char(34)+"tabkeynavigation"+char(34)+","+char(34)+"takeitem"+char(34)+","+char(34)+"testattribute"+char(34)+","+char(34)+"textelidemode"+char(34)+","+char(34)+"thread"+char(34)+","+char(34)+"tooltip"+char(34)+","+char(34)+"undermouse"+char(34)+","+char(34)+"ungrabgesture"+char(34)+","+char(34)+"uniformitemsizes"+char(34)+","+char(34)+"unsetcursor"+char(34)+","+char(34)+"unsetlayoutdirection"+char(34)+","+char(34)+"unsetlocale"+char(34)+","+char(34)+"update"+char(34)+","+char(34)+"updategeometry"+char(34)+","+char(34)+"updatesenabled"+char(34)+","+char(34)+"verticalscrollbar"+char(34)+","+char(34)+"verticalscrollbarpolicy"+char(34)+","+char(34)+"verticalscrollmode"+char(34)+","+char(34)+"viewmode"+char(34)+","+char(34)+"viewport"+char(34)+","+char(34)+"visibleregion"+char(34)+","+char(34)+"visualitemrect"+char(34)+","+char(34)+"visualrect"+char(34)+","+char(34)+"whatsthis"+char(34)+","+char(34)+"width"+char(34)+","+char(34)+"window"+char(34)+","+char(34)+"windowfilepath"+char(34)+","+char(34)+"windowflags"+char(34)+","+char(34)+"windowhandle"+char(34)+","+char(34)+"windowicon"+char(34)+","+char(34)+"windowicontext"+char(34)+","+char(34)+"windowmodality"+char(34)+","+char(34)+"windowopacity"+char(34)+","+char(34)+"windowrole"+char(34)+","+char(34)+"windowstate"+char(34)+","+char(34)+"windowtitle"+char(34)+","+char(34)+"windowtype"+char(34)+","+char(34)+"winid"+char(34)+","+char(34)+"wordwrap"+char(34)+","+char(34)+"x"+char(34)+","+char(34)+"y"+char(34)+"];;_RV_;;"
	],
	[
		13,
		1,
		"comment_text",
		"01/06/2025",
		"18:49:27",
		"value;;_RV_;;Copy the list to support changing the generated method name in the Steps Tree;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		14,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE2STEPFUNC;;_RV_;;rightside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE2FUNC;;_RV_;;"
	],
	[
		15,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE2LIST;;_RV_;;rightside;;_RV_;;["+char(34)+"acceptDrops(void) --> bool"+char(34)+","+char(34)+"accessibleDescription(void) --> QString"+char(34)+","+char(34)+"accessibleName(void) --> QString"+char(34)+","+char(34)+"activateWindow(void) --> void"+char(34)+","+char(34)+"addAction(QAction *action) --> void"+char(34)+","+char(34)+"addItem(QString) --> void"+char(34)+","+char(34)+"addScrollBarWidget(QWidget *widget, Qt::AlignmentFlag alignment) --> void"+char(34)+","+char(34)+"adjustSize(void) --> void"+char(34)+","+char(34)+"alternatingRowColors(void) --> bool"+char(34)+","+char(34)+"autoFillBackground(void) --> bool"+char(34)+","+char(34)+"autoScrollMargin(void) --> int"+char(34)+","+char(34)+"backgroundRole(void) --> int"+char(34)+","+char(34)+"baseSize(void) --> QSize"+char(34)+","+char(34)+"batchSize(void) --> int"+char(34)+","+char(34)+"blockSignals(bool block) --> bool"+char(34)+","+char(34)+"childAt(int x, int y) --> QWidget"+char(34)+","+char(34)+"children(void) --> QObjectList"+char(34)+","+char(34)+"childrenRect(void) --> QRect"+char(34)+","+char(34)+"childrenRegion(void) --> QRegion"+char(34)+","+char(34)+"clear(void) --> void"+char(34)+","+char(34)+"clearFocus(void) --> void"+char(34)+","+char(34)+"clearMask(void) --> void"+char(34)+","+char(34)+"clearPropertyFlags(void) --> void"+char(34)+","+char(34)+"clearSelection(void) --> void"+char(34)+","+char(34)+"close(void) --> bool"+char(34)+","+char(34)+"closePersistentEditor(QModelIndex) --> void"+char(34)+","+char(34)+"contentsMargins(void) --> QMargins"+char(34)+","+char(34)+"contentsRect(void) --> QRect"+char(34)+","+char(34)+"contextMenuPolicy(void) --> int"+char(34)+","+char(34)+"cornerWidget(void) --> QWidget"+char(34)+","+char(34)+"count(void) --> int"+char(34)+","+char(34)+"createWindowContainer(QWindow *window, QWidget *parent, Qt::WindowFlags flags) --> QWidget"+char(34)+","+char(34)+"currentIndex(void) --> QModelIndex"+char(34)+","+char(34)+"currentRow(void) --> int"+char(34)+","+char(34)+"cursor(void) --> QCursor"+char(34)+","+char(34)+"defaultDropAction(void) --> int"+char(34)+","+char(34)+"delete(void) --> void"+char(34)+","+char(34)+"deleteLater(void) --> void"+char(34)+","+char(34)+"dragDropMode(void) --> int"+char(34)+","+char(34)+"dragDropOverwriteMode(void) --> bool"+char(34)+","+char(34)+"dragEnabled(void) --> bool"+char(34)+","+char(34)+"dumpObjectInfo(void) --> void"+char(34)+","+char(34)+"dumpObjectTree(void) --> void"+char(34)+","+char(34)+"edit(QModelIndex) --> void"+char(34)+","+char(34)+"editItem(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"editTriggers(void) --> int"+char(34)+","+char(34)+"effectiveWinId(void) --> int"+char(34)+","+char(34)+"ensurePolished(void) --> void"+char(34)+","+char(34)+"find(int id) --> QWidget"+char(34)+","+char(34)+"flow(void) --> QListView::Flow"+char(34)+","+char(34)+"focusPolicy(void) --> int"+char(34)+","+char(34)+"focusProxy(void) --> QWidget"+char(34)+","+char(34)+"focusWidget(void) --> QWidget"+char(34)+","+char(34)+"font(void) --> QFont"+char(34)+","+char(34)+"fontInfo(void) --> QFontInfo"+char(34)+","+char(34)+"foregroundRole(void) --> int"+char(34)+","+char(34)+"frameGeometry(void) --> QRect"+char(34)+","+char(34)+"frameRect(void) --> QRect"+char(34)+","+char(34)+"frameShadow(void) --> int"+char(34)+","+char(34)+"frameShape(void) --> int"+char(34)+","+char(34)+"frameSize(void) --> QSize"+char(34)+","+char(34)+"frameStyle(void) --> int"+char(34)+","+char(34)+"frameWidth(void) --> int"+char(34)+","+char(34)+"geometry(void) --> QRect"+char(34)+","+char(34)+"getContentsMargins(int *left, int *top, int *right, int *bottom) --> void"+char(34)+","+char(34)+"getcurrentItemChangedEvent(void) --> char"+char(34)+","+char(34)+"getcurrentRowChangedEvent(void) --> char"+char(34)+","+char(34)+"getcurrentTextChangedEvent(void) --> char"+char(34)+","+char(34)+"getitemActivatedEvent(void) --> char"+char(34)+","+char(34)+"getitemChangedEvent(void) --> char"+char(34)+","+char(34)+"getitemClickedEvent(void) --> char"+char(34)+","+char(34)+"getitemDoubleClickedEvent(void) --> char"+char(34)+","+char(34)+"getitemEnteredEvent(void) --> char"+char(34)+","+char(34)+"getitemPressedEvent(void) --> char"+char(34)+","+char(34)+"getitemSelectionChangedEvent(void) --> char"+char(34)+","+char(34)+"grab(QRect) --> QPixmap"+char(34)+","+char(34)+"grabGesture(Qt::GestureType gesture, Qt::GestureFlag flags) --> void"+char(34)+","+char(34)+"grabKeyboard(void) --> void"+char(34)+","+char(34)+"grabMouse(void) --> void"+char(34)+","+char(34)+"grabShortcut(QKeySequence , Qt::ShortcutContext context) --> int"+char(34)+","+char(34)+"graphicsEffect(void) --> QGraphicsEffect"+char(34)+","+char(34)+"graphicsProxyWidget(void) --> QGraphicsProxyWidget"+char(34)+","+char(34)+"gridSize(void) --> QSize"+char(34)+","+char(34)+"hasAutoScroll(void) --> bool"+char(34)+","+char(34)+"hasFocus(void) --> bool"+char(34)+","+char(34)+"hasMouseTracking(void) --> bool"+char(34)+","+char(34)+"height(void) --> int"+char(34)+","+char(34)+"heightForWidth(int w) --> int"+char(34)+","+char(34)+"hide(void) --> void"+char(34)+","+char(34)+"horizontalScrollBar(void) --> QScrollBar"+char(34)+","+char(34)+"horizontalScrollBarPolicy(void) --> int"+char(34)+","+char(34)+"horizontalScrollMode(void) --> int"+char(34)+","+char(34)+"iconSize(void) --> QSize"+char(34)+","+char(34)+"indexAt(QPoint) --> QModelIndex"+char(34)+","+char(34)+"indexWidget(QModelIndex) --> QWidget"+char(34)+","+char(34)+"inherits(char *className) --> bool"+char(34)+","+char(34)+"init(parent) --> object"+char(34)+","+char(34)+"inputMethodHints(void) --> int"+char(34)+","+char(34)+"inputMethodQuery(Qt::InputMethodQuery query) --> QVariant"+char(34)+","+char(34)+"insertAction(QAction *before, QAction *action) --> void"+char(34)+","+char(34)+"insertItem(int, QString) --> void"+char(34)+","+char(34)+"installEventFilter(QObject *filterObj) --> void"+char(34)+","+char(34)+"isActiveWindow(void) --> bool"+char(34)+","+char(34)+"isAncestorOf(QWidget *child) --> bool"+char(34)+","+char(34)+"isEnabled(void) --> bool"+char(34)+","+char(34)+"isEnabledTo(QWidget *ancestor) --> bool"+char(34)+","+char(34)+"isFullScreen(void) --> bool"+char(34)+","+char(34)+"isHidden(void) --> bool"+char(34)+","+char(34)+"isMaximized(void) --> bool"+char(34)+","+char(34)+"isMinimized(void) --> bool"+char(34)+","+char(34)+"isModal(void) --> bool"+char(34)+","+char(34)+"isRowHidden(int row) --> bool"+char(34)+","+char(34)+"isSelectionRectVisible(void) --> bool"+char(34)+","+char(34)+"isSortingEnabled(void) --> bool"+char(34)+","+char(34)+"isVisible(void) --> bool"+char(34)+","+char(34)+"isVisibleTo(QWidget *ancestor) --> bool"+char(34)+","+char(34)+"isWidgetType(void) --> bool"+char(34)+","+char(34)+"isWindow(void) --> bool"+char(34)+","+char(34)+"isWindowModified(void) --> bool"+char(34)+","+char(34)+"isWrapping(void) --> bool"+char(34)+","+char(34)+"item(int row) --> QListWidgetItem"+char(34)+","+char(34)+"itemAt(int x, int y) --> QListWidgetItem"+char(34)+","+char(34)+"itemDelegate(QModelIndex) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemDelegateForColumn(int column) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemDelegateForRow(int row) --> QAbstractItemDelegate"+char(34)+","+char(34)+"itemWidget(QListWidgetItem *item) --> QWidget"+char(34)+","+char(34)+"keyboardGrabber(void) --> QWidget"+char(34)+","+char(34)+"keyboardSearch(QString) --> void"+char(34)+","+char(34)+"killTimer(int id) --> void"+char(34)+","+char(34)+"layout(void) --> QLayout"+char(34)+","+char(34)+"layoutDirection(void) --> int"+char(34)+","+char(34)+"layoutMode(void) --> QListView::LayoutMode"+char(34)+","+char(34)+"lineWidth(void) --> int"+char(34)+","+char(34)+"locale(void) --> QLocale"+char(34)+","+char(34)+"lower(void) --> void"+char(34)+","+char(34)+"mapFrom(QWidget *parent, QPoint) --> QPoint"+char(34)+","+char(34)+"mapFromGlobal(QPoint) --> QPoint"+char(34)+","+char(34)+"mapFromParent(QPoint) --> QPoint"+char(34)+","+char(34)+"mapTo(QWidget *parent, QPoint) --> QPoint"+char(34)+","+char(34)+"mapToGlobal(QPoint pos) --> QPoint"+char(34)+","+char(34)+"mapToParent(QPoint pos) --> QPoint"+char(34)+","+char(34)+"mask(void) --> QRegion"+char(34)+","+char(34)+"maximumHeight(void) --> int"+char(34)+","+char(34)+"maximumSize(void) --> QSize"+char(34)+","+char(34)+"maximumViewportSize(void) --> QSize"+char(34)+","+char(34)+"maximumWidth(void) --> int"+char(34)+","+char(34)+"midLineWidth(void) --> int"+char(34)+","+char(34)+"minimumHeight(void) --> int"+char(34)+","+char(34)+"minimumSize(void) --> QSize"+char(34)+","+char(34)+"minimumWidth(void) --> int"+char(34)+","+char(34)+"model(void) --> QAbstractItemModel"+char(34)+","+char(34)+"modelColumn(void) --> int"+char(34)+","+char(34)+"mouseGrabber(void) --> QWidget"+char(34)+","+char(34)+"move(int x, int y) --> void"+char(34)+","+char(34)+"movement(void) --> QListView::Movement"+char(34)+","+char(34)+"moveToThread(QThread *targetThread) --> void"+char(34)+","+char(34)+"nativeParentWidget(void) --> QWidget"+char(34)+","+char(34)+"nextInFocusChain(void) --> QWidget"+char(34)+","+char(34)+"normalGeometry(void) --> QRect"+char(34)+","+char(34)+"objectName(void) --> QString"+char(34)+","+char(34)+"objectpointer(void) --> pointer"+char(34)+","+char(34)+"openPersistentEditor(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"overrideWindowFlags(Qt::WindowType flags) --> void"+char(34)+","+char(34)+"palette(void) --> QPalette"+char(34)+","+char(34)+"parent(void) --> QObject"+char(34)+","+char(34)+"parentWidget(void) --> QWidget"+char(34)+","+char(34)+"pos(void) --> QPoint"+char(34)+","+char(34)+"previousInFocusChain(void) --> QWidget"+char(34)+","+char(34)+"property(char *name) --> QVariant"+char(34)+","+char(34)+"raise(void) --> void"+char(34)+","+char(34)+"rect(void) --> QRect"+char(34)+","+char(34)+"releaseKeyboard(void) --> void"+char(34)+","+char(34)+"releaseMouse(void) --> void"+char(34)+","+char(34)+"releaseShortcut(int id) --> void"+char(34)+","+char(34)+"removeAction(QAction *action) --> void"+char(34)+","+char(34)+"removeEventFilter(QObject *obj) --> void"+char(34)+","+char(34)+"removeItemWidget(QListWidgetItem *item) --> void"+char(34)+","+char(34)+"render(QPaintDevice *target, QPoint,QRegion, QWidget::RenderFlag) --> void"+char(34)+","+char(34)+"repaint(void) --> void"+char(34)+","+char(34)+"resize(int w, int h) --> void"+char(34)+","+char(34)+"resizeMode(void) --> QListView::ResizeMode"+char(34)+","+char(34)+"restoreGeometry(QByteArray) --> bool"+char(34)+","+char(34)+"rootIndex(void) --> QModelIndex"+char(34)+","+char(34)+"row(QListWidgetItem *item) --> int"+char(34)+","+char(34)+"saveGeometry(void) --> QByteArray"+char(34)+","+char(34)+"scroll(int dx, int dy) --> void"+char(34)+","+char(34)+"scrollBarWidgets(Qt::AlignmentFlag) --> QWidgetList"+char(34)+","+char(34)+"scrollTo(QModelIndex,QAbstractItemView::ScrollHint) --> void"+char(34)+","+char(34)+"scrollToBottom(void) --> void"+char(34)+","+char(34)+"scrollToItem(QListWidgetItem *item,QAbstractItemView::ScrollHint hint) --> void"+char(34)+","+char(34)+"scrollToTop(void) --> void"+char(34)+","+char(34)+"selectionBehavior(void) --> int"+char(34)+","+char(34)+"selectionMode(void) --> int"+char(34)+","+char(34)+"selectionModel(void) --> QItemSelectionModel"+char(34)+","+char(34)+"setAcceptDrops(bool on) --> void"+char(34)+","+char(34)+"setAccessibleDescription(QString) --> void"+char(34)+","+char(34)+"setAccessibleName(QString) --> void"+char(34)+","+char(34)+"setAlternatingRowColors(bool enable) --> void"+char(34)+","+char(34)+"setAttribute(Qt::WidgetAttribute attribute, bool on) --> void"+char(34)+","+char(34)+"setAutoFillBackground(bool enabled) --> void"+char(34)+","+char(34)+"setAutoScroll(bool enable) --> void"+char(34)+","+char(34)+"setAutoScrollMargin(int margin) --> void"+char(34)+","+char(34)+"setBackgroundRole(QPalette::ColorRole role) --> void"+char(34)+","+char(34)+"setBaseSize(int basew, int baseh) --> void"+char(34)+","+char(34)+"setBatchSize(int batchSize) --> void"+char(34)+","+char(34)+"setContentsMargins(int left, int top, int right, int bottom) --> void"+char(34)+","+char(34)+"setContextMenuPolicy(Qt::ContextMenuPolicy policy) --> void"+char(34)+","+char(34)+"setCornerWidget(QWidget *widget) --> void"+char(34)+","+char(34)+"setCurrentIndex(QModelIndex) --> void"+char(34)+","+char(34)+"setCurrentItem(QListWidgetItem *item, QItemSelectionModel::SelectionFlag command) --> void"+char(34)+","+char(34)+"setcurrentItemChangedEvent(char *) --> void"+char(34)+","+char(34)+"setCurrentRow(int row, QItemSelectionModel::SelectionFlag command) --> void"+char(34)+","+char(34)+"setcurrentRowChangedEvent(char *) --> void"+char(34)+","+char(34)+"setcurrentTextChangedEvent(char *) --> void"+char(34)+","+char(34)+"setCursor(QCursor) --> void"+char(34)+","+char(34)+"setDefaultDropAction(Qt::DropAction dropAction) --> void"+char(34)+","+char(34)+"setDisabled(bool disable) --> void"+char(34)+","+char(34)+"setDragDropMode(QAbstractItemView::DragDropMode behavior) --> void"+char(34)+","+char(34)+"setDragDropOverwriteMode(bool overwrite) --> void"+char(34)+","+char(34)+"setDragEnabled(bool enable) --> void"+char(34)+","+char(34)+"setDropIndicatorShown(bool enable) --> void"+char(34)+","+char(34)+"setEditTriggers(QAbstractItemView::EditTrigger triggers) --> void"+char(34)+","+char(34)+"setEnabled(bool) --> void"+char(34)+","+char(34)+"setFixedHeight(int h) --> void"+char(34)+","+char(34)+"setFixedSize(int w, int h) --> void"+char(34)+","+char(34)+"setFixedWidth(int w) --> void"+char(34)+","+char(34)+"setFlow(QListView::Flow flow) --> void"+char(34)+","+char(34)+"setFocus(Qt::FocusReason reason) --> void"+char(34)+","+char(34)+"setFocusPolicy(Qt::FocusPolicy policy) --> void"+char(34)+","+char(34)+"setFocusProxy(QWidget *w) --> void"+char(34)+","+char(34)+"setFont(QFont) --> void"+char(34)+","+char(34)+"setForegroundRole(QPalette::ColorRole role) --> void"+char(34)+","+char(34)+"setFrameRect(QRect) --> void"+char(34)+","+char(34)+"setFrameShadow(QFrame::Shadow) --> void"+char(34)+","+char(34)+"setFrameShape(QFrame::Shape) --> void"+char(34)+","+char(34)+"setFrameStyle(int style) --> void"+char(34)+","+char(34)+"setGeometry(int x, int y, int w, int h) --> void"+char(34)+","+char(34)+"setGraphicsEffect(QGraphicsEffect *effect) --> void"+char(34)+","+char(34)+"setGridSize( QSize  size) --> void"+char(34)+","+char(34)+"setHidden(bool hidden) --> void"+char(34)+","+char(34)+"setHorizontalScrollBar(QScrollBar *scrollBar) --> void"+char(34)+","+char(34)+"setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy) --> void"+char(34)+","+char(34)+"setHorizontalScrollMode(QAbstractItemView::ScrollMode mode) --> void"+char(34)+","+char(34)+"setIconSize(QSize) --> void"+char(34)+","+char(34)+"setIndexWidget(QModelIndex, QWidget *widget) --> void"+char(34)+","+char(34)+"setInputMethodHints(Qt::InputMethodHint hints) --> void"+char(34)+","+char(34)+"setitemActivatedEvent(char *) --> void"+char(34)+","+char(34)+"setitemChangedEvent(char *) --> void"+char(34)+","+char(34)+"setitemClickedEvent(char *) --> void"+char(34)+","+char(34)+"setItemDelegate(QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setItemDelegateForColumn(int column, QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setItemDelegateForRow(int row, QAbstractItemDelegate *delegate) --> void"+char(34)+","+char(34)+"setitemDoubleClickedEvent(char *) --> void"+char(34)+","+char(34)+"setitemEnteredEvent(char *) --> void"+char(34)+","+char(34)+"setitemPressedEvent(char *) --> void"+char(34)+","+char(34)+"setitemSelectionChangedEvent(char *) --> void"+char(34)+","+char(34)+"setItemWidget(QListWidgetItem *item, QWidget *widget) --> void"+char(34)+","+char(34)+"setLayout(QLayout *layout) --> void"+char(34)+","+char(34)+"setLayoutDirection(Qt::LayoutDirection direction) --> void"+char(34)+","+char(34)+"setLayoutMode(QListView::LayoutMode mode) --> void"+char(34)+","+char(34)+"setLineWidth(int) --> void"+char(34)+","+char(34)+"setLocale(QLocale) --> void"+char(34)+","+char(34)+"setMask(QBitmap) --> void"+char(34)+","+char(34)+"setMaximumHeight(int maxh) --> void"+char(34)+","+char(34)+"setMaximumSize(int maxw, int maxh) --> void"+char(34)+","+char(34)+"setMaximumWidth(int maxw) --> void"+char(34)+","+char(34)+"setMidLineWidth(int) --> void"+char(34)+","+char(34)+"setMinimumHeight(int minh) --> void"+char(34)+","+char(34)+"setMinimumSize(int minw, int minh) --> void"+char(34)+","+char(34)+"setMinimumWidth(int minw) --> void"+char(34)+","+char(34)+"setModel(QAbstractItemModel *model) --> void"+char(34)+","+char(34)+"setModelColumn(int column) --> void"+char(34)+","+char(34)+"setMouseTracking(bool enable) --> void"+char(34)+","+char(34)+"setMovement(QListView::Movement movement) --> void"+char(34)+","+char(34)+"setObjectName(QString) --> void"+char(34)+","+char(34)+"setPalette(QPalette) --> void"+char(34)+","+char(34)+"setParent(QWidget *parent) --> void"+char(34)+","+char(34)+"setProperty(char *name, QVariant) --> bool"+char(34)+","+char(34)+"setProperty_2(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_3(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_4(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_5(char *name, QString) --> bool"+char(34)+","+char(34)+"setProperty_double(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_float(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_int(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_string(char *name, QString) --> bool"+char(34)+","+char(34)+"setResizeMode(QListView::ResizeMode mode) --> void"+char(34)+","+char(34)+"setRowHidden(int row, bool hide) --> void"+char(34)+","+char(34)+"setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior) --> void"+char(34)+","+char(34)+"setSelectionMode(QAbstractItemView::SelectionMode mode) --> void"+char(34)+","+char(34)+"setSelectionModel(QItemSelectionModel *selectionModel) --> void"+char(34)+","+char(34)+"setSelectionRectVisible(bool show) --> void"+char(34)+","+char(34)+"setShortcutAutoRepeat(int id, bool enable) --> void"+char(34)+","+char(34)+"setShortcutEnabled(int id, bool enable) --> void"+char(34)+","+char(34)+"setSizeIncrement(int w, int h) --> void"+char(34)+","+char(34)+"setSizePolicy(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical) --> void"+char(34)+","+char(34)+"setSortingEnabled(bool enable) --> void"+char(34)+","+char(34)+"setSpacing(int space) --> void"+char(34)+","+char(34)+"setStatusTip(QString) --> void"+char(34)+","+char(34)+"setStyle(QStyle *style) --> void"+char(34)+","+char(34)+"setStyleSheet(QString) --> void"+char(34)+","+char(34)+"setTabKeyNavigation(bool enable) --> void"+char(34)+","+char(34)+"setTabOrder(QWidget *first, QWidget *second) --> void"+char(34)+","+char(34)+"setTextElideMode(Qt::TextElideMode mode) --> void"+char(34)+","+char(34)+"setToolTip(QString) --> void"+char(34)+","+char(34)+"setUniformItemSizes(bool enable) --> void"+char(34)+","+char(34)+"setUpdatesEnabled(bool enable) --> void"+char(34)+","+char(34)+"setVerticalScrollBar(QScrollBar *scrollBar) --> void"+char(34)+","+char(34)+"setVerticalScrollBarPolicy(Qt::ScrollBarPolicy) --> void"+char(34)+","+char(34)+"setVerticalScrollMode(QAbstractItemView::ScrollMode mode) --> void"+char(34)+","+char(34)+"setViewMode(QListView::ViewMode mode) --> void"+char(34)+","+char(34)+"setViewport(QWidget *widget) --> void"+char(34)+","+char(34)+"setWhatsThis(QString) --> void"+char(34)+","+char(34)+"setWindowFilePath(QString) --> void"+char(34)+","+char(34)+"setWindowFlags(Qt::WindowType type) --> void"+char(34)+","+char(34)+"setWindowIcon(QIcon) --> void"+char(34)+","+char(34)+"setWindowIconText(QString) --> void"+char(34)+","+char(34)+"setWindowModality(Qt::WindowModality windowModality) --> void"+char(34)+","+char(34)+"setWindowModified(bool) --> void"+char(34)+","+char(34)+"setWindowOpacity(double level) --> void"+char(34)+","+char(34)+"setWindowRole(QString) --> void"+char(34)+","+char(34)+"setWindowState(Qt::WindowState windowState) --> void"+char(34)+","+char(34)+"setWindowTitle(QString) --> void"+char(34)+","+char(34)+"setWordWrap(bool on) --> void"+char(34)+","+char(34)+"setWrapping(bool enable) --> void"+char(34)+","+char(34)+"show(void) --> void"+char(34)+","+char(34)+"showDropIndicator(void) --> bool"+char(34)+","+char(34)+"showFullScreen(void) --> void"+char(34)+","+char(34)+"showMaximized(void) --> void"+char(34)+","+char(34)+"showMinimized(void) --> void"+char(34)+","+char(34)+"showNormal(void) --> void"+char(34)+","+char(34)+"signalsBlocked(void) --> bool"+char(34)+","+char(34)+"size(void) --> QSize"+char(34)+","+char(34)+"sizeHint(void) --> QSize"+char(34)+","+char(34)+"sizeHintForColumn(int column) --> int"+char(34)+","+char(34)+"sizeHintForIndex(QModelIndex) --> QSize"+char(34)+","+char(34)+"sizeHintForRow(int row) --> int"+char(34)+","+char(34)+"sizeIncrement(void) --> QSize"+char(34)+","+char(34)+"sizePolicy(void) --> QSizePolicy"+char(34)+","+char(34)+"sortItems(Qt::SortOrder order) --> void"+char(34)+","+char(34)+"spacing(void) --> int"+char(34)+","+char(34)+"stackUnder(QWidget *w) --> void"+char(34)+","+char(34)+"startTimer(int interval) --> int"+char(34)+","+char(34)+"statusTip(void) --> QString"+char(34)+","+char(34)+"style(void) --> QStyle"+char(34)+","+char(34)+"styleSheet(void) --> QString"+char(34)+","+char(34)+"tabKeyNavigation(void) --> bool"+char(34)+","+char(34)+"takeItem(int row) --> QListWidgetItem"+char(34)+","+char(34)+"testAttribute(Qt::WidgetAttribute attribute) --> bool"+char(34)+","+char(34)+"textElideMode(void) --> int"+char(34)+","+char(34)+"thread(void) --> QThread"+char(34)+","+char(34)+"toolTip(void) --> QString"+char(34)+","+char(34)+"underMouse(void) --> bool"+char(34)+","+char(34)+"ungrabGesture(Qt::GestureType gesture) --> void"+char(34)+","+char(34)+"uniformItemSizes(void) --> bool"+char(34)+","+char(34)+"unsetCursor(void) --> void"+char(34)+","+char(34)+"unsetLayoutDirection(void) --> void"+char(34)+","+char(34)+"unsetLocale(void) --> void"+char(34)+","+char(34)+"update(QModelIndex) --> void"+char(34)+","+char(34)+"updateGeometry(void) --> void"+char(34)+","+char(34)+"updatesEnabled(void) --> bool"+char(34)+","+char(34)+"verticalScrollBar(void) --> QScrollBar"+char(34)+","+char(34)+"verticalScrollBarPolicy(void) --> int"+char(34)+","+char(34)+"verticalScrollMode(void) --> int"+char(34)+","+char(34)+"viewMode(void) --> QListView::ViewMode"+char(34)+","+char(34)+"viewport(void) --> QWidget"+char(34)+","+char(34)+"visibleRegion(void) --> QRegion"+char(34)+","+char(34)+"visualItemRect(QListWidgetItem *item) --> QRect"+char(34)+","+char(34)+"visualRect(QModelIndex) --> QRect"+char(34)+","+char(34)+"whatsThis(void) --> QString"+char(34)+","+char(34)+"width(void) --> int"+char(34)+","+char(34)+"window(void) --> QWidget"+char(34)+","+char(34)+"windowFilePath(void) --> QString"+char(34)+","+char(34)+"windowFlags(void) --> int"+char(34)+","+char(34)+"windowHandle(void) --> QWindow"+char(34)+","+char(34)+"windowIcon(void) --> QIcon"+char(34)+","+char(34)+"windowIconText(void) --> QString"+char(34)+","+char(34)+"windowModality(void) --> int"+char(34)+","+char(34)+"windowOpacity(void) --> double"+char(34)+","+char(34)+"windowRole(void) --> QString"+char(34)+","+char(34)+"windowState(void) --> int"+char(34)+","+char(34)+"windowTitle(void) --> QString"+char(34)+","+char(34)+"windowType(void) --> int"+char(34)+","+char(34)+"winId(void) --> int"+char(34)+","+char(34)+"wordWrap(void) --> bool"+char(34)+","+char(34)+"x(void) --> int"+char(34)+","+char(34)+"y(void) --> int"+char(34)+"];;_RV_;;"
	],
	[
		16,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE3;;_RV_;;rightside;;_RV_;;"+char(34)+"Parameters"+char(34)+";;_RV_;;"
	],
	[
		17,
		1,
		"assignment",
		"01/06/2025",
		"18:49:27",
		"leftside;;_RV_;;T_CT_QLISTWIDGETCLASS_IP_VALUE4;;_RV_;;rightside;;_RV_;;"+char(34)+"Output"+char(34)+";;_RV_;;"
	]
]

# End of Visual Source File