# Visual Source File 

cVisualSourceFileVersion = '1.0.0'
cVisualLanguageName      = 'RingPWCT'
cNaturalLanguageName     = 'english'
nStepsID                 = 16		
nInteractionsID          = 16

aStepsTable = [
	[
		1,
		0,
		[
			[
				"name",
				"Start Point"
			],
			[
				"active",
				1
			],
			[
				"code",
				""
			],
			[
				"interactionid",
				1
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			]
		]
	],
	[
		2,
		1,
		[
			[
				"name",
				"/*"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#/*
"
			],
			[
				"interactionid",
				2
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"/*"
			]
		]
	],
	[
		3,
		1,
		[
			[
				"name",
				"**	Project : Programming Without Coding Technology (PWCT) Version 2.0"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	Project : Programming Without Coding Technology (PWCT) Version 2.0
"
			],
			[
				"interactionid",
				3
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	Project : Programming Without Coding Technology (PWCT) Version 2.0"
			]
		]
	],
	[
		4,
		1,
		[
			[
				"name",
				"**	File Purpose :  qappclass Component"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	File Purpose :  qappclass Component
"
			],
			[
				"interactionid",
				4
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	File Purpose :  qappclass Component"
			]
		]
	],
	[
		5,
		1,
		[
			[
				"name",
				"**	Date : 2017.12.14"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	Date : 2017.12.14
"
			],
			[
				"interactionid",
				5
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	Date : 2017.12.14"
			]
		]
	],
	[
		6,
		1,
		[
			[
				"name",
				"**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>
"
			],
			[
				"interactionid",
				6
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"**	Author :  Mahmoud Fayed "
			]
		]
	],
	[
		7,
		1,
		[
			[
				"name",
				"*/"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#*/
"
			],
			[
				"interactionid",
				7
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"*/"
			]
		]
	],
	[
		8,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_TITLE</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Application&nbsp;Class&nbsp;Component&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_TITLE = "+char(34)+"Application Class Component"+char(34)+""
			],
			[
				"interactionid",
				8
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_TITLE = "+char(34)+"Application Class Component"+char(34)+""
			]
		]
	],
	[
		9,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Object&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE = "+char(34)+"Object"+char(34)+""
			],
			[
				"interactionid",
				9
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE = "+char(34)+"Object"+char(34)+""
			]
		]
	],
	[
		10,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE2</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Method&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE2 = "+char(34)+"Method"+char(34)+""
			],
			[
				"interactionid",
				10
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE2 = "+char(34)+"Method"+char(34)+""
			]
		]
	],
	[
		11,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE2FUNC</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">[&quot;addlibrarypath&quot;,&quot;allwindows&quot;,&quot;applicationdirpath&quot;,&quot;applicationdisplayname&quot;,&quot;applicationfilepath&quot;,&quot;applicationname&quot;,&quot;applicationpid&quot;,&quot;applicationstate&quot;,&quot;applicationversion&quot;,&quot;arguments&quot;,&quot;blocksignals&quot;,&quot;changeoverridecursor&quot;,&quot;children&quot;,&quot;clipboard&quot;,&quot;closeallwindows&quot;,&quot;closingdown&quot;,&quot;delete&quot;,&quot;deletelater&quot;,&quot;desktopsettingsaware&quot;,&quot;devicepixelratio&quot;,&quot;dumpobjectinfo&quot;,&quot;dumpobjecttree&quot;,&quot;eventdispatcher&quot;,&quot;exec&quot;,&quot;exitfromapplication&quot;,&quot;focusobject&quot;,&quot;focuswindow&quot;,&quot;font&quot;,&quot;getapplicationdisplaynamechangedevent&quot;,&quot;getapplicationstatechangedevent&quot;,&quot;getcommitdatarequestevent&quot;,&quot;getfocusobjectchangedevent&quot;,&quot;getfocuswindowchangedevent&quot;,&quot;getfontdatabasechangedevent&quot;,&quot;getlastwindowclosedevent&quot;,&quot;getlayoutdirectionchangedevent&quot;,&quot;getpalettechangedevent&quot;,&quot;getprimaryscreenchangedevent&quot;,&quot;getsavestaterequestevent&quot;,&quot;getscreenaddedevent&quot;,&quot;getscreenremovedevent&quot;,&quot;inherits&quot;,&quot;init&quot;,&quot;inputmethod&quot;,&quot;installeventfilter&quot;,&quot;installnativeeventfilter&quot;,&quot;installtranslator&quot;,&quot;instance&quot;,&quot;islefttoright&quot;,&quot;isquitlockenabled&quot;,&quot;isrighttoleft&quot;,&quot;issavingsession&quot;,&quot;issessionrestored&quot;,&quot;iswidgettype&quot;,&quot;keyboardmodifiers&quot;,&quot;killtimer&quot;,&quot;layoutdirection&quot;,&quot;librarypaths&quot;,&quot;modalwindow&quot;,&quot;mousebuttons&quot;,&quot;movetothread&quot;,&quot;objectname&quot;,&quot;objectpointer&quot;,&quot;organizationdomain&quot;,&quot;organizationname&quot;,&quot;overridecursor&quot;,&quot;palette&quot;,&quot;parent&quot;,&quot;platformname&quot;,&quot;platformnativeinterface&quot;,&quot;postevent&quot;,&quot;primaryscreen&quot;,&quot;processevents&quot;,&quot;processevents_2&quot;,&quot;property&quot;,&quot;querykeyboardmodifiers&quot;,&quot;quit&quot;,&quot;quitonlastwindowclosed&quot;,&quot;removeeventfilter&quot;,&quot;removelibrarypath&quot;,&quot;removenativeeventfilter&quot;,&quot;removepostedevents&quot;,&quot;removetranslator&quot;,&quot;restoreoverridecursor&quot;,&quot;screens&quot;,&quot;sendevent&quot;,&quot;sendpostedevents&quot;,&quot;sessionid&quot;,&quot;sessionkey&quot;,&quot;setapplicationdisplayname&quot;,&quot;setapplicationdisplaynamechangedevent&quot;,&quot;setapplicationname&quot;,&quot;setapplicationstatechangedevent&quot;,&quot;setapplicationversion&quot;,&quot;setattribute&quot;,&quot;setcommitdatarequestevent&quot;,&quot;setdesktopsettingsaware&quot;,&quot;seteventdispatcher&quot;,&quot;setfocusobjectchangedevent&quot;,&quot;setfocuswindowchangedevent&quot;,&quot;setfont&quot;,&quot;setfontdatabasechangedevent&quot;,&quot;setlastwindowclosedevent&quot;,&quot;setlayoutdirection&quot;,&quot;setlayoutdirectionchangedevent&quot;,&quot;setlibrarypaths&quot;,&quot;setobjectname&quot;,&quot;setorganizationdomain&quot;,&quot;setorganizationname&quot;,&quot;setoverridecursor&quot;,&quot;setpalette&quot;,&quot;setpalettechangedevent&quot;,&quot;setparent&quot;,&quot;setprimaryscreenchangedevent&quot;,&quot;setproperty&quot;,&quot;setproperty_2&quot;,&quot;setproperty_3&quot;,&quot;setproperty_4&quot;,&quot;setproperty_5&quot;,&quot;setproperty_double&quot;,&quot;setproperty_float&quot;,&quot;setproperty_int&quot;,&quot;setproperty_string&quot;,&quot;setquitlockenabled&quot;,&quot;setquitonlastwindowclosed&quot;,&quot;setsavestaterequestevent&quot;,&quot;setscreenaddedevent&quot;,&quot;setscreenremovedevent&quot;,&quot;signalsblocked&quot;,&quot;startingup&quot;,&quot;starttimer&quot;,&quot;stylefusion&quot;,&quot;stylefusionblack&quot;,&quot;stylefusioncustom&quot;,&quot;stylehints&quot;,&quot;stylewindows&quot;,&quot;stylewindowsvista&quot;,&quot;sync&quot;,&quot;testattribute&quot;,&quot;thread&quot;,&quot;toplevelat&quot;,&quot;toplevelwindows&quot;,&quot;translate&quot;]</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE2FUNC = ["+char(34)+"addlibrarypath"+char(34)+","+char(34)+"allwindows"+char(34)+","+char(34)+"applicationdirpath"+char(34)+","+char(34)+"applicationdisplayname"+char(34)+","+char(34)+"applicationfilepath"+char(34)+","+char(34)+"applicationname"+char(34)+","+char(34)+"applicationpid"+char(34)+","+char(34)+"applicationstate"+char(34)+","+char(34)+"applicationversion"+char(34)+","+char(34)+"arguments"+char(34)+","+char(34)+"blocksignals"+char(34)+","+char(34)+"changeoverridecursor"+char(34)+","+char(34)+"children"+char(34)+","+char(34)+"clipboard"+char(34)+","+char(34)+"closeallwindows"+char(34)+","+char(34)+"closingdown"+char(34)+","+char(34)+"delete"+char(34)+","+char(34)+"deletelater"+char(34)+","+char(34)+"desktopsettingsaware"+char(34)+","+char(34)+"devicepixelratio"+char(34)+","+char(34)+"dumpobjectinfo"+char(34)+","+char(34)+"dumpobjecttree"+char(34)+","+char(34)+"eventdispatcher"+char(34)+","+char(34)+"exec"+char(34)+","+char(34)+"exitfromapplication"+char(34)+","+char(34)+"focusobject"+char(34)+","+char(34)+"focuswindow"+char(34)+","+char(34)+"font"+char(34)+","+char(34)+"getapplicationdisplaynamechangedevent"+char(34)+","+char(34)+"getapplicationstatechangedevent"+char(34)+","+char(34)+"getcommitdatarequestevent"+char(34)+","+char(34)+"getfocusobjectchangedevent"+char(34)+","+char(34)+"getfocuswindowchangedevent"+char(34)+","+char(34)+"getfontdatabasechangedevent"+char(34)+","+char(34)+"getlastwindowclosedevent"+char(34)+","+char(34)+"getlayoutdirectionchangedevent"+char(34)+","+char(34)+"getpalettechangedevent"+char(34)+","+char(34)+"getprimaryscreenchangedevent"+char(34)+","+char(34)+"getsavestaterequestevent"+char(34)+","+char(34)+"getscreenaddedevent"+char(34)+","+char(34)+"getscreenremovedevent"+char(34)+","+char(34)+"inherits"+char(34)+","+char(34)+"init"+char(34)+","+char(34)+"inputmethod"+char(34)+","+char(34)+"installeventfilter"+char(34)+","+char(34)+"installnativeeventfilter"+char(34)+","+char(34)+"installtranslator"+char(34)+","+char(34)+"instance"+char(34)+","+char(34)+"islefttoright"+char(34)+","+char(34)+"isquitlockenabled"+char(34)+","+char(34)+"isrighttoleft"+char(34)+","+char(34)+"issavingsession"+char(34)+","+char(34)+"issessionrestored"+char(34)+","+char(34)+"iswidgettype"+char(34)+","+char(34)+"keyboardmodifiers"+char(34)+","+char(34)+"killtimer"+char(34)+","+char(34)+"layoutdirection"+char(34)+","+char(34)+"librarypaths"+char(34)+","+char(34)+"modalwindow"+char(34)+","+char(34)+"mousebuttons"+char(34)+","+char(34)+"movetothread"+char(34)+","+char(34)+"objectname"+char(34)+","+char(34)+"objectpointer"+char(34)+","+char(34)+"organizationdomain"+char(34)+","+char(34)+"organizationname"+char(34)+","+char(34)+"overridecursor"+char(34)+","+char(34)+"palette"+char(34)+","+char(34)+"parent"+char(34)+","+char(34)+"platformname"+char(34)+","+char(34)+"platformnativeinterface"+char(34)+","+char(34)+"postevent"+char(34)+","+char(34)+"primaryscreen"+char(34)+","+char(34)+"processevents"+char(34)+","+char(34)+"processevents_2"+char(34)+","+char(34)+"property"+char(34)+","+char(34)+"querykeyboardmodifiers"+char(34)+","+char(34)+"quit"+char(34)+","+char(34)+"quitonlastwindowclosed"+char(34)+","+char(34)+"removeeventfilter"+char(34)+","+char(34)+"removelibrarypath"+char(34)+","+char(34)+"removenativeeventfilter"+char(34)+","+char(34)+"removepostedevents"+char(34)+","+char(34)+"removetranslator"+char(34)+","+char(34)+"restoreoverridecursor"+char(34)+","+char(34)+"screens"+char(34)+","+char(34)+"sendevent"+char(34)+","+char(34)+"sendpostedevents"+char(34)+","+char(34)+"sessionid"+char(34)+","+char(34)+"sessionkey"+char(34)+","+char(34)+"setapplicationdisplayname"+char(34)+","+char(34)+"setapplicationdisplaynamechangedevent"+char(34)+","+char(34)+"setapplicationname"+char(34)+","+char(34)+"setapplicationstatechangedevent"+char(34)+","+char(34)+"setapplicationversion"+char(34)+","+char(34)+"setattribute"+char(34)+","+char(34)+"setcommitdatarequestevent"+char(34)+","+char(34)+"setdesktopsettingsaware"+char(34)+","+char(34)+"seteventdispatcher"+char(34)+","+char(34)+"setfocusobjectchangedevent"+char(34)+","+char(34)+"setfocuswindowchangedevent"+char(34)+","+char(34)+"setfont"+char(34)+","+char(34)+"setfontdatabasechangedevent"+char(34)+","+char(34)+"setlastwindowclosedevent"+char(34)+","+char(34)+"setlayoutdirection"+char(34)+","+char(34)+"setlayoutdirectionchangedevent"+char(34)+","+char(34)+"setlibrarypaths"+char(34)+","+char(34)+"setobjectname"+char(34)+","+char(34)+"setorganizationdomain"+char(34)+","+char(34)+"setorganizationname"+char(34)+","+char(34)+"setoverridecursor"+char(34)+","+char(34)+"setpalette"+char(34)+","+char(34)+"setpalettechangedevent"+char(34)+","+char(34)+"setparent"+char(34)+","+char(34)+"setprimaryscreenchangedevent"+char(34)+","+char(34)+"setproperty"+char(34)+","+char(34)+"setproperty_2"+char(34)+","+char(34)+"setproperty_3"+char(34)+","+char(34)+"setproperty_4"+char(34)+","+char(34)+"setproperty_5"+char(34)+","+char(34)+"setproperty_double"+char(34)+","+char(34)+"setproperty_float"+char(34)+","+char(34)+"setproperty_int"+char(34)+","+char(34)+"setproperty_string"+char(34)+","+char(34)+"setquitlockenabled"+char(34)+","+char(34)+"setquitonlastwindowclosed"+char(34)+","+char(34)+"setsavestaterequestevent"+char(34)+","+char(34)+"setscreenaddedevent"+char(34)+","+char(34)+"setscreenremovedevent"+char(34)+","+char(34)+"signalsblocked"+char(34)+","+char(34)+"startingup"+char(34)+","+char(34)+"starttimer"+char(34)+","+char(34)+"stylefusion"+char(34)+","+char(34)+"stylefusionblack"+char(34)+","+char(34)+"stylefusioncustom"+char(34)+","+char(34)+"stylehints"+char(34)+","+char(34)+"stylewindows"+char(34)+","+char(34)+"stylewindowsvista"+char(34)+","+char(34)+"sync"+char(34)+","+char(34)+"testattribute"+char(34)+","+char(34)+"thread"+char(34)+","+char(34)+"toplevelat"+char(34)+","+char(34)+"toplevelwindows"+char(34)+","+char(34)+"translate"+char(34)+"]"
			],
			[
				"interactionid",
				11
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE2FUNC = ["+char(34)+"addlibrarypath"+char(34)+","+char(34)+"allwindows"+char(34)+","+char(34)+"applicationdirpath"+char(34)+","+char(34)+"applicationdisplayname"+char(34)+","+char(34)+"applicationfilepath"+char(34)+","+char(34)+"applicationname"+char(34)+","+char(34)+"applicationpid"+char(34)+","+char(34)+"applicationstate"+char(34)+","+char(34)+"applicationversion"+char(34)+","+char(34)+"arguments"+char(34)+","+char(34)+"blocksignals"+char(34)+","+char(34)+"changeoverridecursor"+char(34)+","+char(34)+"children"+char(34)+","+char(34)+"clipboard"+char(34)+","+char(34)+"closeallwindows"+char(34)+","+char(34)+"closingdown"+char(34)+","+char(34)+"delete"+char(34)+","+char(34)+"deletelater"+char(34)+","+char(34)+"desktopsettingsaware"+char(34)+","+char(34)+"devicepixelratio"+char(34)+","+char(34)+"dumpobjectinfo"+char(34)+","+char(34)+"dumpobjecttree"+char(34)+","+char(34)+"eventdispatcher"+char(34)+","+char(34)+"exec"+char(34)+","+char(34)+"exitfromapplication"+char(34)+","+char(34)+"focusobject"+char(34)+","+char(34)+"focuswindow"+char(34)+","+char(34)+"font"+char(34)+","+char(34)+"getapplicationdisplaynamechangedevent"+char(34)+","+char(34)+"getapplicationstatechangedevent"+char(34)+","+char(34)+"getcommitdatarequestevent"+char(34)+","+char(34)+"getfocusobjectchangedevent"+char(34)+","+char(34)+"getfocuswindowchangedevent"+char(34)+","+char(34)+"getfontdatabasechangedevent"+char(34)+","+char(34)+"getlastwindowclosedevent"+char(34)+","+char(34)+"getlayoutdirectionchangedevent"+char(34)+","+char(34)+"getpalettechangedevent"+char(34)+","+char(34)+"getprimaryscreenchangedevent"+char(34)+","+char(34)+"getsavestaterequestevent"+char(34)+","+char(34)+"getscreenaddedevent"+char(34)+","+char(34)+"getscreenremovedevent"+char(34)+","+char(34)+"inherits"+char(34)+","+char(34)+"init"+char(34)+","+char(34)+"inputmethod"+char(34)+","+char(34)+"installeventfilter"+char(34)+","+char(34)+"installnativeeventfilter"+char(34)+","+char(34)+"installtranslator"+char(34)+","+char(34)+"instance"+char(34)+","+char(34)+"islefttoright"+char(34)+","+char(34)+"isquitlockenabled"+char(34)+","+char(34)+"isrighttoleft"+char(34)+","+char(34)+"issavingsession"+char(34)+","+char(34)+"issessionrestored"+char(34)+","+char(34)+"iswidgettype"+char(34)+","+char(34)+"keyboardmodifiers"+char(34)+","+char(34)+"killtimer"+char(34)+","+char(34)+"layoutdirection"+char(34)+","+char(34)+"librarypaths"+char(34)+","+char(34)+"modalwindow"+char(34)+","+char(34)+"mousebuttons"+char(34)+","+char(34)+"movetothread"+char(34)+","+char(34)+"objectname"+char(34)+","+char(34)+"objectpointer"+char(34)+","+char(34)+"organizationdomain"+char(34)+","+char(34)+"organizationname"+char(34)+","+char(34)+"overridecursor"+char(34)+","+char(34)+"palette"+char(34)+","+char(34)+"parent"+char(34)+","+char(34)+"platformname"+char(34)+","+char(34)+"platformnativeinterface"+char(34)+","+char(34)+"postevent"+char(34)+","+char(34)+"primaryscreen"+char(34)+","+char(34)+"processevents"+char(34)+","+char(34)+"processevents_2"+char(34)+","+char(34)+"property"+char(34)+","+char(34)+"querykeyboardmodifiers"+char(34)+","+char(34)+"quit"+char(34)+","+char(34)+"quitonlastwindowclosed"+char(34)+","+char(34)+"removeeventfilter"+char(34)+","+char(34)+"removelibrarypath"+char(34)+","+char(34)+"removenativeeventfilter"+char(34)+","+char(34)+"removepostedevents"+char(34)+","+char(34)+"removetranslator"+char(34)+","+char(34)+"restoreoverridecursor"+char(34)+","+char(34)+"screens"+char(34)+","+char(34)+"sendevent"+char(34)+","+char(34)+"sendpostedevents"+char(34)+","+char(34)+"sessionid"+char(34)+","+char(34)+"sessionkey"+char(34)+","+char(34)+"setapplicationdisplayname"+char(34)+","+char(34)+"setapplicationdisplaynamechangedevent"+char(34)+","+char(34)+"setapplicationname"+char(34)+","+char(34)+"setapplicationstatechangedevent"+char(34)+","+char(34)+"setapplicationversion"+char(34)+","+char(34)+"setattribute"+char(34)+","+char(34)+"setcommitdatarequestevent"+char(34)+","+char(34)+"setdesktopsettingsaware"+char(34)+","+char(34)+"seteventdispatcher"+char(34)+","+char(34)+"setfocusobjectchangedevent"+char(34)+","+char(34)+"setfocuswindowchangedevent"+char(34)+","+char(34)+"setfont"+char(34)+","+char(34)+"setfontdatabasechangedevent"+char(34)+","+char(34)+"setlastwindowclosedevent"+char(34)+","+char(34)+"setlayoutdirection"+char(34)+","+char(34)+"setlayoutdirectionchangedevent"+char(34)+","+char(34)+"setlibrarypaths"+char(34)+","+char(34)+"setobjectname"+char(34)+","+char(34)+"setorganizationdomain"+char(34)+","+char(34)+"setorganizationname"+char(34)+","+char(34)+"setoverridecursor"+char(34)+","+char(34)+"setpalette"+char(34)+","+char(34)+"setpalettechangedevent"+char(34)+","+char(34)+"setparent"+char(34)+","+char(34)+"setprimaryscreenchangedevent"+char(34)+","+char(34)+"setproperty"+char(34)+","+char(34)+"setproperty_2"+char(34)+","+char(34)+"setproperty_3"+char(34)+","+char(34)+"setproperty_4"+char(34)+","+char(34)+"setproperty_5"+char(34)+","+char(34)+"setproperty_double"+char(34)+","+char(34)+"setproperty_float"+char(34)+","+char(34)+"setproperty_int"+char(34)+","+char(34)+"setproperty_string"+char(34)+","+char(34)+"setquitlockenabled"+char(34)+","+char(34)+"setquitonlastwindowclosed"+char(34)+","+char(34)+"setsavestaterequestevent"+char(34)+","+char(34)+"setscreenaddedevent"+char(34)+","+char(34)+"setscreenremovedevent"+char(34)+","+char(34)+"signalsblocked"+char(34)+","+char(34)+"startingup"+char(34)+","+char(34)+"starttimer"+char(34)+","+char(34)+"stylefusion"+char(34)+","+char(34)+"stylefusionblack"+char(34)+","+char(34)+"stylefusioncustom"+char(34)+","+char(34)+"stylehints"+char(34)+","+char(34)+"stylewindows"+char(34)+","+char(34)+"stylewindowsvista"+char(34)+","+char(34)+"sync"+char(34)+","+char(34)+"testattribute"+char(34)+","+char(34)+"thread"+char(34)+","+char(34)+"toplevelat"+char(34)+","+char(34)+"toplevelwindows"+char(34)+","+char(34)+"translate"+char(34)+"]"
			]
		]
	],
	[
		12,
		1,
		[
			[
				"name",
				"Copy the list to support changing the generated method name in the Steps Tree"
			],
			[
				"active",
				1
			],
			[
				"code",
				"#Copy the list to support changing the generated method name in the Steps Tree
"
			],
			[
				"interactionid",
				12
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				1
			],
			[
				"plainname",
				"Copy the list to support changing the generated method name in the Steps Tree"
			]
		]
	],
	[
		13,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE2STEPFUNC</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE2FUNC</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE2STEPFUNC = T_CT_QAPPCLASS_IP_VALUE2FUNC"
			],
			[
				"interactionid",
				13
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE2STEPFUNC = T_CT_QAPPCLASS_IP_VALUE2FUNC"
			]
		]
	],
	[
		14,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE2LIST</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">[&quot;addLibraryPath(QString&nbsp;path)&nbsp;--&gt;&nbsp;void&quot;,&quot;allWindows(void)&nbsp;--&gt;&nbsp;QWindowList&quot;,&quot;applicationDirPath(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;applicationDisplayName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;applicationFilePath(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;applicationName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;applicationPid(void)&nbsp;--&gt;&nbsp;qint64&quot;,&quot;applicationState(void)&nbsp;--&gt;&nbsp;Qt::ApplicationState&quot;,&quot;applicationVersion(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;arguments(void)&nbsp;--&gt;&nbsp;QStringList&quot;,&quot;blockSignals(bool&nbsp;block)&nbsp;--&gt;&nbsp;bool&quot;,&quot;changeOverrideCursor(QCursor&nbsp;cursor)&nbsp;--&gt;&nbsp;void&quot;,&quot;children(void)&nbsp;--&gt;&nbsp;QObjectList&quot;,&quot;clipboard(void)&nbsp;--&gt;&nbsp;QClipboard&quot;,&quot;closeAllWindows(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;closingDown(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;delete(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;deleteLater(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;desktopSettingsAware(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;devicePixelRatio(void)&nbsp;--&gt;&nbsp;qreal&quot;,&quot;dumpObjectInfo(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;dumpObjectTree(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;eventDispatcher(void)&nbsp;--&gt;&nbsp;QAbstractEventDispatcher&quot;,&quot;exec(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;exitfromapplication(int&nbsp;returnCode)&nbsp;--&gt;&nbsp;void&quot;,&quot;focusObject(void)&nbsp;--&gt;&nbsp;QObject&quot;,&quot;focusWindow(void)&nbsp;--&gt;&nbsp;QWindow&quot;,&quot;font(void)&nbsp;--&gt;&nbsp;QFont&quot;,&quot;getapplicationDisplayNameChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getapplicationStateChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getcommitDataRequestEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getfocusObjectChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getfocusWindowChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getfontDatabaseChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getlastWindowClosedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getlayoutDirectionChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getpaletteChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getprimaryScreenChangedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getsaveStateRequestEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getscreenAddedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;getscreenRemovedEvent(void)&nbsp;--&gt;&nbsp;char&quot;,&quot;inherits(char&nbsp;*className)&nbsp;--&gt;&nbsp;bool&quot;,&quot;init(parent)&nbsp;--&gt;&nbsp;object&quot;,&quot;inputMethod(void)&nbsp;--&gt;&nbsp;QInputMethod&quot;,&quot;installEventFilter(QObject&nbsp;*filterObj)&nbsp;--&gt;&nbsp;void&quot;,&quot;installNativeEventFilter(QAbstractNativeEventFilter&nbsp;*filterObj)&nbsp;--&gt;&nbsp;void&quot;,&quot;installTranslator(QTranslator&nbsp;*translationFile)&nbsp;--&gt;&nbsp;bool&quot;,&quot;instance(void)&nbsp;--&gt;&nbsp;QCoreApplication&quot;,&quot;isLeftToRight(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isQuitLockEnabled(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isRightToLeft(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isSavingSession(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isSessionRestored(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;isWidgetType(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;keyboardModifiers(void)&nbsp;--&gt;&nbsp;Qt::KeyboardModifiers&quot;,&quot;killTimer(int&nbsp;id)&nbsp;--&gt;&nbsp;void&quot;,&quot;layoutDirection(void)&nbsp;--&gt;&nbsp;Qt::LayoutDirection&quot;,&quot;libraryPaths(void)&nbsp;--&gt;&nbsp;QStringList&quot;,&quot;modalWindow(void)&nbsp;--&gt;&nbsp;QWindow&quot;,&quot;mouseButtons(void)&nbsp;--&gt;&nbsp;Qt::MouseButtons&quot;,&quot;moveToThread(QThread&nbsp;*targetThread)&nbsp;--&gt;&nbsp;void&quot;,&quot;objectName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;objectpointer(void)&nbsp;--&gt;&nbsp;pointer&quot;,&quot;organizationDomain(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;organizationName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;overrideCursor(void)&nbsp;--&gt;&nbsp;QCursor&quot;,&quot;palette(void)&nbsp;--&gt;&nbsp;QPalette&quot;,&quot;parent(void)&nbsp;--&gt;&nbsp;QObject&quot;,&quot;platformName(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;platformNativeInterface(void)&nbsp;--&gt;&nbsp;QPlatformNativeInterface&quot;,&quot;postEvent(QObject&nbsp;*receiver,&nbsp;QEvent&nbsp;*event,&nbsp;int&nbsp;priority)&nbsp;--&gt;&nbsp;void&quot;,&quot;primaryScreen(void)&nbsp;--&gt;&nbsp;QScreen&quot;,&quot;processEvents(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;processEvents_2(QEventLoop::ProcessEventsFlags&nbsp;flags,&nbsp;int&nbsp;maxtime)&nbsp;--&gt;&nbsp;void&quot;,&quot;property(char&nbsp;*name)&nbsp;--&gt;&nbsp;QVariant&quot;,&quot;queryKeyboardModifiers(void)&nbsp;--&gt;&nbsp;Qt::KeyboardModifiers&quot;,&quot;quit(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;quitOnLastWindowClosed(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;removeEventFilter(QObject&nbsp;*obj)&nbsp;--&gt;&nbsp;void&quot;,&quot;removeLibraryPath(QString&nbsp;path)&nbsp;--&gt;&nbsp;void&quot;,&quot;removeNativeEventFilter(QAbstractNativeEventFilter&nbsp;*filterObject)&nbsp;--&gt;&nbsp;void&quot;,&quot;removePostedEvents(QObject&nbsp;*receiver,&nbsp;int&nbsp;eventType)&nbsp;--&gt;&nbsp;void&quot;,&quot;removeTranslator(QTranslator&nbsp;*translationFile)&nbsp;--&gt;&nbsp;bool&quot;,&quot;restoreOverrideCursor(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;screens(void)&nbsp;--&gt;&nbsp;QList&quot;,&quot;sendEvent(QObject&nbsp;*receiver,&nbsp;QEvent&nbsp;*event)&nbsp;--&gt;&nbsp;bool&quot;,&quot;sendPostedEvents(QObject&nbsp;*receiver,&nbsp;int&nbsp;event_type)&nbsp;--&gt;&nbsp;void&quot;,&quot;sessionId(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;sessionKey(void)&nbsp;--&gt;&nbsp;QString&quot;,&quot;setApplicationDisplayName(QString&nbsp;name)&nbsp;--&gt;&nbsp;void&quot;,&quot;setapplicationDisplayNameChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setApplicationName(QString&nbsp;application)&nbsp;--&gt;&nbsp;void&quot;,&quot;setapplicationStateChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setApplicationVersion(QString&nbsp;version)&nbsp;--&gt;&nbsp;void&quot;,&quot;setAttribute(Qt::ApplicationAttribute&nbsp;attribute,&nbsp;bool&nbsp;on)&nbsp;--&gt;&nbsp;void&quot;,&quot;setcommitDataRequestEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setDesktopSettingsAware(bool&nbsp;on)&nbsp;--&gt;&nbsp;void&quot;,&quot;setEventDispatcher(QAbstractEventDispatcher&nbsp;*eventDispatcher)&nbsp;--&gt;&nbsp;void&quot;,&quot;setfocusObjectChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setfocusWindowChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setFont(QFont&nbsp;font)&nbsp;--&gt;&nbsp;void&quot;,&quot;setfontDatabaseChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setlastWindowClosedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLayoutDirection(Qt::LayoutDirection&nbsp;direction)&nbsp;--&gt;&nbsp;void&quot;,&quot;setlayoutDirectionChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setLibraryPaths(QStringList&nbsp;paths)&nbsp;--&gt;&nbsp;void&quot;,&quot;setObjectName(QString)&nbsp;--&gt;&nbsp;void&quot;,&quot;setOrganizationDomain(QString&nbsp;orgDomain)&nbsp;--&gt;&nbsp;void&quot;,&quot;setOrganizationName(QString&nbsp;orgName)&nbsp;--&gt;&nbsp;void&quot;,&quot;setOverrideCursor(QCursor&nbsp;cursor)&nbsp;--&gt;&nbsp;void&quot;,&quot;setPalette(QPalette&nbsp;pal)&nbsp;--&gt;&nbsp;void&quot;,&quot;setpaletteChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setParent(QObject&nbsp;*parent)&nbsp;--&gt;&nbsp;void&quot;,&quot;setprimaryScreenChangedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setProperty(char&nbsp;*name,&nbsp;QVariant)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_2(char&nbsp;*name,&nbsp;int)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_3(char&nbsp;*name,&nbsp;float)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_4(char&nbsp;*name,&nbsp;double)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_5(char&nbsp;*name,&nbsp;QString)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_double(char&nbsp;*name,&nbsp;double)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_float(char&nbsp;*name,&nbsp;float)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_int(char&nbsp;*name,&nbsp;int)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setProperty_string(char&nbsp;*name,&nbsp;QString)&nbsp;--&gt;&nbsp;bool&quot;,&quot;setQuitLockEnabled(bool&nbsp;enabled)&nbsp;--&gt;&nbsp;void&quot;,&quot;setQuitOnLastWindowClosed(bool&nbsp;quit)&nbsp;--&gt;&nbsp;void&quot;,&quot;setsaveStateRequestEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setscreenAddedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;setscreenRemovedEvent(char&nbsp;*)&nbsp;--&gt;&nbsp;void&quot;,&quot;signalsBlocked(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;startingUp(void)&nbsp;--&gt;&nbsp;bool&quot;,&quot;startTimer(int&nbsp;interval)&nbsp;--&gt;&nbsp;int&quot;,&quot;styleFusion(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;styleFusionBlack(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;styleFusionCustom(QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor)&nbsp;--&gt;&nbsp;void&quot;,&quot;styleHints(void)&nbsp;--&gt;&nbsp;QStyleHints&quot;,&quot;styleWindows(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;styleWindowsVista(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;sync(void)&nbsp;--&gt;&nbsp;void&quot;,&quot;testAttribute(Qt::ApplicationAttribute&nbsp;attribute)&nbsp;--&gt;&nbsp;bool&quot;,&quot;thread(void)&nbsp;--&gt;&nbsp;QThread&quot;,&quot;topLevelAt(QPoint&nbsp;pos)&nbsp;--&gt;&nbsp;QWindow&quot;,&quot;topLevelWindows(void)&nbsp;--&gt;&nbsp;QWindowList&quot;,&quot;translate(char&nbsp;*context,&nbsp;char&nbsp;*sourceText,&nbsp;char&nbsp;*disambiguation,&nbsp;int&nbsp;n)&nbsp;--&gt;&nbsp;QString&quot;]</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE2LIST = ["+char(34)+"addLibraryPath(QString path) --> void"+char(34)+","+char(34)+"allWindows(void) --> QWindowList"+char(34)+","+char(34)+"applicationDirPath(void) --> QString"+char(34)+","+char(34)+"applicationDisplayName(void) --> QString"+char(34)+","+char(34)+"applicationFilePath(void) --> QString"+char(34)+","+char(34)+"applicationName(void) --> QString"+char(34)+","+char(34)+"applicationPid(void) --> qint64"+char(34)+","+char(34)+"applicationState(void) --> Qt::ApplicationState"+char(34)+","+char(34)+"applicationVersion(void) --> QString"+char(34)+","+char(34)+"arguments(void) --> QStringList"+char(34)+","+char(34)+"blockSignals(bool block) --> bool"+char(34)+","+char(34)+"changeOverrideCursor(QCursor cursor) --> void"+char(34)+","+char(34)+"children(void) --> QObjectList"+char(34)+","+char(34)+"clipboard(void) --> QClipboard"+char(34)+","+char(34)+"closeAllWindows(void) --> void"+char(34)+","+char(34)+"closingDown(void) --> bool"+char(34)+","+char(34)+"delete(void) --> void"+char(34)+","+char(34)+"deleteLater(void) --> void"+char(34)+","+char(34)+"desktopSettingsAware(void) --> bool"+char(34)+","+char(34)+"devicePixelRatio(void) --> qreal"+char(34)+","+char(34)+"dumpObjectInfo(void) --> void"+char(34)+","+char(34)+"dumpObjectTree(void) --> void"+char(34)+","+char(34)+"eventDispatcher(void) --> QAbstractEventDispatcher"+char(34)+","+char(34)+"exec(void) --> void"+char(34)+","+char(34)+"exitfromapplication(int returnCode) --> void"+char(34)+","+char(34)+"focusObject(void) --> QObject"+char(34)+","+char(34)+"focusWindow(void) --> QWindow"+char(34)+","+char(34)+"font(void) --> QFont"+char(34)+","+char(34)+"getapplicationDisplayNameChangedEvent(void) --> char"+char(34)+","+char(34)+"getapplicationStateChangedEvent(void) --> char"+char(34)+","+char(34)+"getcommitDataRequestEvent(void) --> char"+char(34)+","+char(34)+"getfocusObjectChangedEvent(void) --> char"+char(34)+","+char(34)+"getfocusWindowChangedEvent(void) --> char"+char(34)+","+char(34)+"getfontDatabaseChangedEvent(void) --> char"+char(34)+","+char(34)+"getlastWindowClosedEvent(void) --> char"+char(34)+","+char(34)+"getlayoutDirectionChangedEvent(void) --> char"+char(34)+","+char(34)+"getpaletteChangedEvent(void) --> char"+char(34)+","+char(34)+"getprimaryScreenChangedEvent(void) --> char"+char(34)+","+char(34)+"getsaveStateRequestEvent(void) --> char"+char(34)+","+char(34)+"getscreenAddedEvent(void) --> char"+char(34)+","+char(34)+"getscreenRemovedEvent(void) --> char"+char(34)+","+char(34)+"inherits(char *className) --> bool"+char(34)+","+char(34)+"init(parent) --> object"+char(34)+","+char(34)+"inputMethod(void) --> QInputMethod"+char(34)+","+char(34)+"installEventFilter(QObject *filterObj) --> void"+char(34)+","+char(34)+"installNativeEventFilter(QAbstractNativeEventFilter *filterObj) --> void"+char(34)+","+char(34)+"installTranslator(QTranslator *translationFile) --> bool"+char(34)+","+char(34)+"instance(void) --> QCoreApplication"+char(34)+","+char(34)+"isLeftToRight(void) --> bool"+char(34)+","+char(34)+"isQuitLockEnabled(void) --> bool"+char(34)+","+char(34)+"isRightToLeft(void) --> bool"+char(34)+","+char(34)+"isSavingSession(void) --> bool"+char(34)+","+char(34)+"isSessionRestored(void) --> bool"+char(34)+","+char(34)+"isWidgetType(void) --> bool"+char(34)+","+char(34)+"keyboardModifiers(void) --> Qt::KeyboardModifiers"+char(34)+","+char(34)+"killTimer(int id) --> void"+char(34)+","+char(34)+"layoutDirection(void) --> Qt::LayoutDirection"+char(34)+","+char(34)+"libraryPaths(void) --> QStringList"+char(34)+","+char(34)+"modalWindow(void) --> QWindow"+char(34)+","+char(34)+"mouseButtons(void) --> Qt::MouseButtons"+char(34)+","+char(34)+"moveToThread(QThread *targetThread) --> void"+char(34)+","+char(34)+"objectName(void) --> QString"+char(34)+","+char(34)+"objectpointer(void) --> pointer"+char(34)+","+char(34)+"organizationDomain(void) --> QString"+char(34)+","+char(34)+"organizationName(void) --> QString"+char(34)+","+char(34)+"overrideCursor(void) --> QCursor"+char(34)+","+char(34)+"palette(void) --> QPalette"+char(34)+","+char(34)+"parent(void) --> QObject"+char(34)+","+char(34)+"platformName(void) --> QString"+char(34)+","+char(34)+"platformNativeInterface(void) --> QPlatformNativeInterface"+char(34)+","+char(34)+"postEvent(QObject *receiver, QEvent *event, int priority) --> void"+char(34)+","+char(34)+"primaryScreen(void) --> QScreen"+char(34)+","+char(34)+"processEvents(void) --> void"+char(34)+","+char(34)+"processEvents_2(QEventLoop::ProcessEventsFlags flags, int maxtime) --> void"+char(34)+","+char(34)+"property(char *name) --> QVariant"+char(34)+","+char(34)+"queryKeyboardModifiers(void) --> Qt::KeyboardModifiers"+char(34)+","+char(34)+"quit(void) --> void"+char(34)+","+char(34)+"quitOnLastWindowClosed(void) --> bool"+char(34)+","+char(34)+"removeEventFilter(QObject *obj) --> void"+char(34)+","+char(34)+"removeLibraryPath(QString path) --> void"+char(34)+","+char(34)+"removeNativeEventFilter(QAbstractNativeEventFilter *filterObject) --> void"+char(34)+","+char(34)+"removePostedEvents(QObject *receiver, int eventType) --> void"+char(34)+","+char(34)+"removeTranslator(QTranslator *translationFile) --> bool"+char(34)+","+char(34)+"restoreOverrideCursor(void) --> void"+char(34)+","+char(34)+"screens(void) --> QList"+char(34)+","+char(34)+"sendEvent(QObject *receiver, QEvent *event) --> bool"+char(34)+","+char(34)+"sendPostedEvents(QObject *receiver, int event_type) --> void"+char(34)+","+char(34)+"sessionId(void) --> QString"+char(34)+","+char(34)+"sessionKey(void) --> QString"+char(34)+","+char(34)+"setApplicationDisplayName(QString name) --> void"+char(34)+","+char(34)+"setapplicationDisplayNameChangedEvent(char *) --> void"+char(34)+","+char(34)+"setApplicationName(QString application) --> void"+char(34)+","+char(34)+"setapplicationStateChangedEvent(char *) --> void"+char(34)+","+char(34)+"setApplicationVersion(QString version) --> void"+char(34)+","+char(34)+"setAttribute(Qt::ApplicationAttribute attribute, bool on) --> void"+char(34)+","+char(34)+"setcommitDataRequestEvent(char *) --> void"+char(34)+","+char(34)+"setDesktopSettingsAware(bool on) --> void"+char(34)+","+char(34)+"setEventDispatcher(QAbstractEventDispatcher *eventDispatcher) --> void"+char(34)+","+char(34)+"setfocusObjectChangedEvent(char *) --> void"+char(34)+","+char(34)+"setfocusWindowChangedEvent(char *) --> void"+char(34)+","+char(34)+"setFont(QFont font) --> void"+char(34)+","+char(34)+"setfontDatabaseChangedEvent(char *) --> void"+char(34)+","+char(34)+"setlastWindowClosedEvent(char *) --> void"+char(34)+","+char(34)+"setLayoutDirection(Qt::LayoutDirection direction) --> void"+char(34)+","+char(34)+"setlayoutDirectionChangedEvent(char *) --> void"+char(34)+","+char(34)+"setLibraryPaths(QStringList paths) --> void"+char(34)+","+char(34)+"setObjectName(QString) --> void"+char(34)+","+char(34)+"setOrganizationDomain(QString orgDomain) --> void"+char(34)+","+char(34)+"setOrganizationName(QString orgName) --> void"+char(34)+","+char(34)+"setOverrideCursor(QCursor cursor) --> void"+char(34)+","+char(34)+"setPalette(QPalette pal) --> void"+char(34)+","+char(34)+"setpaletteChangedEvent(char *) --> void"+char(34)+","+char(34)+"setParent(QObject *parent) --> void"+char(34)+","+char(34)+"setprimaryScreenChangedEvent(char *) --> void"+char(34)+","+char(34)+"setProperty(char *name, QVariant) --> bool"+char(34)+","+char(34)+"setProperty_2(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_3(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_4(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_5(char *name, QString) --> bool"+char(34)+","+char(34)+"setProperty_double(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_float(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_int(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_string(char *name, QString) --> bool"+char(34)+","+char(34)+"setQuitLockEnabled(bool enabled) --> void"+char(34)+","+char(34)+"setQuitOnLastWindowClosed(bool quit) --> void"+char(34)+","+char(34)+"setsaveStateRequestEvent(char *) --> void"+char(34)+","+char(34)+"setscreenAddedEvent(char *) --> void"+char(34)+","+char(34)+"setscreenRemovedEvent(char *) --> void"+char(34)+","+char(34)+"signalsBlocked(void) --> bool"+char(34)+","+char(34)+"startingUp(void) --> bool"+char(34)+","+char(34)+"startTimer(int interval) --> int"+char(34)+","+char(34)+"styleFusion(void) --> void"+char(34)+","+char(34)+"styleFusionBlack(void) --> void"+char(34)+","+char(34)+"styleFusionCustom(QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor) --> void"+char(34)+","+char(34)+"styleHints(void) --> QStyleHints"+char(34)+","+char(34)+"styleWindows(void) --> void"+char(34)+","+char(34)+"styleWindowsVista(void) --> void"+char(34)+","+char(34)+"sync(void) --> void"+char(34)+","+char(34)+"testAttribute(Qt::ApplicationAttribute attribute) --> bool"+char(34)+","+char(34)+"thread(void) --> QThread"+char(34)+","+char(34)+"topLevelAt(QPoint pos) --> QWindow"+char(34)+","+char(34)+"topLevelWindows(void) --> QWindowList"+char(34)+","+char(34)+"translate(char *context, char *sourceText, char *disambiguation, int n) --> QString"+char(34)+"]"
			],
			[
				"interactionid",
				14
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE2LIST = ["+char(34)+"addLibraryPath(QString path) --> void"+char(34)+","+char(34)+"allWindows(void) --> QWindowList"+char(34)+","+char(34)+"applicationDirPath(void) --> QString"+char(34)+","+char(34)+"applicationDisplayName(void) --> QString"+char(34)+","+char(34)+"applicationFilePath(void) --> QString"+char(34)+","+char(34)+"applicationName(void) --> QString"+char(34)+","+char(34)+"applicationPid(void) --> qint64"+char(34)+","+char(34)+"applicationState(void) --> Qt::ApplicationState"+char(34)+","+char(34)+"applicationVersion(void) --> QString"+char(34)+","+char(34)+"arguments(void) --> QStringList"+char(34)+","+char(34)+"blockSignals(bool block) --> bool"+char(34)+","+char(34)+"changeOverrideCursor(QCursor cursor) --> void"+char(34)+","+char(34)+"children(void) --> QObjectList"+char(34)+","+char(34)+"clipboard(void) --> QClipboard"+char(34)+","+char(34)+"closeAllWindows(void) --> void"+char(34)+","+char(34)+"closingDown(void) --> bool"+char(34)+","+char(34)+"delete(void) --> void"+char(34)+","+char(34)+"deleteLater(void) --> void"+char(34)+","+char(34)+"desktopSettingsAware(void) --> bool"+char(34)+","+char(34)+"devicePixelRatio(void) --> qreal"+char(34)+","+char(34)+"dumpObjectInfo(void) --> void"+char(34)+","+char(34)+"dumpObjectTree(void) --> void"+char(34)+","+char(34)+"eventDispatcher(void) --> QAbstractEventDispatcher"+char(34)+","+char(34)+"exec(void) --> void"+char(34)+","+char(34)+"exitfromapplication(int returnCode) --> void"+char(34)+","+char(34)+"focusObject(void) --> QObject"+char(34)+","+char(34)+"focusWindow(void) --> QWindow"+char(34)+","+char(34)+"font(void) --> QFont"+char(34)+","+char(34)+"getapplicationDisplayNameChangedEvent(void) --> char"+char(34)+","+char(34)+"getapplicationStateChangedEvent(void) --> char"+char(34)+","+char(34)+"getcommitDataRequestEvent(void) --> char"+char(34)+","+char(34)+"getfocusObjectChangedEvent(void) --> char"+char(34)+","+char(34)+"getfocusWindowChangedEvent(void) --> char"+char(34)+","+char(34)+"getfontDatabaseChangedEvent(void) --> char"+char(34)+","+char(34)+"getlastWindowClosedEvent(void) --> char"+char(34)+","+char(34)+"getlayoutDirectionChangedEvent(void) --> char"+char(34)+","+char(34)+"getpaletteChangedEvent(void) --> char"+char(34)+","+char(34)+"getprimaryScreenChangedEvent(void) --> char"+char(34)+","+char(34)+"getsaveStateRequestEvent(void) --> char"+char(34)+","+char(34)+"getscreenAddedEvent(void) --> char"+char(34)+","+char(34)+"getscreenRemovedEvent(void) --> char"+char(34)+","+char(34)+"inherits(char *className) --> bool"+char(34)+","+char(34)+"init(parent) --> object"+char(34)+","+char(34)+"inputMethod(void) --> QInputMethod"+char(34)+","+char(34)+"installEventFilter(QObject *filterObj) --> void"+char(34)+","+char(34)+"installNativeEventFilter(QAbstractNativeEventFilter *filterObj) --> void"+char(34)+","+char(34)+"installTranslator(QTranslator *translationFile) --> bool"+char(34)+","+char(34)+"instance(void) --> QCoreApplication"+char(34)+","+char(34)+"isLeftToRight(void) --> bool"+char(34)+","+char(34)+"isQuitLockEnabled(void) --> bool"+char(34)+","+char(34)+"isRightToLeft(void) --> bool"+char(34)+","+char(34)+"isSavingSession(void) --> bool"+char(34)+","+char(34)+"isSessionRestored(void) --> bool"+char(34)+","+char(34)+"isWidgetType(void) --> bool"+char(34)+","+char(34)+"keyboardModifiers(void) --> Qt::KeyboardModifiers"+char(34)+","+char(34)+"killTimer(int id) --> void"+char(34)+","+char(34)+"layoutDirection(void) --> Qt::LayoutDirection"+char(34)+","+char(34)+"libraryPaths(void) --> QStringList"+char(34)+","+char(34)+"modalWindow(void) --> QWindow"+char(34)+","+char(34)+"mouseButtons(void) --> Qt::MouseButtons"+char(34)+","+char(34)+"moveToThread(QThread *targetThread) --> void"+char(34)+","+char(34)+"objectName(void) --> QString"+char(34)+","+char(34)+"objectpointer(void) --> pointer"+char(34)+","+char(34)+"organizationDomain(void) --> QString"+char(34)+","+char(34)+"organizationName(void) --> QString"+char(34)+","+char(34)+"overrideCursor(void) --> QCursor"+char(34)+","+char(34)+"palette(void) --> QPalette"+char(34)+","+char(34)+"parent(void) --> QObject"+char(34)+","+char(34)+"platformName(void) --> QString"+char(34)+","+char(34)+"platformNativeInterface(void) --> QPlatformNativeInterface"+char(34)+","+char(34)+"postEvent(QObject *receiver, QEvent *event, int priority) --> void"+char(34)+","+char(34)+"primaryScreen(void) --> QScreen"+char(34)+","+char(34)+"processEvents(void) --> void"+char(34)+","+char(34)+"processEvents_2(QEventLoop::ProcessEventsFlags flags, int maxtime) --> void"+char(34)+","+char(34)+"property(char *name) --> QVariant"+char(34)+","+char(34)+"queryKeyboardModifiers(void) --> Qt::KeyboardModifiers"+char(34)+","+char(34)+"quit(void) --> void"+char(34)+","+char(34)+"quitOnLastWindowClosed(void) --> bool"+char(34)+","+char(34)+"removeEventFilter(QObject *obj) --> void"+char(34)+","+char(34)+"removeLibraryPath(QString path) --> void"+char(34)+","+char(34)+"removeNativeEventFilter(QAbstractNativeEventFilter *filterObject) --> void"+char(34)+","+char(34)+"removePostedEvents(QObject *receiver, int eventType) --> void"+char(34)+","+char(34)+"removeTranslator(QTranslator *translationFile) --> bool"+char(34)+","+char(34)+"restoreOverrideCursor(void) --> void"+char(34)+","+char(34)+"screens(void) --> QList"+char(34)+","+char(34)+"sendEvent(QObject *receiver, QEvent *event) --> bool"+char(34)+","+char(34)+"sendPostedEvents(QObject *receiver, int event_type) --> void"+char(34)+","+char(34)+"sessionId(void) --> QString"+char(34)+","+char(34)+"sessionKey(void) --> QString"+char(34)+","+char(34)+"setApplicationDisplayName(QString name) --> void"+char(34)+","+char(34)+"setapplicationDisplayNameChangedEvent(char *) --> void"+char(34)+","+char(34)+"setApplicationName(QString application) --> void"+char(34)+","+char(34)+"setapplicationStateChangedEvent(char *) --> void"+char(34)+","+char(34)+"setApplicationVersion(QString version) --> void"+char(34)+","+char(34)+"setAttribute(Qt::ApplicationAttribute attribute, bool on) --> void"+char(34)+","+char(34)+"setcommitDataRequestEvent(char *) --> void"+char(34)+","+char(34)+"setDesktopSettingsAware(bool on) --> void"+char(34)+","+char(34)+"setEventDispatcher(QAbstractEventDispatcher *eventDispatcher) --> void"+char(34)+","+char(34)+"setfocusObjectChangedEvent(char *) --> void"+char(34)+","+char(34)+"setfocusWindowChangedEvent(char *) --> void"+char(34)+","+char(34)+"setFont(QFont font) --> void"+char(34)+","+char(34)+"setfontDatabaseChangedEvent(char *) --> void"+char(34)+","+char(34)+"setlastWindowClosedEvent(char *) --> void"+char(34)+","+char(34)+"setLayoutDirection(Qt::LayoutDirection direction) --> void"+char(34)+","+char(34)+"setlayoutDirectionChangedEvent(char *) --> void"+char(34)+","+char(34)+"setLibraryPaths(QStringList paths) --> void"+char(34)+","+char(34)+"setObjectName(QString) --> void"+char(34)+","+char(34)+"setOrganizationDomain(QString orgDomain) --> void"+char(34)+","+char(34)+"setOrganizationName(QString orgName) --> void"+char(34)+","+char(34)+"setOverrideCursor(QCursor cursor) --> void"+char(34)+","+char(34)+"setPalette(QPalette pal) --> void"+char(34)+","+char(34)+"setpaletteChangedEvent(char *) --> void"+char(34)+","+char(34)+"setParent(QObject *parent) --> void"+char(34)+","+char(34)+"setprimaryScreenChangedEvent(char *) --> void"+char(34)+","+char(34)+"setProperty(char *name, QVariant) --> bool"+char(34)+","+char(34)+"setProperty_2(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_3(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_4(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_5(char *name, QString) --> bool"+char(34)+","+char(34)+"setProperty_double(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_float(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_int(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_string(char *name, QString) --> bool"+char(34)+","+char(34)+"setQuitLockEnabled(bool enabled) --> void"+char(34)+","+char(34)+"setQuitOnLastWindowClosed(bool quit) --> void"+char(34)+","+char(34)+"setsaveStateRequestEvent(char *) --> void"+char(34)+","+char(34)+"setscreenAddedEvent(char *) --> void"+char(34)+","+char(34)+"setscreenRemovedEvent(char *) --> void"+char(34)+","+char(34)+"signalsBlocked(void) --> bool"+char(34)+","+char(34)+"startingUp(void) --> bool"+char(34)+","+char(34)+"startTimer(int interval) --> int"+char(34)+","+char(34)+"styleFusion(void) --> void"+char(34)+","+char(34)+"styleFusionBlack(void) --> void"+char(34)+","+char(34)+"styleFusionCustom(QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor) --> void"+char(34)+","+char(34)+"styleHints(void) --> QStyleHints"+char(34)+","+char(34)+"styleWindows(void) --> void"+char(34)+","+char(34)+"styleWindowsVista(void) --> void"+char(34)+","+char(34)+"sync(void) --> void"+char(34)+","+char(34)+"testAttribute(Qt::ApplicationAttribute attribute) --> bool"+char(34)+","+char(34)+"thread(void) --> QThread"+char(34)+","+char(34)+"topLevelAt(QPoint pos) --> QWindow"+char(34)+","+char(34)+"topLevelWindows(void) --> QWindowList"+char(34)+","+char(34)+"translate(char *context, char *sourceText, char *disambiguation, int n) --> QString"+char(34)+"]"
			]
		]
	],
	[
		15,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE3</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Parameters&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE3 = "+char(34)+"Parameters"+char(34)+""
			],
			[
				"interactionid",
				15
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE3 = "+char(34)+"Parameters"+char(34)+""
			]
		]
	],
	[
		16,
		1,
		[
			[
				"name",
				"<span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">T_CT_QAPPCLASS_IP_VALUE4</font></span> = <span style="+char(34)+"background-color:C_STEPCOLOR_DATA_BACKCOLOR"+char(34)+"><font color="+char(34)+"C_STEPCOLOR_DATA_TEXT"+char(34)+">&quot;Output&quot;</font></span>"
			],
			[
				"active",
				1
			],
			[
				"code",
				"T_CT_QAPPCLASS_IP_VALUE4 = "+char(34)+"Output"+char(34)+""
			],
			[
				"interactionid",
				16
			],
			[
				"visible",
				1
			],
			[
				"stepnumber",
				1
			],
			[
				"steptype",
				2
			],
			[
				"plainname",
				"T_CT_QAPPCLASS_IP_VALUE4 = "+char(34)+"Output"+char(34)+""
			]
		]
	]
]

aInteractionsTable = [
	[
		1,
		1,
		"",
		"02/05/2025",
		"06:15:50",
		""
	],
	[
		2,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;/*;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		3,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;**	Project : Programming Without Coding Technology (PWCT) Version 2.0;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		4,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;**	File Purpose :  qappclass Component;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		5,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;**	Date : 2017.12.14;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		6,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;**	Author :  Mahmoud Fayed <msfclipper@yahoo.com>;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		7,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;*/;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		8,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_TITLE;;_RV_;;rightside;;_RV_;;"+char(34)+"Application Class Component"+char(34)+";;_RV_;;"
	],
	[
		9,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE;;_RV_;;rightside;;_RV_;;"+char(34)+"Object"+char(34)+";;_RV_;;"
	],
	[
		10,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE2;;_RV_;;rightside;;_RV_;;"+char(34)+"Method"+char(34)+";;_RV_;;"
	],
	[
		11,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE2FUNC;;_RV_;;rightside;;_RV_;;["+char(34)+"addlibrarypath"+char(34)+","+char(34)+"allwindows"+char(34)+","+char(34)+"applicationdirpath"+char(34)+","+char(34)+"applicationdisplayname"+char(34)+","+char(34)+"applicationfilepath"+char(34)+","+char(34)+"applicationname"+char(34)+","+char(34)+"applicationpid"+char(34)+","+char(34)+"applicationstate"+char(34)+","+char(34)+"applicationversion"+char(34)+","+char(34)+"arguments"+char(34)+","+char(34)+"blocksignals"+char(34)+","+char(34)+"changeoverridecursor"+char(34)+","+char(34)+"children"+char(34)+","+char(34)+"clipboard"+char(34)+","+char(34)+"closeallwindows"+char(34)+","+char(34)+"closingdown"+char(34)+","+char(34)+"delete"+char(34)+","+char(34)+"deletelater"+char(34)+","+char(34)+"desktopsettingsaware"+char(34)+","+char(34)+"devicepixelratio"+char(34)+","+char(34)+"dumpobjectinfo"+char(34)+","+char(34)+"dumpobjecttree"+char(34)+","+char(34)+"eventdispatcher"+char(34)+","+char(34)+"exec"+char(34)+","+char(34)+"exitfromapplication"+char(34)+","+char(34)+"focusobject"+char(34)+","+char(34)+"focuswindow"+char(34)+","+char(34)+"font"+char(34)+","+char(34)+"getapplicationdisplaynamechangedevent"+char(34)+","+char(34)+"getapplicationstatechangedevent"+char(34)+","+char(34)+"getcommitdatarequestevent"+char(34)+","+char(34)+"getfocusobjectchangedevent"+char(34)+","+char(34)+"getfocuswindowchangedevent"+char(34)+","+char(34)+"getfontdatabasechangedevent"+char(34)+","+char(34)+"getlastwindowclosedevent"+char(34)+","+char(34)+"getlayoutdirectionchangedevent"+char(34)+","+char(34)+"getpalettechangedevent"+char(34)+","+char(34)+"getprimaryscreenchangedevent"+char(34)+","+char(34)+"getsavestaterequestevent"+char(34)+","+char(34)+"getscreenaddedevent"+char(34)+","+char(34)+"getscreenremovedevent"+char(34)+","+char(34)+"inherits"+char(34)+","+char(34)+"init"+char(34)+","+char(34)+"inputmethod"+char(34)+","+char(34)+"installeventfilter"+char(34)+","+char(34)+"installnativeeventfilter"+char(34)+","+char(34)+"installtranslator"+char(34)+","+char(34)+"instance"+char(34)+","+char(34)+"islefttoright"+char(34)+","+char(34)+"isquitlockenabled"+char(34)+","+char(34)+"isrighttoleft"+char(34)+","+char(34)+"issavingsession"+char(34)+","+char(34)+"issessionrestored"+char(34)+","+char(34)+"iswidgettype"+char(34)+","+char(34)+"keyboardmodifiers"+char(34)+","+char(34)+"killtimer"+char(34)+","+char(34)+"layoutdirection"+char(34)+","+char(34)+"librarypaths"+char(34)+","+char(34)+"modalwindow"+char(34)+","+char(34)+"mousebuttons"+char(34)+","+char(34)+"movetothread"+char(34)+","+char(34)+"objectname"+char(34)+","+char(34)+"objectpointer"+char(34)+","+char(34)+"organizationdomain"+char(34)+","+char(34)+"organizationname"+char(34)+","+char(34)+"overridecursor"+char(34)+","+char(34)+"palette"+char(34)+","+char(34)+"parent"+char(34)+","+char(34)+"platformname"+char(34)+","+char(34)+"platformnativeinterface"+char(34)+","+char(34)+"postevent"+char(34)+","+char(34)+"primaryscreen"+char(34)+","+char(34)+"processevents"+char(34)+","+char(34)+"processevents_2"+char(34)+","+char(34)+"property"+char(34)+","+char(34)+"querykeyboardmodifiers"+char(34)+","+char(34)+"quit"+char(34)+","+char(34)+"quitonlastwindowclosed"+char(34)+","+char(34)+"removeeventfilter"+char(34)+","+char(34)+"removelibrarypath"+char(34)+","+char(34)+"removenativeeventfilter"+char(34)+","+char(34)+"removepostedevents"+char(34)+","+char(34)+"removetranslator"+char(34)+","+char(34)+"restoreoverridecursor"+char(34)+","+char(34)+"screens"+char(34)+","+char(34)+"sendevent"+char(34)+","+char(34)+"sendpostedevents"+char(34)+","+char(34)+"sessionid"+char(34)+","+char(34)+"sessionkey"+char(34)+","+char(34)+"setapplicationdisplayname"+char(34)+","+char(34)+"setapplicationdisplaynamechangedevent"+char(34)+","+char(34)+"setapplicationname"+char(34)+","+char(34)+"setapplicationstatechangedevent"+char(34)+","+char(34)+"setapplicationversion"+char(34)+","+char(34)+"setattribute"+char(34)+","+char(34)+"setcommitdatarequestevent"+char(34)+","+char(34)+"setdesktopsettingsaware"+char(34)+","+char(34)+"seteventdispatcher"+char(34)+","+char(34)+"setfocusobjectchangedevent"+char(34)+","+char(34)+"setfocuswindowchangedevent"+char(34)+","+char(34)+"setfont"+char(34)+","+char(34)+"setfontdatabasechangedevent"+char(34)+","+char(34)+"setlastwindowclosedevent"+char(34)+","+char(34)+"setlayoutdirection"+char(34)+","+char(34)+"setlayoutdirectionchangedevent"+char(34)+","+char(34)+"setlibrarypaths"+char(34)+","+char(34)+"setobjectname"+char(34)+","+char(34)+"setorganizationdomain"+char(34)+","+char(34)+"setorganizationname"+char(34)+","+char(34)+"setoverridecursor"+char(34)+","+char(34)+"setpalette"+char(34)+","+char(34)+"setpalettechangedevent"+char(34)+","+char(34)+"setparent"+char(34)+","+char(34)+"setprimaryscreenchangedevent"+char(34)+","+char(34)+"setproperty"+char(34)+","+char(34)+"setproperty_2"+char(34)+","+char(34)+"setproperty_3"+char(34)+","+char(34)+"setproperty_4"+char(34)+","+char(34)+"setproperty_5"+char(34)+","+char(34)+"setproperty_double"+char(34)+","+char(34)+"setproperty_float"+char(34)+","+char(34)+"setproperty_int"+char(34)+","+char(34)+"setproperty_string"+char(34)+","+char(34)+"setquitlockenabled"+char(34)+","+char(34)+"setquitonlastwindowclosed"+char(34)+","+char(34)+"setsavestaterequestevent"+char(34)+","+char(34)+"setscreenaddedevent"+char(34)+","+char(34)+"setscreenremovedevent"+char(34)+","+char(34)+"signalsblocked"+char(34)+","+char(34)+"startingup"+char(34)+","+char(34)+"starttimer"+char(34)+","+char(34)+"stylefusion"+char(34)+","+char(34)+"stylefusionblack"+char(34)+","+char(34)+"stylefusioncustom"+char(34)+","+char(34)+"stylehints"+char(34)+","+char(34)+"stylewindows"+char(34)+","+char(34)+"stylewindowsvista"+char(34)+","+char(34)+"sync"+char(34)+","+char(34)+"testattribute"+char(34)+","+char(34)+"thread"+char(34)+","+char(34)+"toplevelat"+char(34)+","+char(34)+"toplevelwindows"+char(34)+","+char(34)+"translate"+char(34)+"];;_RV_;;"
	],
	[
		12,
		1,
		"comment_text",
		"02/05/2025",
		"06:15:50",
		"value;;_RV_;;Copy the list to support changing the generated method name in the Steps Tree;;_RV_;;value2;;_RV_;;0;;_RV_;;"
	],
	[
		13,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE2STEPFUNC;;_RV_;;rightside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE2FUNC;;_RV_;;"
	],
	[
		14,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE2LIST;;_RV_;;rightside;;_RV_;;["+char(34)+"addLibraryPath(QString path) --> void"+char(34)+","+char(34)+"allWindows(void) --> QWindowList"+char(34)+","+char(34)+"applicationDirPath(void) --> QString"+char(34)+","+char(34)+"applicationDisplayName(void) --> QString"+char(34)+","+char(34)+"applicationFilePath(void) --> QString"+char(34)+","+char(34)+"applicationName(void) --> QString"+char(34)+","+char(34)+"applicationPid(void) --> qint64"+char(34)+","+char(34)+"applicationState(void) --> Qt::ApplicationState"+char(34)+","+char(34)+"applicationVersion(void) --> QString"+char(34)+","+char(34)+"arguments(void) --> QStringList"+char(34)+","+char(34)+"blockSignals(bool block) --> bool"+char(34)+","+char(34)+"changeOverrideCursor(QCursor cursor) --> void"+char(34)+","+char(34)+"children(void) --> QObjectList"+char(34)+","+char(34)+"clipboard(void) --> QClipboard"+char(34)+","+char(34)+"closeAllWindows(void) --> void"+char(34)+","+char(34)+"closingDown(void) --> bool"+char(34)+","+char(34)+"delete(void) --> void"+char(34)+","+char(34)+"deleteLater(void) --> void"+char(34)+","+char(34)+"desktopSettingsAware(void) --> bool"+char(34)+","+char(34)+"devicePixelRatio(void) --> qreal"+char(34)+","+char(34)+"dumpObjectInfo(void) --> void"+char(34)+","+char(34)+"dumpObjectTree(void) --> void"+char(34)+","+char(34)+"eventDispatcher(void) --> QAbstractEventDispatcher"+char(34)+","+char(34)+"exec(void) --> void"+char(34)+","+char(34)+"exitfromapplication(int returnCode) --> void"+char(34)+","+char(34)+"focusObject(void) --> QObject"+char(34)+","+char(34)+"focusWindow(void) --> QWindow"+char(34)+","+char(34)+"font(void) --> QFont"+char(34)+","+char(34)+"getapplicationDisplayNameChangedEvent(void) --> char"+char(34)+","+char(34)+"getapplicationStateChangedEvent(void) --> char"+char(34)+","+char(34)+"getcommitDataRequestEvent(void) --> char"+char(34)+","+char(34)+"getfocusObjectChangedEvent(void) --> char"+char(34)+","+char(34)+"getfocusWindowChangedEvent(void) --> char"+char(34)+","+char(34)+"getfontDatabaseChangedEvent(void) --> char"+char(34)+","+char(34)+"getlastWindowClosedEvent(void) --> char"+char(34)+","+char(34)+"getlayoutDirectionChangedEvent(void) --> char"+char(34)+","+char(34)+"getpaletteChangedEvent(void) --> char"+char(34)+","+char(34)+"getprimaryScreenChangedEvent(void) --> char"+char(34)+","+char(34)+"getsaveStateRequestEvent(void) --> char"+char(34)+","+char(34)+"getscreenAddedEvent(void) --> char"+char(34)+","+char(34)+"getscreenRemovedEvent(void) --> char"+char(34)+","+char(34)+"inherits(char *className) --> bool"+char(34)+","+char(34)+"init(parent) --> object"+char(34)+","+char(34)+"inputMethod(void) --> QInputMethod"+char(34)+","+char(34)+"installEventFilter(QObject *filterObj) --> void"+char(34)+","+char(34)+"installNativeEventFilter(QAbstractNativeEventFilter *filterObj) --> void"+char(34)+","+char(34)+"installTranslator(QTranslator *translationFile) --> bool"+char(34)+","+char(34)+"instance(void) --> QCoreApplication"+char(34)+","+char(34)+"isLeftToRight(void) --> bool"+char(34)+","+char(34)+"isQuitLockEnabled(void) --> bool"+char(34)+","+char(34)+"isRightToLeft(void) --> bool"+char(34)+","+char(34)+"isSavingSession(void) --> bool"+char(34)+","+char(34)+"isSessionRestored(void) --> bool"+char(34)+","+char(34)+"isWidgetType(void) --> bool"+char(34)+","+char(34)+"keyboardModifiers(void) --> Qt::KeyboardModifiers"+char(34)+","+char(34)+"killTimer(int id) --> void"+char(34)+","+char(34)+"layoutDirection(void) --> Qt::LayoutDirection"+char(34)+","+char(34)+"libraryPaths(void) --> QStringList"+char(34)+","+char(34)+"modalWindow(void) --> QWindow"+char(34)+","+char(34)+"mouseButtons(void) --> Qt::MouseButtons"+char(34)+","+char(34)+"moveToThread(QThread *targetThread) --> void"+char(34)+","+char(34)+"objectName(void) --> QString"+char(34)+","+char(34)+"objectpointer(void) --> pointer"+char(34)+","+char(34)+"organizationDomain(void) --> QString"+char(34)+","+char(34)+"organizationName(void) --> QString"+char(34)+","+char(34)+"overrideCursor(void) --> QCursor"+char(34)+","+char(34)+"palette(void) --> QPalette"+char(34)+","+char(34)+"parent(void) --> QObject"+char(34)+","+char(34)+"platformName(void) --> QString"+char(34)+","+char(34)+"platformNativeInterface(void) --> QPlatformNativeInterface"+char(34)+","+char(34)+"postEvent(QObject *receiver, QEvent *event, int priority) --> void"+char(34)+","+char(34)+"primaryScreen(void) --> QScreen"+char(34)+","+char(34)+"processEvents(void) --> void"+char(34)+","+char(34)+"processEvents_2(QEventLoop::ProcessEventsFlags flags, int maxtime) --> void"+char(34)+","+char(34)+"property(char *name) --> QVariant"+char(34)+","+char(34)+"queryKeyboardModifiers(void) --> Qt::KeyboardModifiers"+char(34)+","+char(34)+"quit(void) --> void"+char(34)+","+char(34)+"quitOnLastWindowClosed(void) --> bool"+char(34)+","+char(34)+"removeEventFilter(QObject *obj) --> void"+char(34)+","+char(34)+"removeLibraryPath(QString path) --> void"+char(34)+","+char(34)+"removeNativeEventFilter(QAbstractNativeEventFilter *filterObject) --> void"+char(34)+","+char(34)+"removePostedEvents(QObject *receiver, int eventType) --> void"+char(34)+","+char(34)+"removeTranslator(QTranslator *translationFile) --> bool"+char(34)+","+char(34)+"restoreOverrideCursor(void) --> void"+char(34)+","+char(34)+"screens(void) --> QList"+char(34)+","+char(34)+"sendEvent(QObject *receiver, QEvent *event) --> bool"+char(34)+","+char(34)+"sendPostedEvents(QObject *receiver, int event_type) --> void"+char(34)+","+char(34)+"sessionId(void) --> QString"+char(34)+","+char(34)+"sessionKey(void) --> QString"+char(34)+","+char(34)+"setApplicationDisplayName(QString name) --> void"+char(34)+","+char(34)+"setapplicationDisplayNameChangedEvent(char *) --> void"+char(34)+","+char(34)+"setApplicationName(QString application) --> void"+char(34)+","+char(34)+"setapplicationStateChangedEvent(char *) --> void"+char(34)+","+char(34)+"setApplicationVersion(QString version) --> void"+char(34)+","+char(34)+"setAttribute(Qt::ApplicationAttribute attribute, bool on) --> void"+char(34)+","+char(34)+"setcommitDataRequestEvent(char *) --> void"+char(34)+","+char(34)+"setDesktopSettingsAware(bool on) --> void"+char(34)+","+char(34)+"setEventDispatcher(QAbstractEventDispatcher *eventDispatcher) --> void"+char(34)+","+char(34)+"setfocusObjectChangedEvent(char *) --> void"+char(34)+","+char(34)+"setfocusWindowChangedEvent(char *) --> void"+char(34)+","+char(34)+"setFont(QFont font) --> void"+char(34)+","+char(34)+"setfontDatabaseChangedEvent(char *) --> void"+char(34)+","+char(34)+"setlastWindowClosedEvent(char *) --> void"+char(34)+","+char(34)+"setLayoutDirection(Qt::LayoutDirection direction) --> void"+char(34)+","+char(34)+"setlayoutDirectionChangedEvent(char *) --> void"+char(34)+","+char(34)+"setLibraryPaths(QStringList paths) --> void"+char(34)+","+char(34)+"setObjectName(QString) --> void"+char(34)+","+char(34)+"setOrganizationDomain(QString orgDomain) --> void"+char(34)+","+char(34)+"setOrganizationName(QString orgName) --> void"+char(34)+","+char(34)+"setOverrideCursor(QCursor cursor) --> void"+char(34)+","+char(34)+"setPalette(QPalette pal) --> void"+char(34)+","+char(34)+"setpaletteChangedEvent(char *) --> void"+char(34)+","+char(34)+"setParent(QObject *parent) --> void"+char(34)+","+char(34)+"setprimaryScreenChangedEvent(char *) --> void"+char(34)+","+char(34)+"setProperty(char *name, QVariant) --> bool"+char(34)+","+char(34)+"setProperty_2(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_3(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_4(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_5(char *name, QString) --> bool"+char(34)+","+char(34)+"setProperty_double(char *name, double) --> bool"+char(34)+","+char(34)+"setProperty_float(char *name, float) --> bool"+char(34)+","+char(34)+"setProperty_int(char *name, int) --> bool"+char(34)+","+char(34)+"setProperty_string(char *name, QString) --> bool"+char(34)+","+char(34)+"setQuitLockEnabled(bool enabled) --> void"+char(34)+","+char(34)+"setQuitOnLastWindowClosed(bool quit) --> void"+char(34)+","+char(34)+"setsaveStateRequestEvent(char *) --> void"+char(34)+","+char(34)+"setscreenAddedEvent(char *) --> void"+char(34)+","+char(34)+"setscreenRemovedEvent(char *) --> void"+char(34)+","+char(34)+"signalsBlocked(void) --> bool"+char(34)+","+char(34)+"startingUp(void) --> bool"+char(34)+","+char(34)+"startTimer(int interval) --> int"+char(34)+","+char(34)+"styleFusion(void) --> void"+char(34)+","+char(34)+"styleFusionBlack(void) --> void"+char(34)+","+char(34)+"styleFusionCustom(QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor,QColor) --> void"+char(34)+","+char(34)+"styleHints(void) --> QStyleHints"+char(34)+","+char(34)+"styleWindows(void) --> void"+char(34)+","+char(34)+"styleWindowsVista(void) --> void"+char(34)+","+char(34)+"sync(void) --> void"+char(34)+","+char(34)+"testAttribute(Qt::ApplicationAttribute attribute) --> bool"+char(34)+","+char(34)+"thread(void) --> QThread"+char(34)+","+char(34)+"topLevelAt(QPoint pos) --> QWindow"+char(34)+","+char(34)+"topLevelWindows(void) --> QWindowList"+char(34)+","+char(34)+"translate(char *context, char *sourceText, char *disambiguation, int n) --> QString"+char(34)+"];;_RV_;;"
	],
	[
		15,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE3;;_RV_;;rightside;;_RV_;;"+char(34)+"Parameters"+char(34)+";;_RV_;;"
	],
	[
		16,
		1,
		"assignment",
		"02/05/2025",
		"06:15:50",
		"leftside;;_RV_;;T_CT_QAPPCLASS_IP_VALUE4;;_RV_;;rightside;;_RV_;;"+char(34)+"Output"+char(34)+";;_RV_;;"
	]
]

# End of Visual Source File